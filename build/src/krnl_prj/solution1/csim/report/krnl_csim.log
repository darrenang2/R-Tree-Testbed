INFO: [SIM 2] *************** CSIM start ***************
INFO: [SIM 4] CSIM will launch GCC as the compiler.
   Compiling ../../../../../../src/hls/test_krnl.cpp in debug mode
   Compiling ../../../../../../src/hls/krnlInsert.cpp in debug mode
   Compiling ../../../../../../src/hls/areaEnlargementPair.cpp in debug mode
   Compiling ../../../../../../src/hls/overlapEnlargementPair.cpp in debug mode
   Compiling ../../../../../../src/hls/nodeArray.cpp in debug mode
   Compiling ../../../../../../src/hls/node.cpp in debug mode
   Compiling ../../../../../../src/hls/mem_mngr.cpp in debug mode
   Compiling ../../../../../../src/hls/krnl.cpp in debug mode
   Generating csim.exe
(5,16)(31,46)
(12,26)(57,48)
(7,63)(30,72)
(65,87)(78,94)
(56,16)(88,78)
(63,31)(93,97)
(25,8)(92,89)
(6,3)(26,70)
(52,50)(98,77)
(8,5)(42,91)
(15,34)(62,81)
(5,33)(27,94)
New Node: (5,16)-(31,46)
STATE = INIT
no leader creating leader!
Inserting NODE into Tree at 0
Insert successful! 
Get NODE from Tree at 0
STATE = NEWLEAF
STATE = GET_NODE
Inserting NODE into Tree at 1
Insert successful! 
STATE = INSERT_INTERVAL
Insert finished...
New Node: (12,26)-(57,48)
STATE = FIN
Get NODE from Tree at 0
STATE = NEWLEAF
STATE = GET_NODE
Inserting NODE into Tree at 2
Insert successful! 
STATE = INSERT_INTERVAL
Insert finished...
New Node: (7,63)-(30,72)
STATE = FIN
Get NODE from Tree at 0
STATE = NEWLEAF
STATE = GET_NODE
Inserting NODE into Tree at 3
Insert successful! 
STATE = INSERT_INTERVAL
Insert finished...
New Node: (65,87)-(78,94)
STATE = FIN
Get NODE from Tree at 0
STATE = NEWLEAF
STATE = GET_NODE
Inserting NODE into Tree at 4
Insert successful! 
STATE = INSERT_INTERVAL
Insert finished...
New Node: (56,16)-(88,78)
STATE = FIN
Get NODE from Tree at 0
STATE = NEWLEAF
STATE = GET_NODE
Inserting NODE into Tree at 5
Insert successful! 
STATE = INSERT_INTERVAL
Insert finished...
New Node: (63,31)-(93,97)
STATE = FIN
Get NODE from Tree at 0
STATE = NEWLEAF
STATE = GET_NODE
Inserting NODE into Tree at 6
Insert successful! 
STATE = INSERT_INTERVAL
Starting overflow treatment 
Spliting root 
Finding Split axis 
Placing children with split index=3
STATE = OVF
STATE = WAIT
Insert finished...
New Node: (25,8)-(92,89)
STATE = FIN
Get NODE from Tree at 0
STATE = NEWLEAF
STATE = GET_NODE
CST
0 pushed into stack
Adding child to OverlapEnlargementArray 
Adding child to OverlapEnlargementArray 
1: Get NODE from Tree at 1
STATE = INSERT_INTERVAL
STATE = GET_NODE
Inserting NODE into Tree at 10
Insert successful! 
STATE = INSERT_INTERVAL
Insert finished...
New Node: (6,3)-(26,70)
STATE = FIN
Get NODE from Tree at 0
STATE = NEWLEAF
STATE = GET_NODE
CST
0 pushed into stack
Adding child to OverlapEnlargementArray 
Adding child to OverlapEnlargementArray 
1: Get NODE from Tree at 1
STATE = INSERT_INTERVAL
STATE = GET_NODE
Inserting NODE into Tree at 11
Insert successful! 
STATE = INSERT_INTERVAL
Insert finished...
New Node: (52,50)-(98,77)
STATE = FIN
Get NODE from Tree at 0
STATE = NEWLEAF
STATE = GET_NODE
CST
0 pushed into stack
Adding child to OverlapEnlargementArray 
Adding child to OverlapEnlargementArray 
1: Get NODE from Tree at 1
STATE = INSERT_INTERVAL
STATE = GET_NODE
Inserting NODE into Tree at 12
Insert successful! 
STATE = INSERT_INTERVAL
Starting overflow treatment 
spliting intermediate node: 1
Finding Split axis 
Placing children with split index=3
STATE = OVF
STATE = WAIT
Insert finished...
New Node: (8,5)-(42,91)
STATE = FIN
Get NODE from Tree at 0
STATE = NEWLEAF
STATE = GET_NODE
CST
0 pushed into stack
Adding child to OverlapEnlargementArray 
Adding child to OverlapEnlargementArray 
1: Get NODE from Tree at 1
STATE = INSERT_INTERVAL
0: (5,3)(98,97) 
1: (0,0)(98,77) 2: (25,8)(93,97) 
7: (6,3)(26,70) 9: (52,50)(98,77) 13: (25,8)(92,89) 14: (65,87)(78,94) 15: (63,31)(93,97) 
INFO [HLS SIM]: The maximum depth reached by any hls::stream() instance in the design is 6
INFO: [SIM 1] CSim done with 0 errors.
INFO: [SIM 3] *************** CSIM finish ***************
