-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity krnl_insert is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    newLeaf2insert_dout : IN STD_LOGIC_VECTOR (416 downto 0);
    newLeaf2insert_empty_n : IN STD_LOGIC;
    newLeaf2insert_read : OUT STD_LOGIC;
    insertNode4insert_din : OUT STD_LOGIC_VECTOR (416 downto 0);
    insertNode4insert_full_n : IN STD_LOGIC;
    insertNode4insert_write : OUT STD_LOGIC;
    getNode4insert2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    getNode4insert2_full_n : IN STD_LOGIC;
    getNode4insert2_write : OUT STD_LOGIC;
    receiveNode4insert_dout : IN STD_LOGIC_VECTOR (416 downto 0);
    receiveNode4insert_empty_n : IN STD_LOGIC;
    receiveNode4insert_read : OUT STD_LOGIC;
    writeChanges4insert_din : OUT STD_LOGIC_VECTOR (416 downto 0);
    writeChanges4insert_full_n : IN STD_LOGIC;
    writeChanges4insert_write : OUT STD_LOGIC;
    overflow2split_din : OUT STD_LOGIC_VECTOR (416 downto 0);
    overflow2split_full_n : IN STD_LOGIC;
    overflow2split_write : OUT STD_LOGIC;
    cst_req_din : OUT STD_LOGIC_VECTOR (416 downto 0);
    cst_req_full_n : IN STD_LOGIC;
    cst_req_write : OUT STD_LOGIC;
    split2overflow_dout : IN STD_LOGIC_VECTOR (416 downto 0);
    split2overflow_empty_n : IN STD_LOGIC;
    split2overflow_read : OUT STD_LOGIC;
    insertFinished3_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    insertFinished3_full_n : IN STD_LOGIC;
    insertFinished3_write : OUT STD_LOGIC );
end;


architecture behav of krnl_insert is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (25 downto 0) := "00000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (25 downto 0) := "00000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (25 downto 0) := "00000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (25 downto 0) := "00000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (25 downto 0) := "00000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (25 downto 0) := "00000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (25 downto 0) := "00001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (25 downto 0) := "00010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (25 downto 0) := "00100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (25 downto 0) := "01000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (25 downto 0) := "10000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv3_4_1 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5_2 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4_3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5_4 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_2_5 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_2_6 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1_7 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2_8 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1_9 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_1_10 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_C1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000001";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_161 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100001";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_181 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000001";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_61 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100001";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_81 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000001";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_A1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100001";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_E1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100001";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_101 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000001";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_121 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100001";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_141 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000001";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv96_0 : STD_LOGIC_VECTOR (95 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv385_lc_1 : STD_LOGIC_VECTOR (384 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111111111111111111111111111100000000000000000000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal state : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal addLeaf : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal received : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal cur_hasLeaves : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal wait_r : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal newLeaf_index : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    signal newLeaf_parent : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    signal newLeaf_hasLeaves : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal newLeaf_child_5 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    signal newLeaf_child_4 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    signal newLeaf_child_3 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    signal newLeaf_child_2 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    signal newLeaf_child_1 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    signal newLeaf_child : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    signal newLeaf_amount_of_children : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal cur_index : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    signal cur_parent : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    signal cur_box_minX : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal cur_box_maxX : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal cur_box_minY : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal cur_box_maxY : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal cur_amount_of_children : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal newLeaf_box_minX : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal newLeaf_box_maxX : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal newLeaf_box_minY : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal newLeaf_box_maxY : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal root_index : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal cur_child_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal cur_child_ce0 : STD_LOGIC;
    signal cur_child_we0 : STD_LOGIC;
    signal cur_child_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cur_child_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cur_child_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal cur_child_ce1 : STD_LOGIC;
    signal cur_child_we1 : STD_LOGIC;
    signal cur_child_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal cur_child_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal newLeaf2insert_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_phi_mux_empty_phi_fu_561_p26 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_nbreadreq_fu_256_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal insertNode4insert_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal cur_hasLeaves_load_reg_2149 : STD_LOGIC_VECTOR (0 downto 0);
    signal getNode4insert2_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal receiveNode4insert_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal writeChanges4insert_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal empty_reg_553 : STD_LOGIC_VECTOR (2 downto 0);
    signal overflow2split_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal cst_req_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal split2overflow_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal insertFinished3_blk_n : STD_LOGIC;
    signal reg_849 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal reg_854 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_859 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal reg_864 : STD_LOGIC_VECTOR (31 downto 0);
    signal state_load_load_fu_869_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal state_load_reg_2139 : STD_LOGIC_VECTOR (2 downto 0);
    signal cur_hasLeaves_load_load_fu_881_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal wait_load_load_fu_885_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal wait_load_reg_2155 : STD_LOGIC_VECTOR (0 downto 0);
    signal newLeaf_index_load_reg_2165 : STD_LOGIC_VECTOR (31 downto 0);
    signal newLeaf_parent_load_reg_2171 : STD_LOGIC_VECTOR (31 downto 0);
    signal newLeaf_hasLeaves_load_reg_2177 : STD_LOGIC_VECTOR (0 downto 0);
    signal newLeaf_child_5_load_reg_2183 : STD_LOGIC_VECTOR (31 downto 0);
    signal newLeaf_child_4_load_reg_2189 : STD_LOGIC_VECTOR (31 downto 0);
    signal newLeaf_child_3_load_reg_2195 : STD_LOGIC_VECTOR (31 downto 0);
    signal newLeaf_child_2_load_reg_2201 : STD_LOGIC_VECTOR (31 downto 0);
    signal newLeaf_child_1_load_reg_2207 : STD_LOGIC_VECTOR (31 downto 0);
    signal newLeaf_child_load_reg_2213 : STD_LOGIC_VECTOR (31 downto 0);
    signal newLeaf_amount_of_children_load_reg_2219 : STD_LOGIC_VECTOR (31 downto 0);
    signal cur_index_load_reg_2225 : STD_LOGIC_VECTOR (31 downto 0);
    signal cur_parent_load_load_fu_1011_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal cur_parent_load_reg_2236 : STD_LOGIC_VECTOR (31 downto 0);
    signal base_minX_reg_2243 : STD_LOGIC_VECTOR (31 downto 0);
    signal base_maxX_reg_2248 : STD_LOGIC_VECTOR (31 downto 0);
    signal base_minY_reg_2253 : STD_LOGIC_VECTOR (31 downto 0);
    signal base_maxY_reg_2258 : STD_LOGIC_VECTOR (31 downto 0);
    signal cur_amount_of_children_load_reg_2263 : STD_LOGIC_VECTOR (31 downto 0);
    signal st_minX_reg_2275 : STD_LOGIC_VECTOR (31 downto 0);
    signal st_maxX_reg_2281 : STD_LOGIC_VECTOR (31 downto 0);
    signal st_minY_reg_2287 : STD_LOGIC_VECTOR (31 downto 0);
    signal st_maxY_reg_2293 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln31_fu_1057_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln31_reg_2299 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln32_fu_1071_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln32_reg_2305 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln33_fu_1085_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln33_reg_2311 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln34_fu_1099_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln34_reg_2317 : STD_LOGIC_VECTOR (31 downto 0);
    signal newLeaf2insert_read_reg_2336 : STD_LOGIC_VECTOR (416 downto 0);
    signal trunc_ln304_s_reg_2341 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_reg_2346 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_reg_2351 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_59_reg_2356 : STD_LOGIC_VECTOR (31 downto 0);
    signal root_index_load_load_fu_1352_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal root_index_load_reg_2361 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln359_1_reg_2372 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_77_reg_2377 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_78_reg_2382 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_79_reg_2387 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln334_fu_1648_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln334_reg_2398 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal cur_child_addr_reg_2403 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln334_fu_1642_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln336_fu_1689_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln336_reg_2411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal icmp_ln335_fu_1654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln339_fu_1706_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal trunc_ln326_1_reg_2422 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_reg_2427 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_70_reg_2432 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_71_reg_2437 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal icmp_ln34_2_fu_1951_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_reg_2455 : STD_LOGIC_VECTOR (127 downto 0);
    signal root_child_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal root_child_load_reg_2460 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal root_child_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal root_child_load_1_reg_2465 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln316_fu_1997_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln316_reg_2480 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal select_ln316_1_fu_2005_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln316_1_reg_2485 : STD_LOGIC_VECTOR (31 downto 0);
    signal root_child_load_2_reg_2490 : STD_LOGIC_VECTOR (0 downto 0);
    signal root_child_load_3_reg_2495 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln316_4_fu_2029_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln316_4_reg_2510 : STD_LOGIC_VECTOR (31 downto 0);
    signal root_child_load_5_reg_2515 : STD_LOGIC_VECTOR (0 downto 0);
    signal root_child_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal root_child_ce0 : STD_LOGIC;
    signal root_child_we0 : STD_LOGIC;
    signal root_child_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal root_child_ce1 : STD_LOGIC;
    signal ap_phi_mux_addLeaf_flag_0_phi_fu_417_p26 : STD_LOGIC_VECTOR (0 downto 0);
    signal addLeaf_flag_0_reg_412 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op135_read_state2 : BOOLEAN;
    signal ap_block_state2 : BOOLEAN;
    signal grp_fu_843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal received_load_load_fu_877_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal addLeaf_load_load_fu_873_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_received_flag_0_phi_fu_464_p26 : STD_LOGIC_VECTOR (0 downto 0);
    signal received_flag_0_reg_459 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_wait_flag_0_phi_fu_511_p26 : STD_LOGIC_VECTOR (0 downto 0);
    signal wait_flag_0_reg_506 : STD_LOGIC_VECTOR (0 downto 0);
    signal newLeaf_index_loc_0_reg_603 : STD_LOGIC_VECTOR (31 downto 0);
    signal newLeaf_parent_loc_0_reg_612 : STD_LOGIC_VECTOR (31 downto 0);
    signal cur_amount_of_children_loc_0_reg_621 : STD_LOGIC_VECTOR (31 downto 0);
    signal cur_amount_of_children_loc_1_reg_631 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state12 : BOOLEAN;
    signal ap_phi_mux_addLeaf_flag_2_phi_fu_646_p18 : STD_LOGIC_VECTOR (0 downto 0);
    signal addLeaf_flag_2_reg_642 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal tmp_s_nbreadreq_fu_240_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_55_nbreadreq_fu_232_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state18 : BOOLEAN;
    signal ap_phi_mux_addLeaf_new_2_phi_fu_680_p18 : STD_LOGIC_VECTOR (0 downto 0);
    signal addLeaf_new_2_reg_675 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_received_flag_2_phi_fu_713_p18 : STD_LOGIC_VECTOR (0 downto 0);
    signal received_flag_2_reg_709 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_received_new_2_phi_fu_747_p18 : STD_LOGIC_VECTOR (0 downto 0);
    signal received_new_2_reg_742 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_wait_flag_2_phi_fu_780_p18 : STD_LOGIC_VECTOR (0 downto 0);
    signal wait_flag_2_reg_776 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_wait_new_2_phi_fu_814_p18 : STD_LOGIC_VECTOR (0 downto 0);
    signal wait_new_2_reg_809 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln334_fu_1637_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_fu_1946_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln304_fu_1136_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln326_fu_1761_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln359_fu_1361_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_fu_224 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_12_fu_228 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln34_fu_1957_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_3_fu_1568_p15 : STD_LOGIC_VECTOR (416 downto 0);
    signal p_4_fu_1594_p15 : STD_LOGIC_VECTOR (416 downto 0);
    signal p_5_fu_1613_p15 : STD_LOGIC_VECTOR (416 downto 0);
    signal zext_ln316_fu_2096_p1 : STD_LOGIC_VECTOR (416 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal select_ln316_2_fu_2013_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln316_3_fu_2021_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln316_5_fu_2107_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln31_fu_1051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln32_fu_1065_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln33_fu_1079_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln34_fu_1093_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln336_fu_1667_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln336_1_fu_1672_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln336_fu_1677_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln336_fu_1664_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln336_fu_1683_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_81_fu_2037_p9 : STD_LOGIC_VECTOR (384 downto 0);
    signal or_ln316_fu_2054_p2 : STD_LOGIC_VECTOR (384 downto 0);
    signal tmp_25_fu_2060_p4 : STD_LOGIC_VECTOR (288 downto 0);
    signal sext_ln316_fu_2070_p1 : STD_LOGIC_VECTOR (319 downto 0);
    signal tmp_82_fu_2074_p4 : STD_LOGIC_VECTOR (32 downto 0);
    signal or_ln316_8_fu_2084_p5 : STD_LOGIC_VECTOR (385 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_condition_548 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component krnl_insert_cur_child_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component krnl_insert_root_child_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    cur_child_U : component krnl_insert_cur_child_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cur_child_address0,
        ce0 => cur_child_ce0,
        we0 => cur_child_we0,
        d0 => cur_child_d0,
        q0 => cur_child_q0,
        address1 => cur_child_address1,
        ce1 => cur_child_ce1,
        we1 => cur_child_we1,
        d1 => cur_child_d1,
        q1 => cur_child_q1);

    root_child_U : component krnl_insert_root_child_RAM_AUTO_1R1W
    generic map (
        DataWidth => 1,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => root_child_address0,
        ce0 => root_child_ce0,
        we0 => root_child_we0,
        d0 => ap_const_lv1_1,
        q0 => root_child_q0,
        address1 => root_child_address1,
        ce1 => root_child_ce1,
        q1 => root_child_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    addLeaf_flag_0_reg_412_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv1_1 = addLeaf_load_load_fu_873_p1))) then 
                addLeaf_flag_0_reg_412 <= ap_const_lv1_1;
            elsif ((((ap_const_lv1_0 = addLeaf_load_load_fu_873_p1) and (ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((received_load_load_fu_877_p1 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((received_load_load_fu_877_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (grp_fu_843_p2 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state2) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (grp_fu_843_p2 = ap_const_lv1_0) and (wait_load_reg_2155 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (grp_fu_843_p2 = ap_const_lv1_1) and (state_load_reg_2139 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state2) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (grp_fu_843_p2 = ap_const_lv1_1) and (wait_load_reg_2155 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (cur_hasLeaves_load_load_fu_881_p1 = ap_const_lv1_0) and (state_load_load_fu_869_p1 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (wait_load_load_fu_885_p1 = ap_const_lv1_1) and (state_load_load_fu_869_p1 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and ((state_load_load_fu_869_p1 = ap_const_lv3_0) or (state_load_load_fu_869_p1 = ap_const_lv3_7))))) then 
                addLeaf_flag_0_reg_412 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    addLeaf_flag_2_reg_642_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((getNode4insert2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                addLeaf_flag_2_reg_642 <= ap_const_lv1_1;
            elsif (((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (tmp_55_nbreadreq_fu_232_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_5)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (tmp_s_nbreadreq_fu_240_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_2)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_5)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_4)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_2)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_256_p3 = ap_const_lv1_0)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) then 
                addLeaf_flag_2_reg_642 <= ap_phi_mux_addLeaf_flag_0_phi_fu_417_p26;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state21) or (not(((writeChanges4insert_full_n = ap_const_logic_0) and (empty_reg_553 = ap_const_lv3_3))) and (ap_const_logic_1 = ap_CS_fsm_state18) and (empty_reg_553 = ap_const_lv3_3)) or ((overflow2split_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                addLeaf_flag_2_reg_642 <= addLeaf_flag_0_reg_412;
            end if; 
        end if;
    end process;

    addLeaf_new_2_reg_675_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((getNode4insert2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                addLeaf_new_2_reg_675 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state21) or (not(((writeChanges4insert_full_n = ap_const_logic_0) and (empty_reg_553 = ap_const_lv3_3))) and (ap_const_logic_1 = ap_CS_fsm_state18) and (empty_reg_553 = ap_const_lv3_3)) or ((overflow2split_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (tmp_55_nbreadreq_fu_232_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_5)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (tmp_s_nbreadreq_fu_240_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_2)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_5)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_4)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_2)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_256_p3 = ap_const_lv1_0)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) then 
                addLeaf_new_2_reg_675 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    cur_amount_of_children_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((split2overflow_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                cur_amount_of_children <= split2overflow_dout(416 downto 385);
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                cur_amount_of_children <= add_ln339_fu_1706_p2;
            elsif (((receiveNode4insert_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                cur_amount_of_children <= receiveNode4insert_dout(416 downto 385);
            elsif (((getNode4insert2_full_n = ap_const_logic_1) and (root_index_load_reg_2361 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                cur_amount_of_children <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    cur_amount_of_children_loc_0_reg_621_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln334_fu_1642_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                cur_amount_of_children_loc_0_reg_621 <= cur_amount_of_children_load_reg_2263;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                cur_amount_of_children_loc_0_reg_621 <= add_ln339_fu_1706_p2;
            end if; 
        end if;
    end process;

    cur_amount_of_children_loc_1_reg_631_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_548)) then
                if ((cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) then 
                    cur_amount_of_children_loc_1_reg_631 <= cur_amount_of_children_loc_0_reg_621;
                elsif ((cur_hasLeaves_load_reg_2149 = ap_const_lv1_0)) then 
                    cur_amount_of_children_loc_1_reg_631 <= cur_amount_of_children_load_reg_2263;
                end if;
            end if; 
        end if;
    end process;

    cur_box_maxX_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3))) then 
                cur_box_maxX <= select_ln31_fu_1057_p3;
            elsif (((split2overflow_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                cur_box_maxX <= split2overflow_dout(128 downto 97);
            elsif (((receiveNode4insert_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                cur_box_maxX <= receiveNode4insert_dout(128 downto 97);
            elsif (((icmp_ln34_2_fu_1951_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                cur_box_maxX <= tmp_57_reg_2346;
            end if; 
        end if;
    end process;

    cur_box_maxY_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3))) then 
                cur_box_maxY <= select_ln32_fu_1071_p3;
            elsif (((split2overflow_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                cur_box_maxY <= split2overflow_dout(192 downto 161);
            elsif (((receiveNode4insert_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                cur_box_maxY <= receiveNode4insert_dout(192 downto 161);
            elsif (((icmp_ln34_2_fu_1951_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                cur_box_maxY <= tmp_59_reg_2356;
            end if; 
        end if;
    end process;

    cur_box_minX_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3))) then 
                cur_box_minX <= select_ln33_fu_1085_p3;
            elsif (((split2overflow_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                cur_box_minX <= split2overflow_dout(96 downto 65);
            elsif (((receiveNode4insert_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                cur_box_minX <= receiveNode4insert_dout(96 downto 65);
            elsif (((icmp_ln34_2_fu_1951_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                cur_box_minX <= trunc_ln304_s_reg_2341;
            end if; 
        end if;
    end process;

    cur_box_minY_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3))) then 
                cur_box_minY <= select_ln34_fu_1099_p3;
            elsif (((split2overflow_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                cur_box_minY <= split2overflow_dout(160 downto 129);
            elsif (((receiveNode4insert_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                cur_box_minY <= receiveNode4insert_dout(160 downto 129);
            elsif (((icmp_ln34_2_fu_1951_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                cur_box_minY <= tmp_58_reg_2351;
            end if; 
        end if;
    end process;

    cur_hasLeaves_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((split2overflow_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                cur_hasLeaves <= split2overflow_dout(64 downto 64);
            elsif (((receiveNode4insert_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                cur_hasLeaves <= receiveNode4insert_dout(64 downto 64);
            elsif (((getNode4insert2_full_n = ap_const_logic_1) and (root_index_load_reg_2361 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                cur_hasLeaves <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    cur_index_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((split2overflow_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                cur_index <= trunc_ln359_fu_1361_p1;
            elsif (((receiveNode4insert_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                cur_index <= trunc_ln326_fu_1761_p1;
            elsif (((getNode4insert2_full_n = ap_const_logic_1) and (root_index_load_reg_2361 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                cur_index <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    cur_parent_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((split2overflow_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                cur_parent <= split2overflow_dout(63 downto 32);
            elsif (((receiveNode4insert_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                cur_parent <= receiveNode4insert_dout(63 downto 32);
            elsif (((getNode4insert2_full_n = ap_const_logic_1) and (root_index_load_reg_2361 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                cur_parent <= ap_const_lv32_FFFFFFFF;
            end if; 
        end if;
    end process;

    empty_reg_553_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((received_load_load_fu_877_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                empty_reg_553 <= ap_const_lv3_3;
            elsif ((((received_load_load_fu_877_p1 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv1_1 = addLeaf_load_load_fu_873_p1)) or ((ap_start = ap_const_logic_1) and (cur_hasLeaves_load_load_fu_881_p1 = ap_const_lv1_0) and (state_load_load_fu_869_p1 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                empty_reg_553 <= ap_const_lv3_2;
            elsif (((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (grp_fu_843_p2 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state2) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (grp_fu_843_p2 = ap_const_lv1_0) and (wait_load_reg_2155 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
                empty_reg_553 <= ap_const_lv3_4;
            elsif (((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (grp_fu_843_p2 = ap_const_lv1_1) and (wait_load_reg_2155 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                empty_reg_553 <= ap_const_lv3_5;
            elsif (((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (grp_fu_843_p2 = ap_const_lv1_1) and (state_load_reg_2139 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state2) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (wait_load_load_fu_885_p1 = ap_const_lv1_1) and (state_load_load_fu_869_p1 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                empty_reg_553 <= ap_const_lv3_6;
            elsif ((((ap_const_lv1_0 = addLeaf_load_load_fu_873_p1) and (ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and ((state_load_load_fu_869_p1 = ap_const_lv3_0) or (state_load_load_fu_869_p1 = ap_const_lv3_7))))) then 
                empty_reg_553 <= ap_const_lv3_1;
            end if; 
        end if;
    end process;

    i_12_fu_228_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_5)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_4)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_2)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)) and (root_index_load_load_fu_1352_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_256_p3 = ap_const_lv1_1))) then 
                i_12_fu_228 <= ap_const_lv3_0;
            elsif (((icmp_ln34_2_fu_1951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                i_12_fu_228 <= add_ln34_fu_1957_p2;
            end if; 
        end if;
    end process;

    i_fu_224_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3))) then 
                i_fu_224 <= ap_const_lv3_0;
            elsif (((icmp_ln335_fu_1654_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                i_fu_224 <= add_ln334_reg_2398;
            end if; 
        end if;
    end process;

    newLeaf_index_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_5)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_4)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_2)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_256_p3 = ap_const_lv1_1))) then 
                newLeaf_index <= trunc_ln304_fu_1136_p1;
            elsif (((icmp_ln335_fu_1654_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                newLeaf_index <= add_ln336_fu_1689_p2;
            end if; 
        end if;
    end process;

    newLeaf_index_loc_0_reg_603_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln334_fu_1642_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                newLeaf_index_loc_0_reg_603 <= newLeaf_index_load_reg_2165;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                newLeaf_index_loc_0_reg_603 <= add_ln336_reg_2411;
            end if; 
        end if;
    end process;

    newLeaf_parent_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_5)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_4)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_2)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_256_p3 = ap_const_lv1_1))) then 
                newLeaf_parent <= newLeaf2insert_dout(63 downto 32);
            elsif (((icmp_ln335_fu_1654_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                newLeaf_parent <= cur_index_load_reg_2225;
            end if; 
        end if;
    end process;

    newLeaf_parent_loc_0_reg_612_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln334_fu_1642_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                newLeaf_parent_loc_0_reg_612 <= newLeaf_parent_load_reg_2171;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                newLeaf_parent_loc_0_reg_612 <= cur_index_load_reg_2225;
            end if; 
        end if;
    end process;

    received_flag_0_reg_459_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((received_load_load_fu_877_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                received_flag_0_reg_459 <= ap_const_lv1_1;
            elsif ((((ap_const_lv1_0 = addLeaf_load_load_fu_873_p1) and (ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((received_load_load_fu_877_p1 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (grp_fu_843_p2 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state2) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (grp_fu_843_p2 = ap_const_lv1_0) and (wait_load_reg_2155 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (grp_fu_843_p2 = ap_const_lv1_1) and (state_load_reg_2139 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state2) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (grp_fu_843_p2 = ap_const_lv1_1) and (wait_load_reg_2155 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv1_1 = addLeaf_load_load_fu_873_p1)) or ((ap_start = ap_const_logic_1) and (cur_hasLeaves_load_load_fu_881_p1 = ap_const_lv1_0) and (state_load_load_fu_869_p1 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (wait_load_load_fu_885_p1 = ap_const_lv1_1) and (state_load_load_fu_869_p1 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and ((state_load_load_fu_869_p1 = ap_const_lv3_0) or (state_load_load_fu_869_p1 = ap_const_lv3_7))))) then 
                received_flag_0_reg_459 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    received_flag_2_reg_709_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                received_flag_2_reg_709 <= ap_const_lv1_1;
            elsif (((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (tmp_55_nbreadreq_fu_232_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_5)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (tmp_s_nbreadreq_fu_240_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_2)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_5)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_4)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_2)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_256_p3 = ap_const_lv1_0)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) then 
                received_flag_2_reg_709 <= ap_phi_mux_received_flag_0_phi_fu_464_p26;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((getNode4insert2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26)) or (not(((writeChanges4insert_full_n = ap_const_logic_0) and (empty_reg_553 = ap_const_lv3_3))) and (ap_const_logic_1 = ap_CS_fsm_state18) and (empty_reg_553 = ap_const_lv3_3)) or ((overflow2split_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                received_flag_2_reg_709 <= received_flag_0_reg_459;
            end if; 
        end if;
    end process;

    received_new_2_reg_742_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                received_new_2_reg_742 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((getNode4insert2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26)) or (not(((writeChanges4insert_full_n = ap_const_logic_0) and (empty_reg_553 = ap_const_lv3_3))) and (ap_const_logic_1 = ap_CS_fsm_state18) and (empty_reg_553 = ap_const_lv3_3)) or ((overflow2split_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (tmp_55_nbreadreq_fu_232_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_5)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (tmp_s_nbreadreq_fu_240_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_2)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_5)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_4)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_2)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_256_p3 = ap_const_lv1_0)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) then 
                received_new_2_reg_742 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    reg_849_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                reg_849 <= cur_child_q0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                reg_849 <= cur_child_q1;
            end if; 
        end if;
    end process;

    reg_854_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                reg_854 <= cur_child_q1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                reg_854 <= cur_child_q0;
            end if; 
        end if;
    end process;

    reg_859_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                reg_859 <= cur_child_q1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_859 <= cur_child_q0;
            end if; 
        end if;
    end process;

    reg_864_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                reg_864 <= cur_child_q0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_864 <= cur_child_q1;
            end if; 
        end if;
    end process;

    state_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and ((state_load_load_fu_869_p1 = ap_const_lv3_0) or (state_load_load_fu_869_p1 = ap_const_lv3_7)))) then 
                state <= ap_const_lv3_1_10;
            elsif (((ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                state <= ap_const_lv3_1_9;
            elsif (((ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv1_1 = addLeaf_load_load_fu_873_p1))) then 
                state <= ap_const_lv3_2_8;
            elsif (((ap_const_lv1_0 = addLeaf_load_load_fu_873_p1) and (ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                state <= ap_const_lv3_1_7;
            elsif (((received_load_load_fu_877_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                state <= ap_const_lv3_3;
            elsif (((received_load_load_fu_877_p1 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                state <= ap_const_lv3_2_6;
            elsif (((ap_start = ap_const_logic_1) and (cur_hasLeaves_load_load_fu_881_p1 = ap_const_lv1_0) and (state_load_load_fu_869_p1 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                state <= ap_const_lv3_2_5;
            elsif (((ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                state <= ap_const_lv3_5_4;
            elsif (((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (grp_fu_843_p2 = ap_const_lv1_1) and (state_load_reg_2139 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state2) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (wait_load_load_fu_885_p1 = ap_const_lv1_1) and (state_load_load_fu_869_p1 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                state <= ap_const_lv3_6;
            elsif ((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (grp_fu_843_p2 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state2) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1))) then 
                state <= ap_const_lv3_4_3;
            elsif ((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (grp_fu_843_p2 = ap_const_lv1_1) and (wait_load_reg_2155 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                state <= ap_const_lv3_5_2;
            elsif ((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (grp_fu_843_p2 = ap_const_lv1_0) and (wait_load_reg_2155 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                state <= ap_const_lv3_4_1;
            end if; 
        end if;
    end process;

    wait_flag_0_reg_506_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (wait_load_load_fu_885_p1 = ap_const_lv1_1) and (state_load_load_fu_869_p1 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                wait_flag_0_reg_506 <= ap_const_lv1_1;
            elsif ((((ap_const_lv1_0 = addLeaf_load_load_fu_873_p1) and (ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((received_load_load_fu_877_p1 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((received_load_load_fu_877_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (grp_fu_843_p2 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state2) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (grp_fu_843_p2 = ap_const_lv1_0) and (wait_load_reg_2155 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (grp_fu_843_p2 = ap_const_lv1_1) and (state_load_reg_2139 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state2) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (grp_fu_843_p2 = ap_const_lv1_1) and (wait_load_reg_2155 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv1_1 = addLeaf_load_load_fu_873_p1)) or ((ap_start = ap_const_logic_1) and (cur_hasLeaves_load_load_fu_881_p1 = ap_const_lv1_0) and (state_load_load_fu_869_p1 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (state_load_load_fu_869_p1 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and ((state_load_load_fu_869_p1 = ap_const_lv3_0) or (state_load_load_fu_869_p1 = ap_const_lv3_7))))) then 
                wait_flag_0_reg_506 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    wait_flag_2_reg_776_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                wait_flag_2_reg_776 <= ap_const_lv1_1;
            elsif (((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (tmp_55_nbreadreq_fu_232_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_5)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (tmp_s_nbreadreq_fu_240_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_2)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_5)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_4)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_2)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_256_p3 = ap_const_lv1_0)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) then 
                wait_flag_2_reg_776 <= ap_phi_mux_wait_flag_0_phi_fu_511_p26;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or ((getNode4insert2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26)) or (not(((writeChanges4insert_full_n = ap_const_logic_0) and (empty_reg_553 = ap_const_lv3_3))) and (ap_const_logic_1 = ap_CS_fsm_state18) and (empty_reg_553 = ap_const_lv3_3)) or ((overflow2split_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                wait_flag_2_reg_776 <= wait_flag_0_reg_506;
            end if; 
        end if;
    end process;

    wait_new_2_reg_809_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                wait_new_2_reg_809 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or ((getNode4insert2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26)) or (not(((writeChanges4insert_full_n = ap_const_logic_0) and (empty_reg_553 = ap_const_lv3_3))) and (ap_const_logic_1 = ap_CS_fsm_state18) and (empty_reg_553 = ap_const_lv3_3)) or ((overflow2split_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (tmp_55_nbreadreq_fu_232_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_5)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (tmp_s_nbreadreq_fu_240_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_2)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_5)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_4)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_2)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_256_p3 = ap_const_lv1_0)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) then 
                wait_new_2_reg_809 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((writeChanges4insert_full_n = ap_const_logic_0) and (empty_reg_553 = ap_const_lv3_3))) and (ap_phi_mux_addLeaf_flag_2_phi_fu_646_p18 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                addLeaf <= ap_phi_mux_addLeaf_new_2_phi_fu_680_p18;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                add_ln334_reg_2398 <= add_ln334_fu_1648_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln335_fu_1654_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                add_ln336_reg_2411 <= add_ln336_fu_1689_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                base_maxX_reg_2248 <= cur_box_maxX;
                base_maxY_reg_2258 <= cur_box_maxY;
                base_minX_reg_2243 <= cur_box_minX;
                base_minY_reg_2253 <= cur_box_minY;
                cur_amount_of_children_load_reg_2263 <= cur_amount_of_children;
                cur_index_load_reg_2225 <= cur_index;
                cur_parent_load_load_fu_1011_p1 <= cur_parent;
                cur_parent_load_reg_2236 <= cur_parent_load_load_fu_1011_p1;
                newLeaf_amount_of_children_load_reg_2219 <= newLeaf_amount_of_children;
                newLeaf_child_1_load_reg_2207 <= newLeaf_child_1;
                newLeaf_child_2_load_reg_2201 <= newLeaf_child_2;
                newLeaf_child_3_load_reg_2195 <= newLeaf_child_3;
                newLeaf_child_4_load_reg_2189 <= newLeaf_child_4;
                newLeaf_child_5_load_reg_2183 <= newLeaf_child_5;
                newLeaf_child_load_reg_2213 <= newLeaf_child;
                newLeaf_hasLeaves_load_reg_2177 <= newLeaf_hasLeaves;
                newLeaf_index_load_reg_2165 <= newLeaf_index;
                newLeaf_parent_load_reg_2171 <= newLeaf_parent;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln334_fu_1642_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                cur_child_addr_reg_2403 <= zext_ln334_fu_1637_p1(3 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                cur_hasLeaves_load_reg_2149 <= cur_hasLeaves;
                state_load_reg_2139 <= state;
                wait_load_reg_2155 <= wait_r;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_5)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_4)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_2)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_256_p3 = ap_const_lv1_1))) then
                newLeaf2insert_read_reg_2336 <= newLeaf2insert_dout;
                root_index_load_reg_2361 <= root_index;
                tmp_57_reg_2346 <= newLeaf2insert_dout(128 downto 97);
                tmp_58_reg_2351 <= newLeaf2insert_dout(160 downto 129);
                tmp_59_reg_2356 <= newLeaf2insert_dout(192 downto 161);
                trunc_ln304_s_reg_2341 <= newLeaf2insert_dout(96 downto 65);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_5)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_4)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_2)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_256_p3 = ap_const_lv1_1))) then
                newLeaf_amount_of_children <= newLeaf2insert_dout(416 downto 385);
                newLeaf_box_maxX <= newLeaf2insert_dout(128 downto 97);
                newLeaf_box_maxY <= newLeaf2insert_dout(192 downto 161);
                newLeaf_box_minX <= newLeaf2insert_dout(96 downto 65);
                newLeaf_box_minY <= newLeaf2insert_dout(160 downto 129);
                newLeaf_child <= newLeaf2insert_dout(384 downto 353);
                newLeaf_child_1 <= newLeaf2insert_dout(352 downto 321);
                newLeaf_child_2 <= newLeaf2insert_dout(320 downto 289);
                newLeaf_child_3 <= newLeaf2insert_dout(288 downto 257);
                newLeaf_child_4 <= newLeaf2insert_dout(256 downto 225);
                newLeaf_child_5 <= newLeaf2insert_dout(224 downto 193);
                newLeaf_hasLeaves <= newLeaf2insert_dout(64 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((writeChanges4insert_full_n = ap_const_logic_0) and (empty_reg_553 = ap_const_lv3_3))) and (ap_phi_mux_received_flag_2_phi_fu_713_p18 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                received <= ap_phi_mux_received_new_2_phi_fu_747_p18;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                root_child_load_1_reg_2465 <= root_child_q0;
                root_child_load_reg_2460 <= root_child_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                root_child_load_2_reg_2490 <= root_child_q0;
                root_child_load_3_reg_2495 <= root_child_q1;
                select_ln316_1_reg_2485 <= select_ln316_1_fu_2005_p3;
                select_ln316_reg_2480 <= select_ln316_fu_1997_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                root_child_load_5_reg_2515 <= root_child_q1;
                select_ln316_4_reg_2510 <= select_ln316_4_fu_2029_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((getNode4insert2_full_n = ap_const_logic_1) and (root_index_load_reg_2361 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                root_index <= ap_const_lv1_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3))) then
                select_ln31_reg_2299 <= select_ln31_fu_1057_p3;
                select_ln32_reg_2305 <= select_ln32_fu_1071_p3;
                select_ln33_reg_2311 <= select_ln33_fu_1085_p3;
                select_ln34_reg_2317 <= select_ln34_fu_1099_p3;
                st_maxX_reg_2281 <= newLeaf_box_maxX;
                st_maxY_reg_2293 <= newLeaf_box_maxY;
                st_minX_reg_2275 <= newLeaf_box_minX;
                st_minY_reg_2287 <= newLeaf_box_minY;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                tmp_69_reg_2427 <= receiveNode4insert_dout(288 downto 257);
                tmp_70_reg_2432 <= receiveNode4insert_dout(320 downto 289);
                tmp_71_reg_2437 <= receiveNode4insert_dout(352 downto 321);
                trunc_ln326_1_reg_2422 <= receiveNode4insert_dout(384 downto 353);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                tmp_77_reg_2377 <= split2overflow_dout(288 downto 257);
                tmp_78_reg_2382 <= split2overflow_dout(320 downto 289);
                tmp_79_reg_2387 <= split2overflow_dout(352 downto 321);
                trunc_ln359_1_reg_2372 <= split2overflow_dout(384 downto 353);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln34_2_fu_1951_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                tmp_80_reg_2455 <= newLeaf2insert_read_reg_2336(192 downto 65);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((writeChanges4insert_full_n = ap_const_logic_0) and (empty_reg_553 = ap_const_lv3_3))) and (ap_phi_mux_wait_flag_2_phi_fu_780_p18 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                wait_r <= ap_phi_mux_wait_new_2_phi_fu_814_p18;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, newLeaf2insert_empty_n, insertNode4insert_full_n, getNode4insert2_full_n, receiveNode4insert_empty_n, writeChanges4insert_full_n, overflow2split_full_n, cst_req_full_n, split2overflow_empty_n, insertFinished3_full_n, ap_CS_fsm_state2, ap_phi_mux_empty_phi_fu_561_p26, tmp_nbreadreq_fu_256_p3, ap_CS_fsm_state25, ap_CS_fsm_state12, cur_hasLeaves_load_reg_2149, ap_CS_fsm_state26, ap_CS_fsm_state19, ap_CS_fsm_state18, empty_reg_553, ap_CS_fsm_state8, ap_CS_fsm_state11, ap_CS_fsm_state3, root_index_load_load_fu_1352_p1, ap_CS_fsm_state13, icmp_ln334_fu_1642_p2, ap_CS_fsm_state14, icmp_ln335_fu_1654_p2, ap_CS_fsm_state22, icmp_ln34_2_fu_1951_p2, ap_predicate_op135_read_state2, tmp_s_nbreadreq_fu_240_p3, tmp_55_nbreadreq_fu_232_p3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_5)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_4)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_2)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)) and (root_index_load_load_fu_1352_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_256_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                elsif ((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_5)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_4)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_2)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)) and (root_index_load_load_fu_1352_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_256_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                elsif ((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (tmp_s_nbreadreq_fu_240_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_2))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                elsif ((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                elsif ((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                elsif ((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and ((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6) or (((not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_5)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_4)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_2)) and (tmp_nbreadreq_fu_256_p3 = ap_const_lv1_0)) or (not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_4)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_2)) and (tmp_55_nbreadreq_fu_232_p3 = ap_const_lv1_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_5))) or ((tmp_s_nbreadreq_fu_240_p3 = ap_const_lv1_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_2)))))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                elsif ((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (tmp_55_nbreadreq_fu_232_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_5))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif ((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_4))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((split2overflow_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((overflow2split_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((cst_req_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if ((not((((insertNode4insert_full_n = ap_const_logic_0) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) or ((cst_req_full_n = ap_const_logic_0) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if (((icmp_ln334_fu_1642_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                if (((icmp_ln335_fu_1654_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if ((not(((writeChanges4insert_full_n = ap_const_logic_0) and (empty_reg_553 = ap_const_lv3_3))) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                if (((receiveNode4insert_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state22 => 
                if (((icmp_ln34_2_fu_1951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                if (((insertNode4insert_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                if (((getNode4insert2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    addLeaf_load_load_fu_873_p1 <= addLeaf;
    add_ln334_fu_1648_p2 <= std_logic_vector(unsigned(i_fu_224) + unsigned(ap_const_lv3_1));
    add_ln336_fu_1689_p2 <= std_logic_vector(unsigned(zext_ln336_fu_1664_p1) + unsigned(or_ln336_fu_1683_p2));
    add_ln339_fu_1706_p2 <= std_logic_vector(unsigned(cur_amount_of_children_load_reg_2263) + unsigned(ap_const_lv32_1));
    add_ln34_fu_1957_p2 <= std_logic_vector(unsigned(i_12_fu_228) + unsigned(ap_const_lv3_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(cst_req_full_n)
    begin
        if ((cst_req_full_n = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state12_blk_assign_proc : process(insertNode4insert_full_n, cst_req_full_n, cur_hasLeaves_load_reg_2149)
    begin
        if ((((insertNode4insert_full_n = ap_const_logic_0) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) or ((cst_req_full_n = ap_const_logic_0) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_0)))) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;

    ap_ST_fsm_state18_blk_assign_proc : process(writeChanges4insert_full_n, empty_reg_553)
    begin
        if (((writeChanges4insert_full_n = ap_const_logic_0) and (empty_reg_553 = ap_const_lv3_3))) then 
            ap_ST_fsm_state18_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state18_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state19_blk_assign_proc : process(receiveNode4insert_empty_n)
    begin
        if ((receiveNode4insert_empty_n = ap_const_logic_0)) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;

    ap_ST_fsm_state25_blk_assign_proc : process(insertNode4insert_full_n)
    begin
        if ((insertNode4insert_full_n = ap_const_logic_0)) then 
            ap_ST_fsm_state25_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state25_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state26_blk_assign_proc : process(getNode4insert2_full_n)
    begin
        if ((getNode4insert2_full_n = ap_const_logic_0)) then 
            ap_ST_fsm_state26_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state26_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(newLeaf2insert_empty_n, insertFinished3_full_n, ap_phi_mux_empty_phi_fu_561_p26, ap_predicate_op135_read_state2)
    begin
        if ((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(split2overflow_empty_n)
    begin
        if ((split2overflow_empty_n = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(overflow2split_full_n)
    begin
        if ((overflow2split_full_n = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state12_assign_proc : process(insertNode4insert_full_n, cst_req_full_n, cur_hasLeaves_load_reg_2149)
    begin
                ap_block_state12 <= (((insertNode4insert_full_n = ap_const_logic_0) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) or ((cst_req_full_n = ap_const_logic_0) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_0)));
    end process;


    ap_block_state18_assign_proc : process(writeChanges4insert_full_n, empty_reg_553)
    begin
                ap_block_state18 <= ((writeChanges4insert_full_n = ap_const_logic_0) and (empty_reg_553 = ap_const_lv3_3));
    end process;


    ap_block_state2_assign_proc : process(newLeaf2insert_empty_n, insertFinished3_full_n, ap_phi_mux_empty_phi_fu_561_p26, ap_predicate_op135_read_state2)
    begin
                ap_block_state2 <= (((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)));
    end process;


    ap_condition_548_assign_proc : process(insertNode4insert_full_n, cst_req_full_n, ap_CS_fsm_state12, cur_hasLeaves_load_reg_2149)
    begin
                ap_condition_548 <= (not((((insertNode4insert_full_n = ap_const_logic_0) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) or ((cst_req_full_n = ap_const_logic_0) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state12));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, writeChanges4insert_full_n, ap_CS_fsm_state18, empty_reg_553)
    begin
        if (((not(((writeChanges4insert_full_n = ap_const_logic_0) and (empty_reg_553 = ap_const_lv3_3))) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_addLeaf_flag_0_phi_fu_417_p26_assign_proc : process(ap_CS_fsm_state2, cur_hasLeaves_load_reg_2149, state_load_reg_2139, wait_load_reg_2155, addLeaf_flag_0_reg_412, grp_fu_843_p2)
    begin
        if ((((grp_fu_843_p2 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state2) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) or ((grp_fu_843_p2 = ap_const_lv1_0) and (wait_load_reg_2155 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((grp_fu_843_p2 = ap_const_lv1_1) and (state_load_reg_2139 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state2) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) or ((grp_fu_843_p2 = ap_const_lv1_1) and (wait_load_reg_2155 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_phi_mux_addLeaf_flag_0_phi_fu_417_p26 <= ap_const_lv1_0;
        else 
            ap_phi_mux_addLeaf_flag_0_phi_fu_417_p26 <= addLeaf_flag_0_reg_412;
        end if; 
    end process;


    ap_phi_mux_addLeaf_flag_2_phi_fu_646_p18_assign_proc : process(ap_CS_fsm_state18, empty_reg_553, addLeaf_flag_0_reg_412, addLeaf_flag_2_reg_642)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) and (empty_reg_553 = ap_const_lv3_3))) then 
            ap_phi_mux_addLeaf_flag_2_phi_fu_646_p18 <= addLeaf_flag_0_reg_412;
        else 
            ap_phi_mux_addLeaf_flag_2_phi_fu_646_p18 <= addLeaf_flag_2_reg_642;
        end if; 
    end process;


    ap_phi_mux_addLeaf_new_2_phi_fu_680_p18_assign_proc : process(ap_CS_fsm_state18, empty_reg_553, addLeaf_new_2_reg_675)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) and (empty_reg_553 = ap_const_lv3_3))) then 
            ap_phi_mux_addLeaf_new_2_phi_fu_680_p18 <= ap_const_lv1_0;
        else 
            ap_phi_mux_addLeaf_new_2_phi_fu_680_p18 <= addLeaf_new_2_reg_675;
        end if; 
    end process;


    ap_phi_mux_empty_phi_fu_561_p26_assign_proc : process(ap_CS_fsm_state2, cur_hasLeaves_load_reg_2149, empty_reg_553, state_load_reg_2139, wait_load_reg_2155, grp_fu_843_p2)
    begin
        if (((grp_fu_843_p2 = ap_const_lv1_1) and (state_load_reg_2139 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state2) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1))) then 
            ap_phi_mux_empty_phi_fu_561_p26 <= ap_const_lv3_6;
        elsif ((((grp_fu_843_p2 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state2) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) or ((grp_fu_843_p2 = ap_const_lv1_0) and (wait_load_reg_2155 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_phi_mux_empty_phi_fu_561_p26 <= ap_const_lv3_4;
        elsif (((grp_fu_843_p2 = ap_const_lv1_1) and (wait_load_reg_2155 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_phi_mux_empty_phi_fu_561_p26 <= ap_const_lv3_5;
        else 
            ap_phi_mux_empty_phi_fu_561_p26 <= empty_reg_553;
        end if; 
    end process;


    ap_phi_mux_received_flag_0_phi_fu_464_p26_assign_proc : process(ap_CS_fsm_state2, cur_hasLeaves_load_reg_2149, state_load_reg_2139, wait_load_reg_2155, grp_fu_843_p2, received_flag_0_reg_459)
    begin
        if ((((grp_fu_843_p2 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state2) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) or ((grp_fu_843_p2 = ap_const_lv1_0) and (wait_load_reg_2155 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((grp_fu_843_p2 = ap_const_lv1_1) and (state_load_reg_2139 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state2) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) or ((grp_fu_843_p2 = ap_const_lv1_1) and (wait_load_reg_2155 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_phi_mux_received_flag_0_phi_fu_464_p26 <= ap_const_lv1_0;
        else 
            ap_phi_mux_received_flag_0_phi_fu_464_p26 <= received_flag_0_reg_459;
        end if; 
    end process;


    ap_phi_mux_received_flag_2_phi_fu_713_p18_assign_proc : process(ap_CS_fsm_state18, empty_reg_553, received_flag_0_reg_459, received_flag_2_reg_709)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) and (empty_reg_553 = ap_const_lv3_3))) then 
            ap_phi_mux_received_flag_2_phi_fu_713_p18 <= received_flag_0_reg_459;
        else 
            ap_phi_mux_received_flag_2_phi_fu_713_p18 <= received_flag_2_reg_709;
        end if; 
    end process;


    ap_phi_mux_received_new_2_phi_fu_747_p18_assign_proc : process(ap_CS_fsm_state18, empty_reg_553, received_new_2_reg_742)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) and (empty_reg_553 = ap_const_lv3_3))) then 
            ap_phi_mux_received_new_2_phi_fu_747_p18 <= ap_const_lv1_0;
        else 
            ap_phi_mux_received_new_2_phi_fu_747_p18 <= received_new_2_reg_742;
        end if; 
    end process;


    ap_phi_mux_wait_flag_0_phi_fu_511_p26_assign_proc : process(ap_CS_fsm_state2, cur_hasLeaves_load_reg_2149, state_load_reg_2139, wait_load_reg_2155, grp_fu_843_p2, wait_flag_0_reg_506)
    begin
        if ((((grp_fu_843_p2 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state2) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) or ((grp_fu_843_p2 = ap_const_lv1_0) and (wait_load_reg_2155 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((grp_fu_843_p2 = ap_const_lv1_1) and (state_load_reg_2139 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state2) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) or ((grp_fu_843_p2 = ap_const_lv1_1) and (wait_load_reg_2155 = ap_const_lv1_0) and (state_load_reg_2139 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_phi_mux_wait_flag_0_phi_fu_511_p26 <= ap_const_lv1_0;
        else 
            ap_phi_mux_wait_flag_0_phi_fu_511_p26 <= wait_flag_0_reg_506;
        end if; 
    end process;


    ap_phi_mux_wait_flag_2_phi_fu_780_p18_assign_proc : process(ap_CS_fsm_state18, empty_reg_553, wait_flag_0_reg_506, wait_flag_2_reg_776)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) and (empty_reg_553 = ap_const_lv3_3))) then 
            ap_phi_mux_wait_flag_2_phi_fu_780_p18 <= wait_flag_0_reg_506;
        else 
            ap_phi_mux_wait_flag_2_phi_fu_780_p18 <= wait_flag_2_reg_776;
        end if; 
    end process;


    ap_phi_mux_wait_new_2_phi_fu_814_p18_assign_proc : process(ap_CS_fsm_state18, empty_reg_553, wait_new_2_reg_809)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) and (empty_reg_553 = ap_const_lv3_3))) then 
            ap_phi_mux_wait_new_2_phi_fu_814_p18 <= ap_const_lv1_0;
        else 
            ap_phi_mux_wait_new_2_phi_fu_814_p18 <= wait_new_2_reg_809;
        end if; 
    end process;


    ap_predicate_op135_read_state2_assign_proc : process(ap_phi_mux_empty_phi_fu_561_p26, tmp_nbreadreq_fu_256_p3)
    begin
                ap_predicate_op135_read_state2 <= (not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_5)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_4)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_2)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)) and (tmp_nbreadreq_fu_256_p3 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(writeChanges4insert_full_n, ap_CS_fsm_state18, empty_reg_553)
    begin
        if ((not(((writeChanges4insert_full_n = ap_const_logic_0) and (empty_reg_553 = ap_const_lv3_3))) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    cst_req_blk_n_assign_proc : process(cst_req_full_n, ap_CS_fsm_state12, cur_hasLeaves_load_reg_2149, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_0)))) then 
            cst_req_blk_n <= cst_req_full_n;
        else 
            cst_req_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    cst_req_din_assign_proc : process(insertNode4insert_full_n, cst_req_full_n, ap_CS_fsm_state12, cur_hasLeaves_load_reg_2149, ap_CS_fsm_state11, p_3_fu_1568_p15, p_4_fu_1594_p15)
    begin
        if ((not((((insertNode4insert_full_n = ap_const_logic_0) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) or ((cst_req_full_n = ap_const_logic_0) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_0))) then 
            cst_req_din <= p_4_fu_1594_p15;
        elsif (((cst_req_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            cst_req_din <= p_3_fu_1568_p15;
        else 
            cst_req_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    cst_req_write_assign_proc : process(insertNode4insert_full_n, cst_req_full_n, ap_CS_fsm_state12, cur_hasLeaves_load_reg_2149, ap_CS_fsm_state11)
    begin
        if ((((cst_req_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not((((insertNode4insert_full_n = ap_const_logic_0) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) or ((cst_req_full_n = ap_const_logic_0) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_0)))) then 
            cst_req_write <= ap_const_logic_1;
        else 
            cst_req_write <= ap_const_logic_0;
        end if; 
    end process;


    cur_child_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_phi_mux_empty_phi_fu_561_p26, ap_CS_fsm_state25, ap_CS_fsm_state12, cur_hasLeaves_load_reg_2149, ap_CS_fsm_state26, ap_CS_fsm_state19, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state9, ap_CS_fsm_state16, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state17, state_load_load_fu_869_p1, cur_hasLeaves_load_load_fu_881_p1, wait_load_load_fu_885_p1, ap_CS_fsm_state24, ap_CS_fsm_state21, ap_CS_fsm_state5, ap_CS_fsm_state4, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            cur_child_address0 <= ap_const_lv3_3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            cur_child_address0 <= ap_const_lv3_4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            cur_child_address0 <= ap_const_lv3_2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            cur_child_address0 <= ap_const_lv3_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state19) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_4)))) then 
            cur_child_address0 <= ap_const_lv3_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state26) or ((cur_hasLeaves_load_load_fu_881_p1 = ap_const_lv1_1) and (state_load_load_fu_869_p1 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((wait_load_load_fu_885_p1 = ap_const_lv1_0) and (state_load_load_fu_869_p1 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            cur_child_address0 <= ap_const_lv3_5;
        else 
            cur_child_address0 <= "XXX";
        end if; 
    end process;


    cur_child_address1_assign_proc : process(ap_CS_fsm_state2, ap_phi_mux_empty_phi_fu_561_p26, ap_CS_fsm_state25, ap_CS_fsm_state12, cur_hasLeaves_load_reg_2149, ap_CS_fsm_state26, ap_CS_fsm_state19, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state9, ap_CS_fsm_state16, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state17, ap_CS_fsm_state13, cur_child_addr_reg_2403, ap_CS_fsm_state15, ap_CS_fsm_state24, ap_CS_fsm_state21, ap_CS_fsm_state5, zext_ln334_fu_1637_p1, ap_CS_fsm_state4, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            cur_child_address1 <= ap_const_lv3_4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            cur_child_address1 <= ap_const_lv3_2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            cur_child_address1 <= cur_child_addr_reg_2403;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cur_child_address1 <= zext_ln334_fu_1637_p1(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            cur_child_address1 <= ap_const_lv3_5;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            cur_child_address1 <= ap_const_lv3_3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            cur_child_address1 <= ap_const_lv3_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state19) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_4)))) then 
            cur_child_address1 <= ap_const_lv3_0;
        else 
            cur_child_address1 <= "XXX";
        end if; 
    end process;


    cur_child_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, newLeaf2insert_empty_n, insertNode4insert_full_n, getNode4insert2_full_n, receiveNode4insert_empty_n, cst_req_full_n, split2overflow_empty_n, insertFinished3_full_n, ap_CS_fsm_state2, ap_phi_mux_empty_phi_fu_561_p26, ap_CS_fsm_state25, ap_CS_fsm_state12, cur_hasLeaves_load_reg_2149, ap_CS_fsm_state26, ap_CS_fsm_state19, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state9, ap_CS_fsm_state16, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state17, state_load_load_fu_869_p1, cur_hasLeaves_load_load_fu_881_p1, wait_load_load_fu_885_p1, ap_CS_fsm_state24, ap_predicate_op135_read_state2, ap_CS_fsm_state21, ap_CS_fsm_state5, ap_CS_fsm_state4, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((insertNode4insert_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((split2overflow_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((receiveNode4insert_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((getNode4insert2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26)) or (not((((insertNode4insert_full_n = ap_const_logic_0) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) or ((cst_req_full_n = ap_const_logic_0) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state12)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_4)) or ((ap_start = ap_const_logic_1) and (cur_hasLeaves_load_load_fu_881_p1 = ap_const_lv1_1) and (state_load_load_fu_869_p1 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (wait_load_load_fu_885_p1 = ap_const_lv1_0) and (state_load_load_fu_869_p1 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            cur_child_ce0 <= ap_const_logic_1;
        else 
            cur_child_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cur_child_ce1_assign_proc : process(newLeaf2insert_empty_n, insertNode4insert_full_n, getNode4insert2_full_n, receiveNode4insert_empty_n, cst_req_full_n, split2overflow_empty_n, insertFinished3_full_n, ap_CS_fsm_state2, ap_phi_mux_empty_phi_fu_561_p26, ap_CS_fsm_state25, ap_CS_fsm_state12, cur_hasLeaves_load_reg_2149, ap_CS_fsm_state26, ap_CS_fsm_state19, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state9, ap_CS_fsm_state16, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state17, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state24, ap_predicate_op135_read_state2, ap_CS_fsm_state21, ap_CS_fsm_state5, ap_CS_fsm_state4, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((insertNode4insert_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((split2overflow_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((receiveNode4insert_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((getNode4insert2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26)) or (not((((insertNode4insert_full_n = ap_const_logic_0) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) or ((cst_req_full_n = ap_const_logic_0) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state12)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3)) or (not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_4)))) then 
            cur_child_ce1 <= ap_const_logic_1;
        else 
            cur_child_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    cur_child_d0_assign_proc : process(receiveNode4insert_dout, split2overflow_dout, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state19, ap_CS_fsm_state3, tmp_77_reg_2377, tmp_79_reg_2387, trunc_ln326_1_reg_2422, tmp_70_reg_2432, ap_CS_fsm_state24, select_ln316_1_fu_2005_p3, ap_CS_fsm_state21, ap_CS_fsm_state5, ap_CS_fsm_state4, ap_CS_fsm_state20, select_ln316_3_fu_2021_p3, select_ln316_5_fu_2107_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            cur_child_d0 <= select_ln316_5_fu_2107_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            cur_child_d0 <= select_ln316_3_fu_2021_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            cur_child_d0 <= select_ln316_1_fu_2005_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            cur_child_d0 <= trunc_ln326_1_reg_2422;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            cur_child_d0 <= tmp_70_reg_2432;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            cur_child_d0 <= receiveNode4insert_dout(256 downto 225);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            cur_child_d0 <= tmp_79_reg_2387;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            cur_child_d0 <= tmp_77_reg_2377;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            cur_child_d0 <= split2overflow_dout(224 downto 193);
        else 
            cur_child_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    cur_child_d1_assign_proc : process(receiveNode4insert_dout, split2overflow_dout, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state19, ap_CS_fsm_state3, trunc_ln359_1_reg_2372, tmp_78_reg_2382, add_ln336_reg_2411, ap_CS_fsm_state15, tmp_69_reg_2427, tmp_71_reg_2437, select_ln316_fu_1997_p3, ap_CS_fsm_state24, select_ln316_4_reg_2510, ap_CS_fsm_state21, ap_CS_fsm_state5, ap_CS_fsm_state4, ap_CS_fsm_state20, select_ln316_2_fu_2013_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            cur_child_d1 <= select_ln316_4_reg_2510;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            cur_child_d1 <= select_ln316_2_fu_2013_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            cur_child_d1 <= select_ln316_fu_1997_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            cur_child_d1 <= tmp_71_reg_2437;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            cur_child_d1 <= tmp_69_reg_2427;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            cur_child_d1 <= receiveNode4insert_dout(224 downto 193);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            cur_child_d1 <= add_ln336_reg_2411;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            cur_child_d1 <= trunc_ln359_1_reg_2372;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            cur_child_d1 <= tmp_78_reg_2382;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            cur_child_d1 <= split2overflow_dout(256 downto 225);
        else 
            cur_child_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    cur_child_we0_assign_proc : process(insertNode4insert_full_n, getNode4insert2_full_n, receiveNode4insert_empty_n, split2overflow_empty_n, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state19, ap_CS_fsm_state3, root_index_load_reg_2361, ap_CS_fsm_state24, ap_CS_fsm_state21, ap_CS_fsm_state5, ap_CS_fsm_state4, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state24) or ((insertNode4insert_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((split2overflow_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((receiveNode4insert_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((getNode4insert2_full_n = ap_const_logic_1) and (root_index_load_reg_2361 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26)))) then 
            cur_child_we0 <= ap_const_logic_1;
        else 
            cur_child_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cur_child_we1_assign_proc : process(insertNode4insert_full_n, getNode4insert2_full_n, receiveNode4insert_empty_n, split2overflow_empty_n, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state19, ap_CS_fsm_state3, root_index_load_reg_2361, ap_CS_fsm_state15, ap_CS_fsm_state24, ap_CS_fsm_state21, ap_CS_fsm_state5, ap_CS_fsm_state4, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((insertNode4insert_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((split2overflow_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((receiveNode4insert_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((getNode4insert2_full_n = ap_const_logic_1) and (root_index_load_reg_2361 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26)))) then 
            cur_child_we1 <= ap_const_logic_1;
        else 
            cur_child_we1 <= ap_const_logic_0;
        end if; 
    end process;

    cur_hasLeaves_load_load_fu_881_p1 <= cur_hasLeaves;

    getNode4insert2_blk_n_assign_proc : process(getNode4insert2_full_n, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            getNode4insert2_blk_n <= getNode4insert2_full_n;
        else 
            getNode4insert2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    getNode4insert2_din <= ap_const_lv32_0;

    getNode4insert2_write_assign_proc : process(getNode4insert2_full_n, ap_CS_fsm_state26)
    begin
        if (((getNode4insert2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            getNode4insert2_write <= ap_const_logic_1;
        else 
            getNode4insert2_write <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_843_p2 <= "1" when (cur_child_q0 = ap_const_lv32_FFFFFFFF) else "0";
    icmp_ln31_fu_1051_p2 <= "1" when (signed(cur_box_maxX) < signed(newLeaf_box_maxX)) else "0";
    icmp_ln32_fu_1065_p2 <= "1" when (signed(cur_box_maxY) < signed(newLeaf_box_maxY)) else "0";
    icmp_ln334_fu_1642_p2 <= "1" when (i_fu_224 = ap_const_lv3_6) else "0";
    icmp_ln335_fu_1654_p2 <= "1" when (cur_child_q1 = ap_const_lv32_FFFFFFFF) else "0";
    icmp_ln33_fu_1079_p2 <= "1" when (signed(cur_box_minX) > signed(newLeaf_box_minX)) else "0";
    icmp_ln34_2_fu_1951_p2 <= "1" when (i_12_fu_228 = ap_const_lv3_6) else "0";
    icmp_ln34_fu_1093_p2 <= "1" when (signed(cur_box_minY) > signed(newLeaf_box_minY)) else "0";

    insertFinished3_blk_n_assign_proc : process(insertFinished3_full_n, ap_CS_fsm_state2, ap_phi_mux_empty_phi_fu_561_p26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6))) then 
            insertFinished3_blk_n <= insertFinished3_full_n;
        else 
            insertFinished3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    insertFinished3_din <= ap_const_lv1_1;

    insertFinished3_write_assign_proc : process(newLeaf2insert_empty_n, insertFinished3_full_n, ap_CS_fsm_state2, ap_phi_mux_empty_phi_fu_561_p26, ap_predicate_op135_read_state2)
    begin
        if ((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6))) then 
            insertFinished3_write <= ap_const_logic_1;
        else 
            insertFinished3_write <= ap_const_logic_0;
        end if; 
    end process;


    insertNode4insert_blk_n_assign_proc : process(insertNode4insert_full_n, ap_CS_fsm_state25, ap_CS_fsm_state12, cur_hasLeaves_load_reg_2149)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)))) then 
            insertNode4insert_blk_n <= insertNode4insert_full_n;
        else 
            insertNode4insert_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    insertNode4insert_din_assign_proc : process(insertNode4insert_full_n, cst_req_full_n, ap_CS_fsm_state25, ap_CS_fsm_state12, cur_hasLeaves_load_reg_2149, p_5_fu_1613_p15, zext_ln316_fu_2096_p1)
    begin
        if (((insertNode4insert_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            insertNode4insert_din <= zext_ln316_fu_2096_p1;
        elsif ((not((((insertNode4insert_full_n = ap_const_logic_0) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) or ((cst_req_full_n = ap_const_logic_0) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1))) then 
            insertNode4insert_din <= p_5_fu_1613_p15;
        else 
            insertNode4insert_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    insertNode4insert_write_assign_proc : process(insertNode4insert_full_n, cst_req_full_n, ap_CS_fsm_state25, ap_CS_fsm_state12, cur_hasLeaves_load_reg_2149)
    begin
        if ((((insertNode4insert_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or (not((((insertNode4insert_full_n = ap_const_logic_0) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)) or ((cst_req_full_n = ap_const_logic_0) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (cur_hasLeaves_load_reg_2149 = ap_const_lv1_1)))) then 
            insertNode4insert_write <= ap_const_logic_1;
        else 
            insertNode4insert_write <= ap_const_logic_0;
        end if; 
    end process;


    newLeaf2insert_blk_n_assign_proc : process(newLeaf2insert_empty_n, ap_CS_fsm_state2, ap_phi_mux_empty_phi_fu_561_p26, tmp_nbreadreq_fu_256_p3)
    begin
        if ((not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_5)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_4)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_3)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_2)) and not((ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_256_p3 = ap_const_lv1_1))) then 
            newLeaf2insert_blk_n <= newLeaf2insert_empty_n;
        else 
            newLeaf2insert_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    newLeaf2insert_read_assign_proc : process(newLeaf2insert_empty_n, insertFinished3_full_n, ap_CS_fsm_state2, ap_phi_mux_empty_phi_fu_561_p26, ap_predicate_op135_read_state2)
    begin
        if ((not((((newLeaf2insert_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state2 = ap_const_boolean_1)) or ((insertFinished3_full_n = ap_const_logic_0) and (ap_phi_mux_empty_phi_fu_561_p26 = ap_const_lv3_6)))) and (ap_predicate_op135_read_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            newLeaf2insert_read <= ap_const_logic_1;
        else 
            newLeaf2insert_read <= ap_const_logic_0;
        end if; 
    end process;

    or_ln316_8_fu_2084_p5 <= (((ap_const_lv1_0 & sext_ln316_fu_2070_p1) & tmp_82_fu_2074_p4) & ap_const_lv32_0);
    or_ln316_fu_2054_p2 <= (tmp_81_fu_2037_p9 or ap_const_lv385_lc_1);
    or_ln336_fu_1683_p2 <= (sub_ln336_fu_1677_p2 or ap_const_lv32_1);

    overflow2split_blk_n_assign_proc : process(overflow2split_full_n, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            overflow2split_blk_n <= overflow2split_full_n;
        else 
            overflow2split_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    overflow2split_din <= (((((((((((((cur_amount_of_children_load_reg_2263 & cur_child_q1) & cur_child_q0) & reg_864) & reg_859) & reg_854) & reg_849) & base_maxY_reg_2258) & base_minY_reg_2253) & base_maxX_reg_2248) & base_minX_reg_2243) & cur_hasLeaves_load_reg_2149) & cur_parent_load_reg_2236) & cur_index_load_reg_2225);

    overflow2split_write_assign_proc : process(overflow2split_full_n, ap_CS_fsm_state8)
    begin
        if (((overflow2split_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            overflow2split_write <= ap_const_logic_1;
        else 
            overflow2split_write <= ap_const_logic_0;
        end if; 
    end process;

    p_3_fu_1568_p15 <= (((((((((((((cur_amount_of_children_load_reg_2263 & cur_child_q1) & cur_child_q0) & reg_864) & reg_859) & reg_854) & reg_849) & select_ln32_reg_2305) & select_ln34_reg_2317) & select_ln31_reg_2299) & select_ln33_reg_2311) & ap_const_lv1_0) & cur_parent_load_reg_2236) & cur_index_load_reg_2225);
    p_4_fu_1594_p15 <= (((((((((((((newLeaf_amount_of_children_load_reg_2219 & newLeaf_child_load_reg_2213) & newLeaf_child_1_load_reg_2207) & newLeaf_child_2_load_reg_2201) & newLeaf_child_3_load_reg_2195) & newLeaf_child_4_load_reg_2189) & newLeaf_child_5_load_reg_2183) & st_maxY_reg_2293) & st_minY_reg_2287) & st_maxX_reg_2281) & st_minX_reg_2275) & newLeaf_hasLeaves_load_reg_2177) & newLeaf_parent_load_reg_2171) & newLeaf_index_load_reg_2165);
    p_5_fu_1613_p15 <= (((((((((((((newLeaf_amount_of_children_load_reg_2219 & newLeaf_child_load_reg_2213) & newLeaf_child_1_load_reg_2207) & newLeaf_child_2_load_reg_2201) & newLeaf_child_3_load_reg_2195) & newLeaf_child_4_load_reg_2189) & newLeaf_child_5_load_reg_2183) & st_maxY_reg_2293) & st_minY_reg_2287) & st_maxX_reg_2281) & st_minX_reg_2275) & newLeaf_hasLeaves_load_reg_2177) & newLeaf_parent_loc_0_reg_612) & newLeaf_index_loc_0_reg_603);

    receiveNode4insert_blk_n_assign_proc : process(receiveNode4insert_empty_n, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            receiveNode4insert_blk_n <= receiveNode4insert_empty_n;
        else 
            receiveNode4insert_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    receiveNode4insert_read_assign_proc : process(receiveNode4insert_empty_n, ap_CS_fsm_state19)
    begin
        if (((receiveNode4insert_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            receiveNode4insert_read <= ap_const_logic_1;
        else 
            receiveNode4insert_read <= ap_const_logic_0;
        end if; 
    end process;

    received_load_load_fu_877_p1 <= received;

    root_child_address0_assign_proc : process(ap_CS_fsm_state22, icmp_ln34_2_fu_1951_p2, ap_CS_fsm_state23, ap_CS_fsm_state24, zext_ln34_fu_1946_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            root_child_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            root_child_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif (((icmp_ln34_2_fu_1951_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            root_child_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif (((icmp_ln34_2_fu_1951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            root_child_address0 <= zext_ln34_fu_1946_p1(3 - 1 downto 0);
        else 
            root_child_address0 <= "XXX";
        end if; 
    end process;


    root_child_address1_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            root_child_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            root_child_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            root_child_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            root_child_address1 <= "XXX";
        end if; 
    end process;


    root_child_ce0_assign_proc : process(ap_CS_fsm_state22, icmp_ln34_2_fu_1951_p2, ap_CS_fsm_state23, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or ((icmp_ln34_2_fu_1951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((icmp_ln34_2_fu_1951_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            root_child_ce0 <= ap_const_logic_1;
        else 
            root_child_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    root_child_ce1_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            root_child_ce1 <= ap_const_logic_1;
        else 
            root_child_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    root_child_we0_assign_proc : process(ap_CS_fsm_state22, icmp_ln34_2_fu_1951_p2)
    begin
        if (((icmp_ln34_2_fu_1951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            root_child_we0 <= ap_const_logic_1;
        else 
            root_child_we0 <= ap_const_logic_0;
        end if; 
    end process;

    root_index_load_load_fu_1352_p1 <= root_index;
    select_ln316_1_fu_2005_p3 <= 
        ap_const_lv32_FFFFFFFF when (root_child_load_1_reg_2465(0) = '1') else 
        ap_const_lv32_0;
    select_ln316_2_fu_2013_p3 <= 
        ap_const_lv32_FFFFFFFF when (root_child_load_2_reg_2490(0) = '1') else 
        ap_const_lv32_0;
    select_ln316_3_fu_2021_p3 <= 
        ap_const_lv32_FFFFFFFF when (root_child_load_3_reg_2495(0) = '1') else 
        ap_const_lv32_0;
    select_ln316_4_fu_2029_p3 <= 
        ap_const_lv32_FFFFFFFF when (root_child_q0(0) = '1') else 
        ap_const_lv32_0;
    select_ln316_5_fu_2107_p3 <= 
        ap_const_lv32_FFFFFFFF when (root_child_load_5_reg_2515(0) = '1') else 
        ap_const_lv32_0;
    select_ln316_fu_1997_p3 <= 
        ap_const_lv32_FFFFFFFF when (root_child_load_reg_2460(0) = '1') else 
        ap_const_lv32_0;
    select_ln31_fu_1057_p3 <= 
        newLeaf_box_maxX when (icmp_ln31_fu_1051_p2(0) = '1') else 
        cur_box_maxX;
    select_ln32_fu_1071_p3 <= 
        newLeaf_box_maxY when (icmp_ln32_fu_1065_p2(0) = '1') else 
        cur_box_maxY;
    select_ln33_fu_1085_p3 <= 
        newLeaf_box_minX when (icmp_ln33_fu_1079_p2(0) = '1') else 
        cur_box_minX;
    select_ln34_fu_1099_p3 <= 
        newLeaf_box_minY when (icmp_ln34_fu_1093_p2(0) = '1') else 
        cur_box_minY;
        sext_ln316_fu_2070_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_25_fu_2060_p4),320));

    shl_ln336_1_fu_1672_p2 <= std_logic_vector(shift_left(unsigned(cur_index_load_reg_2225),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln336_fu_1667_p2 <= std_logic_vector(shift_left(unsigned(cur_index_load_reg_2225),to_integer(unsigned('0' & ap_const_lv32_3(31-1 downto 0)))));

    split2overflow_blk_n_assign_proc : process(split2overflow_empty_n, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            split2overflow_blk_n <= split2overflow_empty_n;
        else 
            split2overflow_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    split2overflow_read_assign_proc : process(split2overflow_empty_n, ap_CS_fsm_state3)
    begin
        if (((split2overflow_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            split2overflow_read <= ap_const_logic_1;
        else 
            split2overflow_read <= ap_const_logic_0;
        end if; 
    end process;

    state_load_load_fu_869_p1 <= state;
    sub_ln336_fu_1677_p2 <= std_logic_vector(unsigned(shl_ln336_fu_1667_p2) - unsigned(shl_ln336_1_fu_1672_p2));
    tmp_25_fu_2060_p4 <= or_ln316_fu_2054_p2(384 downto 96);
    tmp_55_nbreadreq_fu_232_p3 <= (0=>(split2overflow_empty_n), others=>'-');
    tmp_81_fu_2037_p9 <= (((((((root_child_q1 & select_ln316_4_fu_2029_p3) & select_ln316_3_fu_2021_p3) & select_ln316_2_fu_2013_p3) & select_ln316_1_reg_2485) & select_ln316_reg_2480) & tmp_80_reg_2455) & ap_const_lv96_0);
    tmp_82_fu_2074_p4 <= or_ln316_fu_2054_p2(64 downto 32);
    tmp_nbreadreq_fu_256_p3 <= (0=>(newLeaf2insert_empty_n), others=>'-');
    tmp_s_nbreadreq_fu_240_p3 <= (0=>(receiveNode4insert_empty_n), others=>'-');
    trunc_ln304_fu_1136_p1 <= newLeaf2insert_dout(32 - 1 downto 0);
    trunc_ln326_fu_1761_p1 <= receiveNode4insert_dout(32 - 1 downto 0);
    trunc_ln359_fu_1361_p1 <= split2overflow_dout(32 - 1 downto 0);
    wait_load_load_fu_885_p1 <= wait_r;

    writeChanges4insert_blk_n_assign_proc : process(writeChanges4insert_full_n, ap_CS_fsm_state18, empty_reg_553)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) and (empty_reg_553 = ap_const_lv3_3))) then 
            writeChanges4insert_blk_n <= writeChanges4insert_full_n;
        else 
            writeChanges4insert_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    writeChanges4insert_din <= (((((((((((((cur_amount_of_children_loc_1_reg_631 & cur_child_q0) & cur_child_q1) & reg_864) & reg_859) & reg_854) & reg_849) & select_ln32_reg_2305) & select_ln34_reg_2317) & select_ln31_reg_2299) & select_ln33_reg_2311) & cur_hasLeaves_load_reg_2149) & cur_parent_load_reg_2236) & cur_index_load_reg_2225);

    writeChanges4insert_write_assign_proc : process(writeChanges4insert_full_n, ap_CS_fsm_state18, empty_reg_553)
    begin
        if ((not(((writeChanges4insert_full_n = ap_const_logic_0) and (empty_reg_553 = ap_const_lv3_3))) and (ap_const_logic_1 = ap_CS_fsm_state18) and (empty_reg_553 = ap_const_lv3_3))) then 
            writeChanges4insert_write <= ap_const_logic_1;
        else 
            writeChanges4insert_write <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln316_fu_2096_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln316_8_fu_2084_p5),417));
    zext_ln334_fu_1637_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_224),64));
    zext_ln336_fu_1664_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_224),32));
    zext_ln34_fu_1946_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_12_fu_228),64));
end behav;
