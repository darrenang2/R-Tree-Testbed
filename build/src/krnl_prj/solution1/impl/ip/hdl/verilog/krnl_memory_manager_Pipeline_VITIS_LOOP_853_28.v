// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module krnl_memory_manager_Pipeline_VITIS_LOOP_853_28 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        newNode_child_address0,
        newNode_child_ce0,
        newNode_child_q0,
        HBM_PTR,
        trunc_ln12,
        p_out,
        p_out_ap_vld,
        p_out1,
        p_out1_ap_vld,
        p_out2,
        p_out2_ap_vld,
        p_out3,
        p_out3_ap_vld,
        hasValidChild_2_out,
        hasValidChild_2_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [511:0] m_axi_gmem_WDATA;
output  [63:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [511:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
output  [2:0] newNode_child_address0;
output   newNode_child_ce0;
input  [31:0] newNode_child_q0;
input  [63:0] HBM_PTR;
input  [5:0] trunc_ln12;
output  [31:0] p_out;
output   p_out_ap_vld;
output  [31:0] p_out1;
output   p_out1_ap_vld;
output  [31:0] p_out2;
output   p_out2_ap_vld;
output  [31:0] p_out3;
output   p_out3_ap_vld;
output  [0:0] hasValidChild_2_out;
output   hasValidChild_2_out_ap_vld;

reg ap_idle;
reg m_axi_gmem_ARVALID;
reg m_axi_gmem_RREADY;
reg newNode_child_ce0;
reg p_out_ap_vld;
reg p_out1_ap_vld;
reg p_out2_ap_vld;
reg p_out3_ap_vld;
reg hasValidChild_2_out_ap_vld;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
reg   [0:0] icmp_ln853_reg_672;
reg   [0:0] icmp_ln853_reg_672_pp0_iter1_reg;
reg   [0:0] icmp_ln856_reg_681;
reg    ap_predicate_op134_readreq_state4;
reg    ap_block_state4_io;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
wire    ap_block_state10_pp0_stage1_iter4;
wire    ap_block_state12_pp0_stage1_iter5;
wire    ap_block_state14_pp0_stage1_iter6;
wire    ap_block_state16_pp0_stage1_iter7;
wire    ap_block_state18_pp0_stage1_iter8;
wire    ap_block_state20_pp0_stage1_iter9;
wire    ap_block_state22_pp0_stage1_iter10;
wire    ap_block_state24_pp0_stage1_iter11;
wire    ap_block_state26_pp0_stage1_iter12;
wire    ap_block_state28_pp0_stage1_iter13;
wire    ap_block_state30_pp0_stage1_iter14;
wire    ap_block_state32_pp0_stage1_iter15;
wire    ap_block_state34_pp0_stage1_iter16;
wire    ap_block_state36_pp0_stage1_iter17;
wire    ap_block_state38_pp0_stage1_iter18;
wire    ap_block_state40_pp0_stage1_iter19;
wire    ap_block_state42_pp0_stage1_iter20;
wire    ap_block_state44_pp0_stage1_iter21;
wire    ap_block_state46_pp0_stage1_iter22;
wire    ap_block_state48_pp0_stage1_iter23;
wire    ap_block_state50_pp0_stage1_iter24;
wire    ap_block_state52_pp0_stage1_iter25;
wire    ap_block_state54_pp0_stage1_iter26;
wire    ap_block_state56_pp0_stage1_iter27;
wire    ap_block_state58_pp0_stage1_iter28;
wire    ap_block_state60_pp0_stage1_iter29;
wire    ap_block_state62_pp0_stage1_iter30;
wire    ap_block_state64_pp0_stage1_iter31;
wire    ap_block_state66_pp0_stage1_iter32;
wire    ap_block_state68_pp0_stage1_iter33;
wire    ap_block_state70_pp0_stage1_iter34;
wire    ap_block_state72_pp0_stage1_iter35;
reg   [0:0] icmp_ln853_reg_672_pp0_iter36_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter35_reg;
reg    ap_predicate_op204_read_state74;
reg    ap_block_state74_pp0_stage1_iter36;
wire    ap_block_state76_pp0_stage1_iter37;
reg    ap_block_pp0_stage1_subdone;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_AR;
wire    ap_block_pp0_stage1;
reg    gmem_blk_n_R;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln856_reg_681_pp0_iter36_reg;
reg   [0:0] icmp_ln859_reg_696;
reg   [0:0] icmp_ln859_reg_696_pp0_iter36_reg;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state11_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state15_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state19_pp0_stage0_iter9;
wire    ap_block_state21_pp0_stage0_iter10;
wire    ap_block_state23_pp0_stage0_iter11;
wire    ap_block_state25_pp0_stage0_iter12;
wire    ap_block_state27_pp0_stage0_iter13;
wire    ap_block_state29_pp0_stage0_iter14;
wire    ap_block_state31_pp0_stage0_iter15;
wire    ap_block_state33_pp0_stage0_iter16;
wire    ap_block_state35_pp0_stage0_iter17;
wire    ap_block_state37_pp0_stage0_iter18;
wire    ap_block_state39_pp0_stage0_iter19;
wire    ap_block_state41_pp0_stage0_iter20;
wire    ap_block_state43_pp0_stage0_iter21;
wire    ap_block_state45_pp0_stage0_iter22;
wire    ap_block_state47_pp0_stage0_iter23;
wire    ap_block_state49_pp0_stage0_iter24;
wire    ap_block_state51_pp0_stage0_iter25;
wire    ap_block_state53_pp0_stage0_iter26;
wire    ap_block_state55_pp0_stage0_iter27;
wire    ap_block_state57_pp0_stage0_iter28;
wire    ap_block_state59_pp0_stage0_iter29;
wire    ap_block_state61_pp0_stage0_iter30;
wire    ap_block_state63_pp0_stage0_iter31;
wire    ap_block_state65_pp0_stage0_iter32;
wire    ap_block_state67_pp0_stage0_iter33;
wire    ap_block_state69_pp0_stage0_iter34;
wire    ap_block_state71_pp0_stage0_iter35;
wire    ap_block_state73_pp0_stage0_iter36;
reg    ap_predicate_op205_read_state75;
reg    ap_block_state75_pp0_stage0_iter37;
wire    ap_block_state77_pp0_stage0_iter38;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln853_fu_295_p2;
reg   [0:0] icmp_ln853_reg_672_pp0_iter2_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter3_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter4_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter5_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter6_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter7_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter8_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter9_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter10_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter11_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter12_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter13_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter14_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter15_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter16_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter17_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter18_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter19_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter20_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter21_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter22_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter23_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter24_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter25_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter26_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter27_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter28_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter29_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter30_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter31_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter32_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter33_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter34_reg;
reg   [0:0] icmp_ln853_reg_672_pp0_iter35_reg;
wire   [0:0] icmp_ln856_fu_317_p2;
reg    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln856_reg_681_pp0_iter1_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter2_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter3_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter4_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter5_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter6_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter7_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter8_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter9_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter10_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter11_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter12_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter13_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter14_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter15_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter16_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter17_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter18_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter19_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter20_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter21_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter22_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter23_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter24_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter25_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter26_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter27_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter28_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter29_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter30_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter31_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter32_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter33_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter34_reg;
reg   [0:0] icmp_ln856_reg_681_pp0_iter37_reg;
wire  signed [38:0] sub_ln859_fu_347_p2;
reg  signed [38:0] sub_ln859_reg_685;
wire   [5:0] add_ln859_1_fu_357_p2;
reg   [5:0] add_ln859_1_reg_690;
reg   [5:0] add_ln859_1_reg_690_pp0_iter1_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter2_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter3_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter4_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter5_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter6_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter7_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter8_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter9_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter10_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter11_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter12_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter13_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter14_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter15_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter16_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter17_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter18_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter19_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter20_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter21_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter22_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter23_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter24_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter25_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter26_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter27_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter28_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter29_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter30_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter31_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter32_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter33_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter34_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter35_reg;
reg   [5:0] add_ln859_1_reg_690_pp0_iter36_reg;
wire   [0:0] icmp_ln859_fu_370_p2;
reg   [0:0] icmp_ln859_reg_696_pp0_iter2_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter3_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter4_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter5_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter6_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter7_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter8_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter9_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter10_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter11_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter12_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter13_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter14_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter15_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter16_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter17_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter18_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter19_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter20_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter21_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter22_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter23_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter24_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter25_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter26_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter27_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter28_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter29_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter30_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter31_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter32_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter33_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter34_reg;
reg   [0:0] icmp_ln859_reg_696_pp0_iter35_reg;
reg   [57:0] trunc_ln_reg_700;
wire   [31:0] select_ln859_fu_385_p3;
reg   [31:0] select_ln859_reg_705;
reg   [511:0] gmem_addr_read_reg_716;
reg   [31:0] childNode_box_minX_reg_726;
reg   [31:0] childNode_box_maxX_reg_732;
reg   [31:0] childNode_box_minY_reg_738;
reg   [31:0] childNode_box_maxY_reg_744;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
wire   [511:0] ap_phi_reg_pp0_iter0_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter1_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter2_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter3_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter4_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter5_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter6_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter7_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter8_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter9_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter10_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter11_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter12_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter13_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter14_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter15_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter16_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter17_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter18_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter19_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter20_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter21_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter22_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter23_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter24_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter25_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter26_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter27_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter28_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter29_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter30_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter31_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter32_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter33_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter34_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter35_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter36_empty_61_reg_231;
reg   [511:0] ap_phi_reg_pp0_iter37_empty_61_reg_231;
wire   [63:0] i_16_cast_fu_307_p1;
wire  signed [63:0] sext_ln859_1_fu_393_p1;
reg   [2:0] i_fu_120;
wire   [2:0] add_ln853_fu_301_p2;
wire    ap_loop_init;
reg   [2:0] ap_sig_allocacmp_i_1;
reg   [0:0] hasValidChild_fu_124;
reg   [31:0] minX_fu_128;
wire   [31:0] minX_2_fu_484_p3;
reg   [31:0] maxX_fu_132;
wire   [31:0] maxX_2_fu_496_p3;
reg   [31:0] minY_fu_136;
wire   [31:0] minY_2_fu_508_p3;
reg   [31:0] maxY_fu_140;
wire   [31:0] maxY_2_fu_520_p3;
reg   [31:0] maxY_1_fu_144;
reg   [31:0] minY_1_fu_148;
reg   [31:0] maxX_1_fu_152;
reg   [31:0] minX_1_fu_156;
reg    ap_block_pp0_stage0_01001;
wire   [37:0] shl_ln859_1_fu_323_p3;
wire   [34:0] shl_ln859_2_fu_335_p3;
wire  signed [38:0] sext_ln859_fu_331_p1;
wire  signed [38:0] sext_ln859_2_fu_343_p1;
wire   [5:0] trunc_ln859_fu_353_p1;
wire  signed [63:0] sext_ln859_3_fu_362_p1;
wire   [63:0] add_ln859_fu_365_p2;
wire   [8:0] shl_ln_fu_410_p3;
wire   [1023:0] tmp_s_fu_403_p3;
wire   [1023:0] zext_ln859_fu_417_p1;
wire   [1023:0] lshr_ln859_fu_421_p2;
wire   [0:0] icmp_ln200_fu_479_p2;
wire   [0:0] icmp_ln224_fu_491_p2;
wire   [0:0] icmp_ln200_1_fu_503_p2;
wire   [0:0] icmp_ln224_1_fu_515_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter37_stage0;
reg    ap_idle_pp0_0to36;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to38;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

krnl_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter37_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
            ap_enable_reg_pp0_iter38 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter18_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter19_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter20_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter21_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter22_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter23_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter24_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter25_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter26_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter27_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter28_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter29_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter30_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter31_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter32_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter33_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter34_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter35_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter36_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter37_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln859_reg_696_pp0_iter36_reg == 1'd1) & (icmp_ln856_reg_681_pp0_iter36_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln853_reg_672_pp0_iter36_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        ap_phi_reg_pp0_iter37_empty_61_reg_231 <= m_axi_gmem_RDATA;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        ap_phi_reg_pp0_iter37_empty_61_reg_231 <= ap_phi_reg_pp0_iter36_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            hasValidChild_fu_124 <= 1'd0;
        end else if (((icmp_ln856_reg_681_pp0_iter37_reg == 1'd0) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
            hasValidChild_fu_124 <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln853_fu_295_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_120 <= add_ln853_fu_301_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_120 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            maxX_1_fu_152 <= 32'd2147483648;
        end else if (((icmp_ln856_reg_681_pp0_iter37_reg == 1'd0) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
            maxX_1_fu_152 <= maxX_2_fu_496_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            maxX_fu_132 <= 32'd2147483648;
        end else if (((icmp_ln856_reg_681_pp0_iter37_reg == 1'd0) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
            maxX_fu_132 <= maxX_2_fu_496_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            maxY_1_fu_144 <= 32'd2147483648;
        end else if (((icmp_ln856_reg_681_pp0_iter37_reg == 1'd0) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
            maxY_1_fu_144 <= maxY_2_fu_520_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            maxY_fu_140 <= 32'd2147483648;
        end else if (((icmp_ln856_reg_681_pp0_iter37_reg == 1'd0) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
            maxY_fu_140 <= maxY_2_fu_520_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            minX_1_fu_156 <= 32'd2147483647;
        end else if (((icmp_ln856_reg_681_pp0_iter37_reg == 1'd0) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
            minX_1_fu_156 <= minX_2_fu_484_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            minX_fu_128 <= 32'd2147483647;
        end else if (((icmp_ln856_reg_681_pp0_iter37_reg == 1'd0) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
            minX_fu_128 <= minX_2_fu_484_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            minY_1_fu_148 <= 32'd2147483647;
        end else if (((icmp_ln856_reg_681_pp0_iter37_reg == 1'd0) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
            minY_1_fu_148 <= minY_2_fu_508_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            minY_fu_136 <= 32'd2147483647;
        end else if (((icmp_ln856_reg_681_pp0_iter37_reg == 1'd0) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
            minY_fu_136 <= minY_2_fu_508_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln856_fu_317_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln853_reg_672 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln859_1_reg_690 <= add_ln859_1_fu_357_p2;
        sub_ln859_reg_685[38 : 3] <= sub_ln859_fu_347_p2[38 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln859_1_reg_690_pp0_iter10_reg <= add_ln859_1_reg_690_pp0_iter9_reg;
        add_ln859_1_reg_690_pp0_iter11_reg <= add_ln859_1_reg_690_pp0_iter10_reg;
        add_ln859_1_reg_690_pp0_iter12_reg <= add_ln859_1_reg_690_pp0_iter11_reg;
        add_ln859_1_reg_690_pp0_iter13_reg <= add_ln859_1_reg_690_pp0_iter12_reg;
        add_ln859_1_reg_690_pp0_iter14_reg <= add_ln859_1_reg_690_pp0_iter13_reg;
        add_ln859_1_reg_690_pp0_iter15_reg <= add_ln859_1_reg_690_pp0_iter14_reg;
        add_ln859_1_reg_690_pp0_iter16_reg <= add_ln859_1_reg_690_pp0_iter15_reg;
        add_ln859_1_reg_690_pp0_iter17_reg <= add_ln859_1_reg_690_pp0_iter16_reg;
        add_ln859_1_reg_690_pp0_iter18_reg <= add_ln859_1_reg_690_pp0_iter17_reg;
        add_ln859_1_reg_690_pp0_iter19_reg <= add_ln859_1_reg_690_pp0_iter18_reg;
        add_ln859_1_reg_690_pp0_iter1_reg <= add_ln859_1_reg_690;
        add_ln859_1_reg_690_pp0_iter20_reg <= add_ln859_1_reg_690_pp0_iter19_reg;
        add_ln859_1_reg_690_pp0_iter21_reg <= add_ln859_1_reg_690_pp0_iter20_reg;
        add_ln859_1_reg_690_pp0_iter22_reg <= add_ln859_1_reg_690_pp0_iter21_reg;
        add_ln859_1_reg_690_pp0_iter23_reg <= add_ln859_1_reg_690_pp0_iter22_reg;
        add_ln859_1_reg_690_pp0_iter24_reg <= add_ln859_1_reg_690_pp0_iter23_reg;
        add_ln859_1_reg_690_pp0_iter25_reg <= add_ln859_1_reg_690_pp0_iter24_reg;
        add_ln859_1_reg_690_pp0_iter26_reg <= add_ln859_1_reg_690_pp0_iter25_reg;
        add_ln859_1_reg_690_pp0_iter27_reg <= add_ln859_1_reg_690_pp0_iter26_reg;
        add_ln859_1_reg_690_pp0_iter28_reg <= add_ln859_1_reg_690_pp0_iter27_reg;
        add_ln859_1_reg_690_pp0_iter29_reg <= add_ln859_1_reg_690_pp0_iter28_reg;
        add_ln859_1_reg_690_pp0_iter2_reg <= add_ln859_1_reg_690_pp0_iter1_reg;
        add_ln859_1_reg_690_pp0_iter30_reg <= add_ln859_1_reg_690_pp0_iter29_reg;
        add_ln859_1_reg_690_pp0_iter31_reg <= add_ln859_1_reg_690_pp0_iter30_reg;
        add_ln859_1_reg_690_pp0_iter32_reg <= add_ln859_1_reg_690_pp0_iter31_reg;
        add_ln859_1_reg_690_pp0_iter33_reg <= add_ln859_1_reg_690_pp0_iter32_reg;
        add_ln859_1_reg_690_pp0_iter34_reg <= add_ln859_1_reg_690_pp0_iter33_reg;
        add_ln859_1_reg_690_pp0_iter35_reg <= add_ln859_1_reg_690_pp0_iter34_reg;
        add_ln859_1_reg_690_pp0_iter36_reg <= add_ln859_1_reg_690_pp0_iter35_reg;
        add_ln859_1_reg_690_pp0_iter3_reg <= add_ln859_1_reg_690_pp0_iter2_reg;
        add_ln859_1_reg_690_pp0_iter4_reg <= add_ln859_1_reg_690_pp0_iter3_reg;
        add_ln859_1_reg_690_pp0_iter5_reg <= add_ln859_1_reg_690_pp0_iter4_reg;
        add_ln859_1_reg_690_pp0_iter6_reg <= add_ln859_1_reg_690_pp0_iter5_reg;
        add_ln859_1_reg_690_pp0_iter7_reg <= add_ln859_1_reg_690_pp0_iter6_reg;
        add_ln859_1_reg_690_pp0_iter8_reg <= add_ln859_1_reg_690_pp0_iter7_reg;
        add_ln859_1_reg_690_pp0_iter9_reg <= add_ln859_1_reg_690_pp0_iter8_reg;
        icmp_ln856_reg_681_pp0_iter10_reg <= icmp_ln856_reg_681_pp0_iter9_reg;
        icmp_ln856_reg_681_pp0_iter11_reg <= icmp_ln856_reg_681_pp0_iter10_reg;
        icmp_ln856_reg_681_pp0_iter12_reg <= icmp_ln856_reg_681_pp0_iter11_reg;
        icmp_ln856_reg_681_pp0_iter13_reg <= icmp_ln856_reg_681_pp0_iter12_reg;
        icmp_ln856_reg_681_pp0_iter14_reg <= icmp_ln856_reg_681_pp0_iter13_reg;
        icmp_ln856_reg_681_pp0_iter15_reg <= icmp_ln856_reg_681_pp0_iter14_reg;
        icmp_ln856_reg_681_pp0_iter16_reg <= icmp_ln856_reg_681_pp0_iter15_reg;
        icmp_ln856_reg_681_pp0_iter17_reg <= icmp_ln856_reg_681_pp0_iter16_reg;
        icmp_ln856_reg_681_pp0_iter18_reg <= icmp_ln856_reg_681_pp0_iter17_reg;
        icmp_ln856_reg_681_pp0_iter19_reg <= icmp_ln856_reg_681_pp0_iter18_reg;
        icmp_ln856_reg_681_pp0_iter1_reg <= icmp_ln856_reg_681;
        icmp_ln856_reg_681_pp0_iter20_reg <= icmp_ln856_reg_681_pp0_iter19_reg;
        icmp_ln856_reg_681_pp0_iter21_reg <= icmp_ln856_reg_681_pp0_iter20_reg;
        icmp_ln856_reg_681_pp0_iter22_reg <= icmp_ln856_reg_681_pp0_iter21_reg;
        icmp_ln856_reg_681_pp0_iter23_reg <= icmp_ln856_reg_681_pp0_iter22_reg;
        icmp_ln856_reg_681_pp0_iter24_reg <= icmp_ln856_reg_681_pp0_iter23_reg;
        icmp_ln856_reg_681_pp0_iter25_reg <= icmp_ln856_reg_681_pp0_iter24_reg;
        icmp_ln856_reg_681_pp0_iter26_reg <= icmp_ln856_reg_681_pp0_iter25_reg;
        icmp_ln856_reg_681_pp0_iter27_reg <= icmp_ln856_reg_681_pp0_iter26_reg;
        icmp_ln856_reg_681_pp0_iter28_reg <= icmp_ln856_reg_681_pp0_iter27_reg;
        icmp_ln856_reg_681_pp0_iter29_reg <= icmp_ln856_reg_681_pp0_iter28_reg;
        icmp_ln856_reg_681_pp0_iter2_reg <= icmp_ln856_reg_681_pp0_iter1_reg;
        icmp_ln856_reg_681_pp0_iter30_reg <= icmp_ln856_reg_681_pp0_iter29_reg;
        icmp_ln856_reg_681_pp0_iter31_reg <= icmp_ln856_reg_681_pp0_iter30_reg;
        icmp_ln856_reg_681_pp0_iter32_reg <= icmp_ln856_reg_681_pp0_iter31_reg;
        icmp_ln856_reg_681_pp0_iter33_reg <= icmp_ln856_reg_681_pp0_iter32_reg;
        icmp_ln856_reg_681_pp0_iter34_reg <= icmp_ln856_reg_681_pp0_iter33_reg;
        icmp_ln856_reg_681_pp0_iter35_reg <= icmp_ln856_reg_681_pp0_iter34_reg;
        icmp_ln856_reg_681_pp0_iter36_reg <= icmp_ln856_reg_681_pp0_iter35_reg;
        icmp_ln856_reg_681_pp0_iter37_reg <= icmp_ln856_reg_681_pp0_iter36_reg;
        icmp_ln856_reg_681_pp0_iter3_reg <= icmp_ln856_reg_681_pp0_iter2_reg;
        icmp_ln856_reg_681_pp0_iter4_reg <= icmp_ln856_reg_681_pp0_iter3_reg;
        icmp_ln856_reg_681_pp0_iter5_reg <= icmp_ln856_reg_681_pp0_iter4_reg;
        icmp_ln856_reg_681_pp0_iter6_reg <= icmp_ln856_reg_681_pp0_iter5_reg;
        icmp_ln856_reg_681_pp0_iter7_reg <= icmp_ln856_reg_681_pp0_iter6_reg;
        icmp_ln856_reg_681_pp0_iter8_reg <= icmp_ln856_reg_681_pp0_iter7_reg;
        icmp_ln856_reg_681_pp0_iter9_reg <= icmp_ln856_reg_681_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter10_empty_61_reg_231 <= ap_phi_reg_pp0_iter9_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter11_empty_61_reg_231 <= ap_phi_reg_pp0_iter10_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter12_empty_61_reg_231 <= ap_phi_reg_pp0_iter11_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter13_empty_61_reg_231 <= ap_phi_reg_pp0_iter12_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter14_empty_61_reg_231 <= ap_phi_reg_pp0_iter13_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter15_empty_61_reg_231 <= ap_phi_reg_pp0_iter14_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter16_empty_61_reg_231 <= ap_phi_reg_pp0_iter15_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter17_empty_61_reg_231 <= ap_phi_reg_pp0_iter16_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter18_empty_61_reg_231 <= ap_phi_reg_pp0_iter17_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter19_empty_61_reg_231 <= ap_phi_reg_pp0_iter18_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter1_empty_61_reg_231 <= ap_phi_reg_pp0_iter0_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter20_empty_61_reg_231 <= ap_phi_reg_pp0_iter19_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter21_empty_61_reg_231 <= ap_phi_reg_pp0_iter20_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter22_empty_61_reg_231 <= ap_phi_reg_pp0_iter21_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter23_empty_61_reg_231 <= ap_phi_reg_pp0_iter22_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter24_empty_61_reg_231 <= ap_phi_reg_pp0_iter23_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter25_empty_61_reg_231 <= ap_phi_reg_pp0_iter24_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter26_empty_61_reg_231 <= ap_phi_reg_pp0_iter25_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter27_empty_61_reg_231 <= ap_phi_reg_pp0_iter26_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        ap_phi_reg_pp0_iter28_empty_61_reg_231 <= ap_phi_reg_pp0_iter27_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        ap_phi_reg_pp0_iter29_empty_61_reg_231 <= ap_phi_reg_pp0_iter28_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter2_empty_61_reg_231 <= ap_phi_reg_pp0_iter1_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        ap_phi_reg_pp0_iter30_empty_61_reg_231 <= ap_phi_reg_pp0_iter29_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter30 == 1'b1))) begin
        ap_phi_reg_pp0_iter31_empty_61_reg_231 <= ap_phi_reg_pp0_iter30_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        ap_phi_reg_pp0_iter32_empty_61_reg_231 <= ap_phi_reg_pp0_iter31_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        ap_phi_reg_pp0_iter33_empty_61_reg_231 <= ap_phi_reg_pp0_iter32_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter33 == 1'b1))) begin
        ap_phi_reg_pp0_iter34_empty_61_reg_231 <= ap_phi_reg_pp0_iter33_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        ap_phi_reg_pp0_iter35_empty_61_reg_231 <= ap_phi_reg_pp0_iter34_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter35 == 1'b1))) begin
        ap_phi_reg_pp0_iter36_empty_61_reg_231 <= ap_phi_reg_pp0_iter35_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter3_empty_61_reg_231 <= ap_phi_reg_pp0_iter2_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter4_empty_61_reg_231 <= ap_phi_reg_pp0_iter3_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter5_empty_61_reg_231 <= ap_phi_reg_pp0_iter4_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter6_empty_61_reg_231 <= ap_phi_reg_pp0_iter5_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter7_empty_61_reg_231 <= ap_phi_reg_pp0_iter6_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter8_empty_61_reg_231 <= ap_phi_reg_pp0_iter7_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter9_empty_61_reg_231 <= ap_phi_reg_pp0_iter8_empty_61_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln856_reg_681_pp0_iter36_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        childNode_box_maxX_reg_732 <= {{lshr_ln859_fu_421_p2[159:128]}};
        childNode_box_maxY_reg_744 <= {{lshr_ln859_fu_421_p2[223:192]}};
        childNode_box_minX_reg_726 <= {{lshr_ln859_fu_421_p2[127:96]}};
        childNode_box_minY_reg_738 <= {{lshr_ln859_fu_421_p2[191:160]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op204_read_state74 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        gmem_addr_read_reg_716 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln853_reg_672 <= icmp_ln853_fu_295_p2;
        icmp_ln853_reg_672_pp0_iter10_reg <= icmp_ln853_reg_672_pp0_iter9_reg;
        icmp_ln853_reg_672_pp0_iter11_reg <= icmp_ln853_reg_672_pp0_iter10_reg;
        icmp_ln853_reg_672_pp0_iter12_reg <= icmp_ln853_reg_672_pp0_iter11_reg;
        icmp_ln853_reg_672_pp0_iter13_reg <= icmp_ln853_reg_672_pp0_iter12_reg;
        icmp_ln853_reg_672_pp0_iter14_reg <= icmp_ln853_reg_672_pp0_iter13_reg;
        icmp_ln853_reg_672_pp0_iter15_reg <= icmp_ln853_reg_672_pp0_iter14_reg;
        icmp_ln853_reg_672_pp0_iter16_reg <= icmp_ln853_reg_672_pp0_iter15_reg;
        icmp_ln853_reg_672_pp0_iter17_reg <= icmp_ln853_reg_672_pp0_iter16_reg;
        icmp_ln853_reg_672_pp0_iter18_reg <= icmp_ln853_reg_672_pp0_iter17_reg;
        icmp_ln853_reg_672_pp0_iter19_reg <= icmp_ln853_reg_672_pp0_iter18_reg;
        icmp_ln853_reg_672_pp0_iter1_reg <= icmp_ln853_reg_672;
        icmp_ln853_reg_672_pp0_iter20_reg <= icmp_ln853_reg_672_pp0_iter19_reg;
        icmp_ln853_reg_672_pp0_iter21_reg <= icmp_ln853_reg_672_pp0_iter20_reg;
        icmp_ln853_reg_672_pp0_iter22_reg <= icmp_ln853_reg_672_pp0_iter21_reg;
        icmp_ln853_reg_672_pp0_iter23_reg <= icmp_ln853_reg_672_pp0_iter22_reg;
        icmp_ln853_reg_672_pp0_iter24_reg <= icmp_ln853_reg_672_pp0_iter23_reg;
        icmp_ln853_reg_672_pp0_iter25_reg <= icmp_ln853_reg_672_pp0_iter24_reg;
        icmp_ln853_reg_672_pp0_iter26_reg <= icmp_ln853_reg_672_pp0_iter25_reg;
        icmp_ln853_reg_672_pp0_iter27_reg <= icmp_ln853_reg_672_pp0_iter26_reg;
        icmp_ln853_reg_672_pp0_iter28_reg <= icmp_ln853_reg_672_pp0_iter27_reg;
        icmp_ln853_reg_672_pp0_iter29_reg <= icmp_ln853_reg_672_pp0_iter28_reg;
        icmp_ln853_reg_672_pp0_iter2_reg <= icmp_ln853_reg_672_pp0_iter1_reg;
        icmp_ln853_reg_672_pp0_iter30_reg <= icmp_ln853_reg_672_pp0_iter29_reg;
        icmp_ln853_reg_672_pp0_iter31_reg <= icmp_ln853_reg_672_pp0_iter30_reg;
        icmp_ln853_reg_672_pp0_iter32_reg <= icmp_ln853_reg_672_pp0_iter31_reg;
        icmp_ln853_reg_672_pp0_iter33_reg <= icmp_ln853_reg_672_pp0_iter32_reg;
        icmp_ln853_reg_672_pp0_iter34_reg <= icmp_ln853_reg_672_pp0_iter33_reg;
        icmp_ln853_reg_672_pp0_iter35_reg <= icmp_ln853_reg_672_pp0_iter34_reg;
        icmp_ln853_reg_672_pp0_iter36_reg <= icmp_ln853_reg_672_pp0_iter35_reg;
        icmp_ln853_reg_672_pp0_iter3_reg <= icmp_ln853_reg_672_pp0_iter2_reg;
        icmp_ln853_reg_672_pp0_iter4_reg <= icmp_ln853_reg_672_pp0_iter3_reg;
        icmp_ln853_reg_672_pp0_iter5_reg <= icmp_ln853_reg_672_pp0_iter4_reg;
        icmp_ln853_reg_672_pp0_iter6_reg <= icmp_ln853_reg_672_pp0_iter5_reg;
        icmp_ln853_reg_672_pp0_iter7_reg <= icmp_ln853_reg_672_pp0_iter6_reg;
        icmp_ln853_reg_672_pp0_iter8_reg <= icmp_ln853_reg_672_pp0_iter7_reg;
        icmp_ln853_reg_672_pp0_iter9_reg <= icmp_ln853_reg_672_pp0_iter8_reg;
        icmp_ln859_reg_696_pp0_iter10_reg <= icmp_ln859_reg_696_pp0_iter9_reg;
        icmp_ln859_reg_696_pp0_iter11_reg <= icmp_ln859_reg_696_pp0_iter10_reg;
        icmp_ln859_reg_696_pp0_iter12_reg <= icmp_ln859_reg_696_pp0_iter11_reg;
        icmp_ln859_reg_696_pp0_iter13_reg <= icmp_ln859_reg_696_pp0_iter12_reg;
        icmp_ln859_reg_696_pp0_iter14_reg <= icmp_ln859_reg_696_pp0_iter13_reg;
        icmp_ln859_reg_696_pp0_iter15_reg <= icmp_ln859_reg_696_pp0_iter14_reg;
        icmp_ln859_reg_696_pp0_iter16_reg <= icmp_ln859_reg_696_pp0_iter15_reg;
        icmp_ln859_reg_696_pp0_iter17_reg <= icmp_ln859_reg_696_pp0_iter16_reg;
        icmp_ln859_reg_696_pp0_iter18_reg <= icmp_ln859_reg_696_pp0_iter17_reg;
        icmp_ln859_reg_696_pp0_iter19_reg <= icmp_ln859_reg_696_pp0_iter18_reg;
        icmp_ln859_reg_696_pp0_iter20_reg <= icmp_ln859_reg_696_pp0_iter19_reg;
        icmp_ln859_reg_696_pp0_iter21_reg <= icmp_ln859_reg_696_pp0_iter20_reg;
        icmp_ln859_reg_696_pp0_iter22_reg <= icmp_ln859_reg_696_pp0_iter21_reg;
        icmp_ln859_reg_696_pp0_iter23_reg <= icmp_ln859_reg_696_pp0_iter22_reg;
        icmp_ln859_reg_696_pp0_iter24_reg <= icmp_ln859_reg_696_pp0_iter23_reg;
        icmp_ln859_reg_696_pp0_iter25_reg <= icmp_ln859_reg_696_pp0_iter24_reg;
        icmp_ln859_reg_696_pp0_iter26_reg <= icmp_ln859_reg_696_pp0_iter25_reg;
        icmp_ln859_reg_696_pp0_iter27_reg <= icmp_ln859_reg_696_pp0_iter26_reg;
        icmp_ln859_reg_696_pp0_iter28_reg <= icmp_ln859_reg_696_pp0_iter27_reg;
        icmp_ln859_reg_696_pp0_iter29_reg <= icmp_ln859_reg_696_pp0_iter28_reg;
        icmp_ln859_reg_696_pp0_iter2_reg <= icmp_ln859_reg_696;
        icmp_ln859_reg_696_pp0_iter30_reg <= icmp_ln859_reg_696_pp0_iter29_reg;
        icmp_ln859_reg_696_pp0_iter31_reg <= icmp_ln859_reg_696_pp0_iter30_reg;
        icmp_ln859_reg_696_pp0_iter32_reg <= icmp_ln859_reg_696_pp0_iter31_reg;
        icmp_ln859_reg_696_pp0_iter33_reg <= icmp_ln859_reg_696_pp0_iter32_reg;
        icmp_ln859_reg_696_pp0_iter34_reg <= icmp_ln859_reg_696_pp0_iter33_reg;
        icmp_ln859_reg_696_pp0_iter35_reg <= icmp_ln859_reg_696_pp0_iter34_reg;
        icmp_ln859_reg_696_pp0_iter36_reg <= icmp_ln859_reg_696_pp0_iter35_reg;
        icmp_ln859_reg_696_pp0_iter3_reg <= icmp_ln859_reg_696_pp0_iter2_reg;
        icmp_ln859_reg_696_pp0_iter4_reg <= icmp_ln859_reg_696_pp0_iter3_reg;
        icmp_ln859_reg_696_pp0_iter5_reg <= icmp_ln859_reg_696_pp0_iter4_reg;
        icmp_ln859_reg_696_pp0_iter6_reg <= icmp_ln859_reg_696_pp0_iter5_reg;
        icmp_ln859_reg_696_pp0_iter7_reg <= icmp_ln859_reg_696_pp0_iter6_reg;
        icmp_ln859_reg_696_pp0_iter8_reg <= icmp_ln859_reg_696_pp0_iter7_reg;
        icmp_ln859_reg_696_pp0_iter9_reg <= icmp_ln859_reg_696_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln853_reg_672 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln856_reg_681 <= icmp_ln856_fu_317_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln856_reg_681 == 1'd0) & (icmp_ln853_reg_672 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln859_reg_696 <= icmp_ln859_fu_370_p2;
        select_ln859_reg_705[1 : 0] <= select_ln859_fu_385_p3[1 : 0];
        trunc_ln_reg_700 <= {{add_ln859_fu_365_p2[63:6]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln853_reg_672 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln853_reg_672_pp0_iter36_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        ap_condition_exit_pp0_iter37_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter37_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter37_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0_0to36 = 1'b1;
    end else begin
        ap_idle_pp0_0to36 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0_1to38 = 1'b1;
    end else begin
        ap_idle_pp0_1to38 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_1 = 3'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_120;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op134_readreq_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln859_reg_696_pp0_iter36_reg == 1'd1) & (icmp_ln856_reg_681_pp0_iter36_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln853_reg_672_pp0_iter36_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter37 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (ap_predicate_op204_read_state74 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln853_reg_672_pp0_iter36_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hasValidChild_2_out_ap_vld = 1'b1;
    end else begin
        hasValidChild_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op134_readreq_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op204_read_state74 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1)) | ((ap_predicate_op205_read_state75 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter37 == 1'b1)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        newNode_child_ce0 = 1'b1;
    end else begin
        newNode_child_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln853_reg_672_pp0_iter36_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out1_ap_vld = 1'b1;
    end else begin
        p_out1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln853_reg_672_pp0_iter36_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out2_ap_vld = 1'b1;
    end else begin
        p_out2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln853_reg_672_pp0_iter36_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out3_ap_vld = 1'b1;
    end else begin
        p_out3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln853_reg_672_pp0_iter36_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out_ap_vld = 1'b1;
    end else begin
        p_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to38 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln853_fu_301_p2 = (ap_sig_allocacmp_i_1 + 3'd1);

assign add_ln859_1_fu_357_p2 = (trunc_ln859_fu_353_p1 + trunc_ln12);

assign add_ln859_fu_365_p2 = ($signed(sext_ln859_3_fu_362_p1) + $signed(HBM_PTR));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_predicate_op205_read_state75 == 1'b1) & (m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_predicate_op205_read_state75 == 1'b1) & (m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_predicate_op205_read_state75 == 1'b1) & (m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_predicate_op204_read_state74 == 1'b1) & (m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_predicate_op204_read_state74 == 1'b1) & (m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

assign ap_block_state10_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage1_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage1_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage1_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage1_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage1_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((ap_predicate_op134_readreq_state4 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0));
end

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage1_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage1_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage1_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage1_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage1_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage1_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage1_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage1_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage1_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage1_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage1_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state74_pp0_stage1_iter36 = ((ap_predicate_op204_read_state74 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state75_pp0_stage0_iter37 = ((ap_predicate_op205_read_state75 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

assign ap_block_state76_pp0_stage1_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign ap_phi_reg_pp0_iter0_empty_61_reg_231 = 'bx;

always @ (*) begin
    ap_predicate_op134_readreq_state4 = ((icmp_ln856_reg_681 == 1'd0) & (icmp_ln853_reg_672_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op204_read_state74 = ((icmp_ln856_reg_681_pp0_iter35_reg == 1'd0) & (icmp_ln853_reg_672_pp0_iter36_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op205_read_state75 = ((icmp_ln859_reg_696_pp0_iter36_reg == 1'd1) & (icmp_ln856_reg_681_pp0_iter36_reg == 1'd0) & (icmp_ln853_reg_672_pp0_iter36_reg == 1'd0));
end

assign hasValidChild_2_out = hasValidChild_fu_124;

assign i_16_cast_fu_307_p1 = ap_sig_allocacmp_i_1;

assign icmp_ln200_1_fu_503_p2 = (($signed(childNode_box_minY_reg_738) < $signed(minY_1_fu_148)) ? 1'b1 : 1'b0);

assign icmp_ln200_fu_479_p2 = (($signed(childNode_box_minX_reg_726) < $signed(minX_1_fu_156)) ? 1'b1 : 1'b0);

assign icmp_ln224_1_fu_515_p2 = (($signed(maxY_1_fu_144) < $signed(childNode_box_maxY_reg_744)) ? 1'b1 : 1'b0);

assign icmp_ln224_fu_491_p2 = (($signed(maxX_1_fu_152) < $signed(childNode_box_maxX_reg_732)) ? 1'b1 : 1'b0);

assign icmp_ln853_fu_295_p2 = ((ap_sig_allocacmp_i_1 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln856_fu_317_p2 = ((newNode_child_q0 == 32'd4294967295) ? 1'b1 : 1'b0);

assign icmp_ln859_fu_370_p2 = ((add_ln859_1_reg_690 > 6'd8) ? 1'b1 : 1'b0);

assign lshr_ln859_fu_421_p2 = tmp_s_fu_403_p3 >> zext_ln859_fu_417_p1;

assign m_axi_gmem_ARADDR = sext_ln859_1_fu_393_p1;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = select_ln859_reg_705;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_WDATA = 512'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 64'd0;

assign m_axi_gmem_WUSER = 1'd0;

assign m_axi_gmem_WVALID = 1'b0;

assign maxX_2_fu_496_p3 = ((icmp_ln224_fu_491_p2[0:0] == 1'b1) ? childNode_box_maxX_reg_732 : maxX_1_fu_152);

assign maxY_2_fu_520_p3 = ((icmp_ln224_1_fu_515_p2[0:0] == 1'b1) ? childNode_box_maxY_reg_744 : maxY_1_fu_144);

assign minX_2_fu_484_p3 = ((icmp_ln200_fu_479_p2[0:0] == 1'b1) ? childNode_box_minX_reg_726 : minX_1_fu_156);

assign minY_2_fu_508_p3 = ((icmp_ln200_1_fu_503_p2[0:0] == 1'b1) ? childNode_box_minY_reg_738 : minY_1_fu_148);

assign newNode_child_address0 = i_16_cast_fu_307_p1;

assign p_out = maxY_fu_140;

assign p_out1 = minY_fu_136;

assign p_out2 = maxX_fu_132;

assign p_out3 = minX_fu_128;

assign select_ln859_fu_385_p3 = ((icmp_ln859_fu_370_p2[0:0] == 1'b1) ? 32'd2 : 32'd1);

assign sext_ln859_1_fu_393_p1 = $signed(trunc_ln_reg_700);

assign sext_ln859_2_fu_343_p1 = $signed(shl_ln859_2_fu_335_p3);

assign sext_ln859_3_fu_362_p1 = sub_ln859_reg_685;

assign sext_ln859_fu_331_p1 = $signed(shl_ln859_1_fu_323_p3);

assign shl_ln859_1_fu_323_p3 = {{newNode_child_q0}, {6'd0}};

assign shl_ln859_2_fu_335_p3 = {{newNode_child_q0}, {3'd0}};

assign shl_ln_fu_410_p3 = {{add_ln859_1_reg_690_pp0_iter36_reg}, {3'd0}};

assign sub_ln859_fu_347_p2 = ($signed(sext_ln859_fu_331_p1) - $signed(sext_ln859_2_fu_343_p1));

assign tmp_s_fu_403_p3 = {{ap_phi_reg_pp0_iter37_empty_61_reg_231}, {gmem_addr_read_reg_716}};

assign trunc_ln859_fu_353_p1 = sub_ln859_fu_347_p2[5:0];

assign zext_ln859_fu_417_p1 = shl_ln_fu_410_p3;

always @ (posedge ap_clk) begin
    sub_ln859_reg_685[2:0] <= 3'b000;
    select_ln859_reg_705[31:2] <= 30'b000000000000000000000000000000;
end

endmodule //krnl_memory_manager_Pipeline_VITIS_LOOP_853_28
