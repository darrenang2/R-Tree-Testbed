#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/pfm_top_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::vector<void*> *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE_bv_1(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_2(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_3(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_4(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_5(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<5, sc_dt::sc_bv<5> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_6(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_8(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_9(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<9, sc_dt::sc_bv<9> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_10(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<10, sc_dt::sc_bv<10> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_12(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<12, sc_dt::sc_bv<12> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_15(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<15, sc_dt::sc_bv<15> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_16(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<16, sc_dt::sc_bv<16> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_17(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<17, sc_dt::sc_bv<17> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_18(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<18, sc_dt::sc_bv<18> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_20(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<20, sc_dt::sc_bv<20> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_32(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_34(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<34, sc_dt::sc_bv<34> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_39(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<39, sc_dt::sc_bv<39> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_64(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_72(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<72, sc_dt::sc_bv<72> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_96(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<96, sc_dt::sc_bv<96> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_128(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<128, sc_dt::sc_bv<128> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_160(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<160, sc_dt::sc_bv<160> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_192(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<192, sc_dt::sc_bv<192> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_320(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<320, sc_dt::sc_bv<320> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_512(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_int(unsigned int sc_net_index, char* pval)
    {
          int val = *((int*)(pval));
          ((xsim_sc_channel<0, int>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bit(unsigned int sc_net_index, char* pval)
    {
            sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_logic(unsigned int sc_net_index, char* pval)
    {
          sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bool(unsigned int sc_net_index, char* pval)
    {
          bool val = *((bool*)(pval));
          ((xsim_sc_channel<0, bool>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::vector<void*> ();
        sc_inst_1 = new pfm_dynamic_auto_cc_1(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.auto_cc");
        sc_inst_1->xsim_set_dbg_index(2075);
        xsim_sc_channel<0, bool > *p_1_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aclk.bind(*p_1_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aresetn.bind(*p_1_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_awprot.bind(*p_1_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(3893112);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(3893336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(3893392);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(3893448);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_arprot.bind(*p_1_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(3893728);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(3893784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(3893840);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(3893896);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_rready);
        xsim_sc_channel<0, bool > *p_1_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aclk.bind(*p_1_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aresetn.bind(*p_1_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_awaddr.bind(*p_1_m_axi_awaddr);
        p_1_m_axi_awaddr->set_sv_netview_offsetfromdp(3894120);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_awprot.bind(*p_1_m_axi_awprot);
        p_1_m_axi_awprot->set_sv_netview_offsetfromdp(3894176);
        xsim_sc_channel<0, bool > *p_1_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awvalid.bind(*p_1_m_axi_awvalid);
        p_1_m_axi_awvalid->set_sv_netview_offsetfromdp(3894232);
        xsim_sc_channel<0, bool > *p_1_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awready.bind(*p_1_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_wdata.bind(*p_1_m_axi_wdata);
        p_1_m_axi_wdata->set_sv_netview_offsetfromdp(3894344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->m_axi_wstrb.bind(*p_1_m_axi_wstrb);
        p_1_m_axi_wstrb->set_sv_netview_offsetfromdp(3894400);
        xsim_sc_channel<0, bool > *p_1_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wvalid.bind(*p_1_m_axi_wvalid);
        p_1_m_axi_wvalid->set_sv_netview_offsetfromdp(3894456);
        xsim_sc_channel<0, bool > *p_1_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wready.bind(*p_1_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_bresp.bind(*p_1_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bvalid.bind(*p_1_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bready.bind(*p_1_m_axi_bready);
        p_1_m_axi_bready->set_sv_netview_offsetfromdp(3894680);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_araddr.bind(*p_1_m_axi_araddr);
        p_1_m_axi_araddr->set_sv_netview_offsetfromdp(3894736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_arprot.bind(*p_1_m_axi_arprot);
        p_1_m_axi_arprot->set_sv_netview_offsetfromdp(3894792);
        xsim_sc_channel<0, bool > *p_1_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arvalid.bind(*p_1_m_axi_arvalid);
        p_1_m_axi_arvalid->set_sv_netview_offsetfromdp(3894848);
        xsim_sc_channel<0, bool > *p_1_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arready.bind(*p_1_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_rdata.bind(*p_1_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_rresp.bind(*p_1_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rvalid.bind(*p_1_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rready.bind(*p_1_m_axi_rready);
        p_1_m_axi_rready->set_sv_netview_offsetfromdp(3895128);
        sc_inst_2 = new pfm_dynamic_m00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.m00_regslice");
        sc_inst_2->xsim_set_dbg_index(2076);
        xsim_sc_channel<0, bool > *p_2_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_2->aclk.bind(*p_2_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aclk);
        xsim_sc_channel<0, bool > *p_2_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->aresetn.bind(*p_2_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(3895512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(3895736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(3895792);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(3895848);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(3896128);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(3896184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(3896240);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(3896296);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_awaddr.bind(*p_2_m_axi_awaddr);
        p_2_m_axi_awaddr->set_sv_netview_offsetfromdp(3896408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_awprot.bind(*p_2_m_axi_awprot);
        p_2_m_axi_awprot->set_sv_netview_offsetfromdp(3896464);
        xsim_sc_channel<0, bool > *p_2_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awvalid.bind(*p_2_m_axi_awvalid);
        p_2_m_axi_awvalid->set_sv_netview_offsetfromdp(3896520);
        xsim_sc_channel<0, bool > *p_2_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awready.bind(*p_2_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_wdata.bind(*p_2_m_axi_wdata);
        p_2_m_axi_wdata->set_sv_netview_offsetfromdp(3896632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->m_axi_wstrb.bind(*p_2_m_axi_wstrb);
        p_2_m_axi_wstrb->set_sv_netview_offsetfromdp(3896688);
        xsim_sc_channel<0, bool > *p_2_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wvalid.bind(*p_2_m_axi_wvalid);
        p_2_m_axi_wvalid->set_sv_netview_offsetfromdp(3896744);
        xsim_sc_channel<0, bool > *p_2_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wready.bind(*p_2_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_bresp.bind(*p_2_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bvalid.bind(*p_2_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bready.bind(*p_2_m_axi_bready);
        p_2_m_axi_bready->set_sv_netview_offsetfromdp(3896968);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_araddr.bind(*p_2_m_axi_araddr);
        p_2_m_axi_araddr->set_sv_netview_offsetfromdp(3897024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_arprot.bind(*p_2_m_axi_arprot);
        p_2_m_axi_arprot->set_sv_netview_offsetfromdp(3897080);
        xsim_sc_channel<0, bool > *p_2_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arvalid.bind(*p_2_m_axi_arvalid);
        p_2_m_axi_arvalid->set_sv_netview_offsetfromdp(3897136);
        xsim_sc_channel<0, bool > *p_2_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arready.bind(*p_2_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_rdata.bind(*p_2_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_rresp.bind(*p_2_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rvalid.bind(*p_2_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rready.bind(*p_2_m_axi_rready);
        p_2_m_axi_rready->set_sv_netview_offsetfromdp(3897416);
        sc_inst_3 = new pfm_dynamic_auto_cc_2(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.auto_cc");
        sc_inst_3->xsim_set_dbg_index(2117);
        xsim_sc_channel<0, bool > *p_3_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aclk.bind(*p_3_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aresetn.bind(*p_3_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot.bind(*p_3_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(3933288);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(3933512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(3933568);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(3933624);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot.bind(*p_3_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(3933904);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(3933960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(3934016);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(3934072);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aclk.bind(*p_3_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aresetn.bind(*p_3_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_awaddr.bind(*p_3_m_axi_awaddr);
        p_3_m_axi_awaddr->set_sv_netview_offsetfromdp(3934296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_awprot.bind(*p_3_m_axi_awprot);
        p_3_m_axi_awprot->set_sv_netview_offsetfromdp(3934352);
        xsim_sc_channel<0, bool > *p_3_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awvalid.bind(*p_3_m_axi_awvalid);
        p_3_m_axi_awvalid->set_sv_netview_offsetfromdp(3934408);
        xsim_sc_channel<0, bool > *p_3_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awready.bind(*p_3_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_wdata.bind(*p_3_m_axi_wdata);
        p_3_m_axi_wdata->set_sv_netview_offsetfromdp(3934520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->m_axi_wstrb.bind(*p_3_m_axi_wstrb);
        p_3_m_axi_wstrb->set_sv_netview_offsetfromdp(3934576);
        xsim_sc_channel<0, bool > *p_3_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wvalid.bind(*p_3_m_axi_wvalid);
        p_3_m_axi_wvalid->set_sv_netview_offsetfromdp(3934632);
        xsim_sc_channel<0, bool > *p_3_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wready.bind(*p_3_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_bresp.bind(*p_3_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bvalid.bind(*p_3_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bready.bind(*p_3_m_axi_bready);
        p_3_m_axi_bready->set_sv_netview_offsetfromdp(3934856);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_araddr.bind(*p_3_m_axi_araddr);
        p_3_m_axi_araddr->set_sv_netview_offsetfromdp(3934912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_arprot.bind(*p_3_m_axi_arprot);
        p_3_m_axi_arprot->set_sv_netview_offsetfromdp(3934968);
        xsim_sc_channel<0, bool > *p_3_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arvalid.bind(*p_3_m_axi_arvalid);
        p_3_m_axi_arvalid->set_sv_netview_offsetfromdp(3935024);
        xsim_sc_channel<0, bool > *p_3_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arready.bind(*p_3_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_rdata.bind(*p_3_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_rresp.bind(*p_3_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rvalid.bind(*p_3_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rready.bind(*p_3_m_axi_rready);
        p_3_m_axi_rready->set_sv_netview_offsetfromdp(3935304);
        sc_inst_4 = new pfm_dynamic_m01_regslice_8(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.m01_regslice");
        sc_inst_4->xsim_set_dbg_index(2118);
        xsim_sc_channel<0, bool > *p_4_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_4->aclk.bind(*p_4_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aclk);
        xsim_sc_channel<0, bool > *p_4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->aresetn.bind(*p_4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot.bind(*p_4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(3935688);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(3935912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(3935968);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(3936024);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot.bind(*p_4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(3936304);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(3936360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(3936416);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(3936472);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_awaddr.bind(*p_4_m_axi_awaddr);
        p_4_m_axi_awaddr->set_sv_netview_offsetfromdp(3936584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_awprot.bind(*p_4_m_axi_awprot);
        p_4_m_axi_awprot->set_sv_netview_offsetfromdp(3936640);
        xsim_sc_channel<0, bool > *p_4_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awvalid.bind(*p_4_m_axi_awvalid);
        p_4_m_axi_awvalid->set_sv_netview_offsetfromdp(3936696);
        xsim_sc_channel<0, bool > *p_4_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awready.bind(*p_4_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_wdata.bind(*p_4_m_axi_wdata);
        p_4_m_axi_wdata->set_sv_netview_offsetfromdp(3936808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->m_axi_wstrb.bind(*p_4_m_axi_wstrb);
        p_4_m_axi_wstrb->set_sv_netview_offsetfromdp(3936864);
        xsim_sc_channel<0, bool > *p_4_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wvalid.bind(*p_4_m_axi_wvalid);
        p_4_m_axi_wvalid->set_sv_netview_offsetfromdp(3936920);
        xsim_sc_channel<0, bool > *p_4_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wready.bind(*p_4_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_bresp.bind(*p_4_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bvalid.bind(*p_4_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bready.bind(*p_4_m_axi_bready);
        p_4_m_axi_bready->set_sv_netview_offsetfromdp(3937144);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_araddr.bind(*p_4_m_axi_araddr);
        p_4_m_axi_araddr->set_sv_netview_offsetfromdp(3937200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_arprot.bind(*p_4_m_axi_arprot);
        p_4_m_axi_arprot->set_sv_netview_offsetfromdp(3937256);
        xsim_sc_channel<0, bool > *p_4_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arvalid.bind(*p_4_m_axi_arvalid);
        p_4_m_axi_arvalid->set_sv_netview_offsetfromdp(3937312);
        xsim_sc_channel<0, bool > *p_4_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arready.bind(*p_4_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_rdata.bind(*p_4_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_rresp.bind(*p_4_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rvalid.bind(*p_4_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rready.bind(*p_4_m_axi_rready);
        p_4_m_axi_rready->set_sv_netview_offsetfromdp(3937592);
        sc_inst_5 = new pfm_dynamic_auto_cc_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.auto_cc");
        sc_inst_5->xsim_set_dbg_index(2159);
        xsim_sc_channel<0, bool > *p_5_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aclk.bind(*p_5_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aresetn.bind(*p_5_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr.bind(*p_5_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_awprot.bind(*p_5_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid.bind(*p_5_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready.bind(*p_5_s_axi_awready);
        p_5_s_axi_awready->set_sv_netview_offsetfromdp(3973464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata.bind(*p_5_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb.bind(*p_5_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid.bind(*p_5_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready.bind(*p_5_s_axi_wready);
        p_5_s_axi_wready->set_sv_netview_offsetfromdp(3973688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp.bind(*p_5_s_axi_bresp);
        p_5_s_axi_bresp->set_sv_netview_offsetfromdp(3973744);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid.bind(*p_5_s_axi_bvalid);
        p_5_s_axi_bvalid->set_sv_netview_offsetfromdp(3973800);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready.bind(*p_5_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr.bind(*p_5_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_arprot.bind(*p_5_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid.bind(*p_5_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready.bind(*p_5_s_axi_arready);
        p_5_s_axi_arready->set_sv_netview_offsetfromdp(3974080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata.bind(*p_5_s_axi_rdata);
        p_5_s_axi_rdata->set_sv_netview_offsetfromdp(3974136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp.bind(*p_5_s_axi_rresp);
        p_5_s_axi_rresp->set_sv_netview_offsetfromdp(3974192);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid.bind(*p_5_s_axi_rvalid);
        p_5_s_axi_rvalid->set_sv_netview_offsetfromdp(3974248);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready.bind(*p_5_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_rready);
        xsim_sc_channel<0, bool > *p_5_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aclk.bind(*p_5_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aresetn.bind(*p_5_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_awaddr.bind(*p_5_m_axi_awaddr);
        p_5_m_axi_awaddr->set_sv_netview_offsetfromdp(3974472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_awprot.bind(*p_5_m_axi_awprot);
        p_5_m_axi_awprot->set_sv_netview_offsetfromdp(3974528);
        xsim_sc_channel<0, bool > *p_5_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awvalid.bind(*p_5_m_axi_awvalid);
        p_5_m_axi_awvalid->set_sv_netview_offsetfromdp(3974584);
        xsim_sc_channel<0, bool > *p_5_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awready.bind(*p_5_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_wdata.bind(*p_5_m_axi_wdata);
        p_5_m_axi_wdata->set_sv_netview_offsetfromdp(3974696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->m_axi_wstrb.bind(*p_5_m_axi_wstrb);
        p_5_m_axi_wstrb->set_sv_netview_offsetfromdp(3974752);
        xsim_sc_channel<0, bool > *p_5_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wvalid.bind(*p_5_m_axi_wvalid);
        p_5_m_axi_wvalid->set_sv_netview_offsetfromdp(3974808);
        xsim_sc_channel<0, bool > *p_5_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wready.bind(*p_5_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_bresp.bind(*p_5_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bvalid.bind(*p_5_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bready.bind(*p_5_m_axi_bready);
        p_5_m_axi_bready->set_sv_netview_offsetfromdp(3975032);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_araddr.bind(*p_5_m_axi_araddr);
        p_5_m_axi_araddr->set_sv_netview_offsetfromdp(3975088);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_arprot.bind(*p_5_m_axi_arprot);
        p_5_m_axi_arprot->set_sv_netview_offsetfromdp(3975144);
        xsim_sc_channel<0, bool > *p_5_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arvalid.bind(*p_5_m_axi_arvalid);
        p_5_m_axi_arvalid->set_sv_netview_offsetfromdp(3975200);
        xsim_sc_channel<0, bool > *p_5_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arready.bind(*p_5_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_rdata.bind(*p_5_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_rresp.bind(*p_5_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rvalid.bind(*p_5_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rready.bind(*p_5_m_axi_rready);
        p_5_m_axi_rready->set_sv_netview_offsetfromdp(3975480);
        sc_inst_6 = new pfm_dynamic_m02_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.m02_regslice");
        sc_inst_6->xsim_set_dbg_index(2160);
        xsim_sc_channel<0, bool > *p_6_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->aclk.bind(*p_6_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aclk);
        xsim_sc_channel<0, bool > *p_6_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->aresetn.bind(*p_6_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_awaddr.bind(*p_6_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_awprot.bind(*p_6_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awvalid.bind(*p_6_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awready.bind(*p_6_s_axi_awready);
        p_6_s_axi_awready->set_sv_netview_offsetfromdp(3975864);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_wdata.bind(*p_6_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_wstrb.bind(*p_6_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_6_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wvalid.bind(*p_6_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wready.bind(*p_6_s_axi_wready);
        p_6_s_axi_wready->set_sv_netview_offsetfromdp(3976088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_bresp.bind(*p_6_s_axi_bresp);
        p_6_s_axi_bresp->set_sv_netview_offsetfromdp(3976144);
        xsim_sc_channel<0, bool > *p_6_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bvalid.bind(*p_6_s_axi_bvalid);
        p_6_s_axi_bvalid->set_sv_netview_offsetfromdp(3976200);
        xsim_sc_channel<0, bool > *p_6_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bready.bind(*p_6_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_araddr.bind(*p_6_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_arprot.bind(*p_6_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arvalid.bind(*p_6_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arready.bind(*p_6_s_axi_arready);
        p_6_s_axi_arready->set_sv_netview_offsetfromdp(3976480);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_rdata.bind(*p_6_s_axi_rdata);
        p_6_s_axi_rdata->set_sv_netview_offsetfromdp(3976536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_rresp.bind(*p_6_s_axi_rresp);
        p_6_s_axi_rresp->set_sv_netview_offsetfromdp(3976592);
        xsim_sc_channel<0, bool > *p_6_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rvalid.bind(*p_6_s_axi_rvalid);
        p_6_s_axi_rvalid->set_sv_netview_offsetfromdp(3976648);
        xsim_sc_channel<0, bool > *p_6_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rready.bind(*p_6_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_awaddr.bind(*p_6_m_axi_awaddr);
        p_6_m_axi_awaddr->set_sv_netview_offsetfromdp(3976760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_awprot.bind(*p_6_m_axi_awprot);
        p_6_m_axi_awprot->set_sv_netview_offsetfromdp(3976816);
        xsim_sc_channel<0, bool > *p_6_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awvalid.bind(*p_6_m_axi_awvalid);
        p_6_m_axi_awvalid->set_sv_netview_offsetfromdp(3976872);
        xsim_sc_channel<0, bool > *p_6_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awready.bind(*p_6_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_wdata.bind(*p_6_m_axi_wdata);
        p_6_m_axi_wdata->set_sv_netview_offsetfromdp(3976984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->m_axi_wstrb.bind(*p_6_m_axi_wstrb);
        p_6_m_axi_wstrb->set_sv_netview_offsetfromdp(3977040);
        xsim_sc_channel<0, bool > *p_6_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wvalid.bind(*p_6_m_axi_wvalid);
        p_6_m_axi_wvalid->set_sv_netview_offsetfromdp(3977096);
        xsim_sc_channel<0, bool > *p_6_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wready.bind(*p_6_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_bresp.bind(*p_6_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bvalid.bind(*p_6_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bready.bind(*p_6_m_axi_bready);
        p_6_m_axi_bready->set_sv_netview_offsetfromdp(3977320);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_araddr.bind(*p_6_m_axi_araddr);
        p_6_m_axi_araddr->set_sv_netview_offsetfromdp(3977376);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_arprot.bind(*p_6_m_axi_arprot);
        p_6_m_axi_arprot->set_sv_netview_offsetfromdp(3977432);
        xsim_sc_channel<0, bool > *p_6_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arvalid.bind(*p_6_m_axi_arvalid);
        p_6_m_axi_arvalid->set_sv_netview_offsetfromdp(3977488);
        xsim_sc_channel<0, bool > *p_6_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arready.bind(*p_6_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_rdata.bind(*p_6_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_rresp.bind(*p_6_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rvalid.bind(*p_6_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rready.bind(*p_6_m_axi_rready);
        p_6_m_axi_rready->set_sv_netview_offsetfromdp(3977768);
        sc_inst_7 = new pfm_dynamic_s00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.s00_couplers.s00_regslice");
        sc_inst_7->xsim_set_dbg_index(2201);
        xsim_sc_channel<0, bool > *p_7_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->aclk.bind(*p_7_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_aclk);
        xsim_sc_channel<0, bool > *p_7_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->aresetn.bind(*p_7_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->s_axi_awaddr.bind(*p_7_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_awprot.bind(*p_7_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awvalid.bind(*p_7_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awready.bind(*p_7_s_axi_awready);
        p_7_s_axi_awready->set_sv_netview_offsetfromdp(4001408);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_wdata.bind(*p_7_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_axi_wstrb.bind(*p_7_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_7_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wvalid.bind(*p_7_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wready.bind(*p_7_s_axi_wready);
        p_7_s_axi_wready->set_sv_netview_offsetfromdp(4001632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_bresp.bind(*p_7_s_axi_bresp);
        p_7_s_axi_bresp->set_sv_netview_offsetfromdp(4001688);
        xsim_sc_channel<0, bool > *p_7_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bvalid.bind(*p_7_s_axi_bvalid);
        p_7_s_axi_bvalid->set_sv_netview_offsetfromdp(4001744);
        xsim_sc_channel<0, bool > *p_7_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bready.bind(*p_7_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->s_axi_araddr.bind(*p_7_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_arprot.bind(*p_7_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arvalid.bind(*p_7_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arready.bind(*p_7_s_axi_arready);
        p_7_s_axi_arready->set_sv_netview_offsetfromdp(4002024);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_rdata.bind(*p_7_s_axi_rdata);
        p_7_s_axi_rdata->set_sv_netview_offsetfromdp(4002080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_rresp.bind(*p_7_s_axi_rresp);
        p_7_s_axi_rresp->set_sv_netview_offsetfromdp(4002136);
        xsim_sc_channel<0, bool > *p_7_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rvalid.bind(*p_7_s_axi_rvalid);
        p_7_s_axi_rvalid->set_sv_netview_offsetfromdp(4002192);
        xsim_sc_channel<0, bool > *p_7_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rready.bind(*p_7_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->m_axi_awaddr.bind(*p_7_m_axi_awaddr);
        p_7_m_axi_awaddr->set_sv_netview_offsetfromdp(4002304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_awprot.bind(*p_7_m_axi_awprot);
        p_7_m_axi_awprot->set_sv_netview_offsetfromdp(4002360);
        xsim_sc_channel<0, bool > *p_7_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awvalid.bind(*p_7_m_axi_awvalid);
        p_7_m_axi_awvalid->set_sv_netview_offsetfromdp(4002416);
        xsim_sc_channel<0, bool > *p_7_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awready.bind(*p_7_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_wdata.bind(*p_7_m_axi_wdata);
        p_7_m_axi_wdata->set_sv_netview_offsetfromdp(4002528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_axi_wstrb.bind(*p_7_m_axi_wstrb);
        p_7_m_axi_wstrb->set_sv_netview_offsetfromdp(4002584);
        xsim_sc_channel<0, bool > *p_7_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wvalid.bind(*p_7_m_axi_wvalid);
        p_7_m_axi_wvalid->set_sv_netview_offsetfromdp(4002640);
        xsim_sc_channel<0, bool > *p_7_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wready.bind(*p_7_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_bresp.bind(*p_7_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bvalid.bind(*p_7_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bready.bind(*p_7_m_axi_bready);
        p_7_m_axi_bready->set_sv_netview_offsetfromdp(4002864);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->m_axi_araddr.bind(*p_7_m_axi_araddr);
        p_7_m_axi_araddr->set_sv_netview_offsetfromdp(4002920);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_arprot.bind(*p_7_m_axi_arprot);
        p_7_m_axi_arprot->set_sv_netview_offsetfromdp(4002976);
        xsim_sc_channel<0, bool > *p_7_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arvalid.bind(*p_7_m_axi_arvalid);
        p_7_m_axi_arvalid->set_sv_netview_offsetfromdp(4003032);
        xsim_sc_channel<0, bool > *p_7_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arready.bind(*p_7_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_rdata.bind(*p_7_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_rresp.bind(*p_7_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rvalid.bind(*p_7_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rready.bind(*p_7_m_axi_rready);
        p_7_m_axi_rready->set_sv_netview_offsetfromdp(4003312);
        sc_inst_8 = new pfm_dynamic_xbar_6(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.xbar");
        sc_inst_8->xsim_set_dbg_index(1146);
        xsim_sc_channel<0, bool > *p_8_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->aclk.bind(*p_8_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aclk);
        xsim_sc_channel<0, bool > *p_8_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->aresetn.bind(*p_8_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->s_axi_awaddr.bind(*p_8_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_awprot.bind(*p_8_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_axi_awvalid.bind(*p_8_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_axi_awready.bind(*p_8_s_axi_awready);
        p_8_s_axi_awready->set_sv_netview_offsetfromdp(4003696);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_wdata.bind(*p_8_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_axi_wstrb.bind(*p_8_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_axi_wvalid.bind(*p_8_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_axi_wready.bind(*p_8_s_axi_wready);
        p_8_s_axi_wready->set_sv_netview_offsetfromdp(4003920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_bresp.bind(*p_8_s_axi_bresp);
        p_8_s_axi_bresp->set_sv_netview_offsetfromdp(4003976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_axi_bvalid.bind(*p_8_s_axi_bvalid);
        p_8_s_axi_bvalid->set_sv_netview_offsetfromdp(4004032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_axi_bready.bind(*p_8_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->s_axi_araddr.bind(*p_8_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_arprot.bind(*p_8_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_axi_arvalid.bind(*p_8_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_axi_arready.bind(*p_8_s_axi_arready);
        p_8_s_axi_arready->set_sv_netview_offsetfromdp(4004312);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_rdata.bind(*p_8_s_axi_rdata);
        p_8_s_axi_rdata->set_sv_netview_offsetfromdp(4004368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_rresp.bind(*p_8_s_axi_rresp);
        p_8_s_axi_rresp->set_sv_netview_offsetfromdp(4004424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_axi_rvalid.bind(*p_8_s_axi_rvalid);
        p_8_s_axi_rvalid->set_sv_netview_offsetfromdp(4004480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_axi_rready.bind(*p_8_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_rready);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_8_m_axi_awaddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_8->m_axi_awaddr.bind(*p_8_m_axi_awaddr);
        p_8_m_axi_awaddr->set_sv_netview_offsetfromdp(4004592);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_8_m_axi_awprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_8->m_axi_awprot.bind(*p_8_m_axi_awprot);
        p_8_m_axi_awprot->set_sv_netview_offsetfromdp(4004648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_awvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_awvalid.bind(*p_8_m_axi_awvalid);
        p_8_m_axi_awvalid->set_sv_netview_offsetfromdp(4004704);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_awready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_awready.bind(*p_8_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_awready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_8_m_axi_wdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_8->m_axi_wdata.bind(*p_8_m_axi_wdata);
        p_8_m_axi_wdata->set_sv_netview_offsetfromdp(4004816);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_8_m_axi_wstrb = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_8->m_axi_wstrb.bind(*p_8_m_axi_wstrb);
        p_8_m_axi_wstrb->set_sv_netview_offsetfromdp(4004872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_wvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_wvalid.bind(*p_8_m_axi_wvalid);
        p_8_m_axi_wvalid->set_sv_netview_offsetfromdp(4004928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_wready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_wready.bind(*p_8_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_wready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_8_m_axi_bresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_8->m_axi_bresp.bind(*p_8_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_bvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_bvalid.bind(*p_8_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_bready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_bready.bind(*p_8_m_axi_bready);
        p_8_m_axi_bready->set_sv_netview_offsetfromdp(4005152);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_8_m_axi_araddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_8->m_axi_araddr.bind(*p_8_m_axi_araddr);
        p_8_m_axi_araddr->set_sv_netview_offsetfromdp(4005208);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_8_m_axi_arprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_8->m_axi_arprot.bind(*p_8_m_axi_arprot);
        p_8_m_axi_arprot->set_sv_netview_offsetfromdp(4005264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_arvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_arvalid.bind(*p_8_m_axi_arvalid);
        p_8_m_axi_arvalid->set_sv_netview_offsetfromdp(4005320);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_arready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_arready.bind(*p_8_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_arready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_8_m_axi_rdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_8->m_axi_rdata.bind(*p_8_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rdata);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_8_m_axi_rresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_8->m_axi_rresp.bind(*p_8_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_rvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_rvalid.bind(*p_8_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_rready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_rready.bind(*p_8_m_axi_rready);
        p_8_m_axi_rready->set_sv_netview_offsetfromdp(4005600);
        sc_inst_9 = new pfm_dynamic_dpa_hub_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_hub");
        sc_inst_9->xsim_set_dbg_index(758);
        xsim_sc_channel<0, bool > *p_9_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_clk.bind(*p_9_s_aximm_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_9_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_aresetn.bind(*p_9_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_9_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_9->trace_clk.bind(*p_9_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_trace_clk);
        xsim_sc_channel<0, bool > *p_9_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->trace_aresetn.bind(*p_9_trace_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_trace_aresetn);
        xsim_sc_channel<0, bool > *p_9_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_9->axilite_clk.bind(*p_9_axilite_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_axilite_clk);
        xsim_sc_channel<0, bool > *p_9_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->axilite_aresetn.bind(*p_9_axilite_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_9_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_9->trace_tready0.bind(*p_9_trace_tready0);
        p_9_trace_tready0->set_sv_netview_offsetfromdp(4006040);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->trace_tdata0.bind(*p_9_trace_tdata0);
        (*_glb_hdl_sc_channel_map).push_back(p_9_trace_tdata0);
        xsim_sc_channel<0, bool > *p_9_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_9->trace_tlast0.bind(*p_9_trace_tlast0);
        (*_glb_hdl_sc_channel_map).push_back(p_9_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->trace_tid0.bind(*p_9_trace_tid0);
        (*_glb_hdl_sc_channel_map).push_back(p_9_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->trace_tdest0.bind(*p_9_trace_tdest0);
        (*_glb_hdl_sc_channel_map).push_back(p_9_trace_tdest0);
        xsim_sc_channel<0, bool > *p_9_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_9->trace_tvalid0.bind(*p_9_trace_tvalid0);
        (*_glb_hdl_sc_channel_map).push_back(p_9_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_9_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_9->trace_tready1.bind(*p_9_trace_tready1);
        p_9_trace_tready1->set_sv_netview_offsetfromdp(4006376);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->trace_tdata1.bind(*p_9_trace_tdata1);
        p_9_trace_tdata1->set_sv_netview_offsetfromdp(4006432);
        xsim_sc_channel<0, bool > *p_9_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_9->trace_tlast1.bind(*p_9_trace_tlast1);
        (*_glb_hdl_sc_channel_map).push_back(p_9_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->trace_tid1.bind(*p_9_trace_tid1);
        (*_glb_hdl_sc_channel_map).push_back(p_9_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->trace_tdest1.bind(*p_9_trace_tdest1);
        (*_glb_hdl_sc_channel_map).push_back(p_9_trace_tdest1);
        xsim_sc_channel<0, bool > *p_9_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_9->trace_tvalid1.bind(*p_9_trace_tvalid1);
        (*_glb_hdl_sc_channel_map).push_back(p_9_trace_tvalid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_awaddr.bind(*p_9_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_9_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awvalid.bind(*p_9_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awready.bind(*p_9_s_axi_awready);
        p_9_s_axi_awready->set_sv_netview_offsetfromdp(4006824);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_wdata.bind(*p_9_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_axi_wstrb.bind(*p_9_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wvalid.bind(*p_9_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wready.bind(*p_9_s_axi_wready);
        p_9_s_axi_wready->set_sv_netview_offsetfromdp(4007048);
        xsim_sc_channel<0, bool > *p_9_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bvalid.bind(*p_9_s_axi_bvalid);
        p_9_s_axi_bvalid->set_sv_netview_offsetfromdp(4007104);
        xsim_sc_channel<0, bool > *p_9_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bready.bind(*p_9_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_bresp.bind(*p_9_s_axi_bresp);
        p_9_s_axi_bresp->set_sv_netview_offsetfromdp(4007216);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_araddr.bind(*p_9_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_9_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arvalid.bind(*p_9_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arready.bind(*p_9_s_axi_arready);
        p_9_s_axi_arready->set_sv_netview_offsetfromdp(4007384);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_rdata.bind(*p_9_s_axi_rdata);
        p_9_s_axi_rdata->set_sv_netview_offsetfromdp(4007440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_rresp.bind(*p_9_s_axi_rresp);
        p_9_s_axi_rresp->set_sv_netview_offsetfromdp(4007496);
        xsim_sc_channel<0, bool > *p_9_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rvalid.bind(*p_9_s_axi_rvalid);
        p_9_s_axi_rvalid->set_sv_netview_offsetfromdp(4007552);
        xsim_sc_channel<0, bool > *p_9_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rready.bind(*p_9_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axihub_awaddr.bind(*p_9_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_9_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axihub_awvalid.bind(*p_9_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axihub_awready.bind(*p_9_s_axihub_awready);
        p_9_s_axihub_awready->set_sv_netview_offsetfromdp(4007776);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axihub_wdata.bind(*p_9_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_axihub_wstrb.bind(*p_9_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axihub_wvalid.bind(*p_9_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axihub_wready.bind(*p_9_s_axihub_wready);
        p_9_s_axihub_wready->set_sv_netview_offsetfromdp(4008000);
        xsim_sc_channel<0, bool > *p_9_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axihub_bvalid.bind(*p_9_s_axihub_bvalid);
        p_9_s_axihub_bvalid->set_sv_netview_offsetfromdp(4008056);
        xsim_sc_channel<0, bool > *p_9_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axihub_bready.bind(*p_9_s_axihub_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axihub_bresp.bind(*p_9_s_axihub_bresp);
        p_9_s_axihub_bresp->set_sv_netview_offsetfromdp(4008168);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axihub_araddr.bind(*p_9_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_9_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axihub_arvalid.bind(*p_9_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axihub_arready.bind(*p_9_s_axihub_arready);
        p_9_s_axihub_arready->set_sv_netview_offsetfromdp(4008336);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axihub_rdata.bind(*p_9_s_axihub_rdata);
        p_9_s_axihub_rdata->set_sv_netview_offsetfromdp(4008392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axihub_rresp.bind(*p_9_s_axihub_rresp);
        p_9_s_axihub_rresp->set_sv_netview_offsetfromdp(4008448);
        xsim_sc_channel<0, bool > *p_9_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axihub_rvalid.bind(*p_9_s_axihub_rvalid);
        p_9_s_axihub_rvalid->set_sv_netview_offsetfromdp(4008504);
        xsim_sc_channel<0, bool > *p_9_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axihub_rready.bind(*p_9_s_axihub_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_aximm_awaddr.bind(*p_9_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_9_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_awvalid.bind(*p_9_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_awready.bind(*p_9_s_aximm_awready);
        p_9_s_aximm_awready->set_sv_netview_offsetfromdp(4008728);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_aximm_awlen.bind(*p_9_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_aximm_awsize.bind(*p_9_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_aximm_awburst.bind(*p_9_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_aximm_awid.bind(*p_9_s_aximm_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->s_aximm_wdata.bind(*p_9_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_aximm_wstrb.bind(*p_9_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_wvalid.bind(*p_9_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_wready.bind(*p_9_s_aximm_wready);
        p_9_s_aximm_wready->set_sv_netview_offsetfromdp(4009176);
        xsim_sc_channel<0, bool > *p_9_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_bvalid.bind(*p_9_s_aximm_bvalid);
        p_9_s_aximm_bvalid->set_sv_netview_offsetfromdp(4009232);
        xsim_sc_channel<0, bool > *p_9_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_bready.bind(*p_9_s_aximm_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_9_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_wlast.bind(*p_9_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_9_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_rlast.bind(*p_9_s_aximm_rlast);
        p_9_s_aximm_rlast->set_sv_netview_offsetfromdp(4009400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_aximm_bresp.bind(*p_9_s_aximm_bresp);
        p_9_s_aximm_bresp->set_sv_netview_offsetfromdp(4009456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_aximm_bid.bind(*p_9_s_aximm_bid);
        p_9_s_aximm_bid->set_sv_netview_offsetfromdp(4009512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_aximm_araddr.bind(*p_9_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_9_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_arvalid.bind(*p_9_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_arready.bind(*p_9_s_aximm_arready);
        p_9_s_aximm_arready->set_sv_netview_offsetfromdp(4009680);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_aximm_arlen.bind(*p_9_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_aximm_arsize.bind(*p_9_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_aximm_arburst.bind(*p_9_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_aximm_arid.bind(*p_9_s_aximm_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->s_aximm_rdata.bind(*p_9_s_aximm_rdata);
        p_9_s_aximm_rdata->set_sv_netview_offsetfromdp(4009960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_aximm_rid.bind(*p_9_s_aximm_rid);
        p_9_s_aximm_rid->set_sv_netview_offsetfromdp(4010016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_aximm_rresp.bind(*p_9_s_aximm_rresp);
        p_9_s_aximm_rresp->set_sv_netview_offsetfromdp(4010072);
        xsim_sc_channel<0, bool > *p_9_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_rvalid.bind(*p_9_s_aximm_rvalid);
        p_9_s_aximm_rvalid->set_sv_netview_offsetfromdp(4010128);
        xsim_sc_channel<0, bool > *p_9_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_rready.bind(*p_9_s_aximm_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_rready);
        sc_inst_10 = new pfm_dynamic_dpa_mon0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon0");
        sc_inst_10->xsim_set_dbg_index(759);
        xsim_sc_channel<0, bool > *p_10_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_clk.bind(*p_10_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_clk);
        xsim_sc_channel<0, bool > *p_10_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_resetn.bind(*p_10_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_resetn);
        xsim_sc_channel<0, bool > *p_10_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_10->trace_clk.bind(*p_10_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_trace_clk);
        xsim_sc_channel<0, bool > *p_10_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_10->trace_rst.bind(*p_10_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_10_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_awaddr.bind(*p_10_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_10_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awvalid.bind(*p_10_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awready.bind(*p_10_s_axi_awready);
        p_10_s_axi_awready->set_sv_netview_offsetfromdp(4010624);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_wdata.bind(*p_10_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_axi_wstrb.bind(*p_10_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wvalid.bind(*p_10_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wready.bind(*p_10_s_axi_wready);
        p_10_s_axi_wready->set_sv_netview_offsetfromdp(4010848);
        xsim_sc_channel<0, bool > *p_10_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bvalid.bind(*p_10_s_axi_bvalid);
        p_10_s_axi_bvalid->set_sv_netview_offsetfromdp(4010904);
        xsim_sc_channel<0, bool > *p_10_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bready.bind(*p_10_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_bresp.bind(*p_10_s_axi_bresp);
        p_10_s_axi_bresp->set_sv_netview_offsetfromdp(4011016);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_araddr.bind(*p_10_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_10_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arvalid.bind(*p_10_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arready.bind(*p_10_s_axi_arready);
        p_10_s_axi_arready->set_sv_netview_offsetfromdp(4011184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_rdata.bind(*p_10_s_axi_rdata);
        p_10_s_axi_rdata->set_sv_netview_offsetfromdp(4011240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_rresp.bind(*p_10_s_axi_rresp);
        p_10_s_axi_rresp->set_sv_netview_offsetfromdp(4011296);
        xsim_sc_channel<0, bool > *p_10_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rvalid.bind(*p_10_s_axi_rvalid);
        p_10_s_axi_rvalid->set_sv_netview_offsetfromdp(4011352);
        xsim_sc_channel<0, bool > *p_10_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rready.bind(*p_10_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_rready);
        xsim_sc_channel<0, bool > *p_10_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_AWVALID.bind(*p_10_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_10_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_AWREADY.bind(*p_10_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->mon_AWADDR.bind(*p_10_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->mon_AWID.bind(*p_10_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->mon_AWLEN.bind(*p_10_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->mon_AWSIZE.bind(*p_10_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->mon_AWBURST.bind(*p_10_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_10_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_WVALID.bind(*p_10_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_WVALID);
        xsim_sc_channel<0, bool > *p_10_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_WREADY.bind(*p_10_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->mon_WDATA.bind(*p_10_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->mon_WSTRB.bind(*p_10_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_10_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_WLAST.bind(*p_10_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_WLAST);
        xsim_sc_channel<0, bool > *p_10_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_ARVALID.bind(*p_10_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_10_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_ARREADY.bind(*p_10_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->mon_ARADDR.bind(*p_10_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->mon_ARID.bind(*p_10_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->mon_ARLEN.bind(*p_10_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->mon_ARSIZE.bind(*p_10_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->mon_ARBURST.bind(*p_10_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_10_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_RVALID.bind(*p_10_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_RVALID);
        xsim_sc_channel<0, bool > *p_10_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_RREADY.bind(*p_10_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->mon_RDATA.bind(*p_10_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_RDATA);
        xsim_sc_channel<0, bool > *p_10_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_RLAST.bind(*p_10_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->mon_RID.bind(*p_10_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->mon_RRESP.bind(*p_10_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_RRESP);
        xsim_sc_channel<0, bool > *p_10_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_BVALID.bind(*p_10_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_BVALID);
        xsim_sc_channel<0, bool > *p_10_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_BREADY.bind(*p_10_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->mon_BRESP.bind(*p_10_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->mon_BID.bind(*p_10_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_BID);
        xsim_sc_channel<0, bool > *p_10_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axis_rd_tready.bind(*p_10_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->m_axis_rd_tdata.bind(*p_10_m_axis_rd_tdata);
        p_10_m_axis_rd_tdata->set_sv_netview_offsetfromdp(4013144);
        xsim_sc_channel<0, bool > *p_10_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axis_rd_tlast.bind(*p_10_m_axis_rd_tlast);
        p_10_m_axis_rd_tlast->set_sv_netview_offsetfromdp(4013200);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axis_rd_tid.bind(*p_10_m_axis_rd_tid);
        p_10_m_axis_rd_tid->set_sv_netview_offsetfromdp(4013256);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axis_rd_tdest.bind(*p_10_m_axis_rd_tdest);
        p_10_m_axis_rd_tdest->set_sv_netview_offsetfromdp(4013312);
        xsim_sc_channel<0, bool > *p_10_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axis_wr_tready.bind(*p_10_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->m_axis_wr_tdata.bind(*p_10_m_axis_wr_tdata);
        p_10_m_axis_wr_tdata->set_sv_netview_offsetfromdp(4013424);
        xsim_sc_channel<0, bool > *p_10_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axis_wr_tlast.bind(*p_10_m_axis_wr_tlast);
        p_10_m_axis_wr_tlast->set_sv_netview_offsetfromdp(4013480);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axis_wr_tid.bind(*p_10_m_axis_wr_tid);
        p_10_m_axis_wr_tid->set_sv_netview_offsetfromdp(4013536);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axis_wr_tdest.bind(*p_10_m_axis_wr_tdest);
        p_10_m_axis_wr_tdest->set_sv_netview_offsetfromdp(4013592);
        xsim_sc_channel<0, bool > *p_10_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axis_wr_tvalid.bind(*p_10_m_axis_wr_tvalid);
        p_10_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(4013648);
        xsim_sc_channel<0, bool > *p_10_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axis_rd_tvalid.bind(*p_10_m_axis_rd_tvalid);
        p_10_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(4013704);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_awaddr_mon.bind(*p_10_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_awprot_mon.bind(*p_10_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_10_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awvalid_mon.bind(*p_10_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_10_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awready_mon.bind(*p_10_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_wdata_mon.bind(*p_10_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_axi_wstrb_mon.bind(*p_10_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_10_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wvalid_mon.bind(*p_10_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_10_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wready_mon.bind(*p_10_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_bresp_mon.bind(*p_10_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_10_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bvalid_mon.bind(*p_10_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_10_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bready_mon.bind(*p_10_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_araddr_mon.bind(*p_10_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_arprot_mon.bind(*p_10_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_10_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arvalid_mon.bind(*p_10_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_10_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arready_mon.bind(*p_10_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_rdata_mon.bind(*p_10_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_rresp_mon.bind(*p_10_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_10_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rvalid_mon.bind(*p_10_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_10_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rready_mon.bind(*p_10_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_rready_mon);
        sc_inst_11 = new pfm_dynamic_irq_const_tieoff_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.irq_const_tieoff");
        sc_inst_11->xsim_set_dbg_index(58);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_dout = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->dout.bind(*p_11_dout);
        p_11_dout->set_sv_netview_offsetfromdp(4189104);
        sc_inst_12 = new bd_d216_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.bd_d216_sci_inst");
        sc_inst_12->xsim_set_dbg_index(1417);
        sc_inst_13 = new bd_d216_interconnect_M00_AXI_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_m00_axi_mem00");
        sc_inst_13->xsim_set_dbg_index(2445);
        xsim_sc_channel<0, bool > *p_13_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->aclk.bind(*p_13_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_aclk);
        xsim_sc_channel<0, bool > *p_13_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_13->aclk1.bind(*p_13_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_13_aclk1);
        xsim_sc_channel<0, bool > *p_13_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->aresetn.bind(*p_13_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_aresetn);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_13_S00_AXI_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_13->S00_AXI_awaddr.bind(*p_13_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->S00_AXI_awlen.bind(*p_13_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->S00_AXI_awsize.bind(*p_13_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->S00_AXI_awburst.bind(*p_13_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->S00_AXI_awlock.bind(*p_13_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->S00_AXI_awcache.bind(*p_13_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->S00_AXI_awprot.bind(*p_13_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->S00_AXI_awqos.bind(*p_13_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_13_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->S00_AXI_awvalid.bind(*p_13_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_13_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->S00_AXI_awready.bind(*p_13_S00_AXI_awready);
        p_13_S00_AXI_awready->set_sv_netview_offsetfromdp(4682952);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->S00_AXI_wdata.bind(*p_13_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->S00_AXI_wstrb.bind(*p_13_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_13_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->S00_AXI_wlast.bind(*p_13_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_13_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->S00_AXI_wvalid.bind(*p_13_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_13_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->S00_AXI_wready.bind(*p_13_S00_AXI_wready);
        p_13_S00_AXI_wready->set_sv_netview_offsetfromdp(4683232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->S00_AXI_bresp.bind(*p_13_S00_AXI_bresp);
        p_13_S00_AXI_bresp->set_sv_netview_offsetfromdp(4683288);
        xsim_sc_channel<0, bool > *p_13_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->S00_AXI_bvalid.bind(*p_13_S00_AXI_bvalid);
        p_13_S00_AXI_bvalid->set_sv_netview_offsetfromdp(4683344);
        xsim_sc_channel<0, bool > *p_13_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->S00_AXI_bready.bind(*p_13_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_bready);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_13_S00_AXI_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_13->S00_AXI_araddr.bind(*p_13_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->S00_AXI_arlen.bind(*p_13_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->S00_AXI_arsize.bind(*p_13_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->S00_AXI_arburst.bind(*p_13_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->S00_AXI_arlock.bind(*p_13_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->S00_AXI_arcache.bind(*p_13_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->S00_AXI_arprot.bind(*p_13_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->S00_AXI_arqos.bind(*p_13_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_13_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->S00_AXI_arvalid.bind(*p_13_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_13_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->S00_AXI_arready.bind(*p_13_S00_AXI_arready);
        p_13_S00_AXI_arready->set_sv_netview_offsetfromdp(4683960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->S00_AXI_rdata.bind(*p_13_S00_AXI_rdata);
        p_13_S00_AXI_rdata->set_sv_netview_offsetfromdp(4684016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->S00_AXI_rresp.bind(*p_13_S00_AXI_rresp);
        p_13_S00_AXI_rresp->set_sv_netview_offsetfromdp(4684072);
        xsim_sc_channel<0, bool > *p_13_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->S00_AXI_rlast.bind(*p_13_S00_AXI_rlast);
        p_13_S00_AXI_rlast->set_sv_netview_offsetfromdp(4684128);
        xsim_sc_channel<0, bool > *p_13_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->S00_AXI_rvalid.bind(*p_13_S00_AXI_rvalid);
        p_13_S00_AXI_rvalid->set_sv_netview_offsetfromdp(4684184);
        xsim_sc_channel<0, bool > *p_13_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->S00_AXI_rready.bind(*p_13_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_S01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->S01_AXI_awid.bind(*p_13_S01_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_S01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->S01_AXI_awaddr.bind(*p_13_S01_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_S01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->S01_AXI_awlen.bind(*p_13_S01_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_S01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->S01_AXI_awsize.bind(*p_13_S01_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_S01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->S01_AXI_awburst.bind(*p_13_S01_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_S01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->S01_AXI_awlock.bind(*p_13_S01_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_S01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->S01_AXI_awcache.bind(*p_13_S01_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_S01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->S01_AXI_awprot.bind(*p_13_S01_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_S01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->S01_AXI_awqos.bind(*p_13_S01_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_awqos);
        xsim_sc_channel<0, bool > *p_13_S01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->S01_AXI_awvalid.bind(*p_13_S01_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_13_S01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->S01_AXI_awready.bind(*p_13_S01_AXI_awready);
        p_13_S01_AXI_awready->set_sv_netview_offsetfromdp(4684856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_S01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->S01_AXI_wdata.bind(*p_13_S01_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_S01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->S01_AXI_wstrb.bind(*p_13_S01_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_13_S01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->S01_AXI_wlast.bind(*p_13_S01_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_wlast);
        xsim_sc_channel<0, bool > *p_13_S01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->S01_AXI_wvalid.bind(*p_13_S01_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_13_S01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->S01_AXI_wready.bind(*p_13_S01_AXI_wready);
        p_13_S01_AXI_wready->set_sv_netview_offsetfromdp(4685136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_S01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->S01_AXI_bid.bind(*p_13_S01_AXI_bid);
        p_13_S01_AXI_bid->set_sv_netview_offsetfromdp(4685192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_S01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->S01_AXI_bresp.bind(*p_13_S01_AXI_bresp);
        p_13_S01_AXI_bresp->set_sv_netview_offsetfromdp(4685248);
        xsim_sc_channel<0, bool > *p_13_S01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->S01_AXI_bvalid.bind(*p_13_S01_AXI_bvalid);
        p_13_S01_AXI_bvalid->set_sv_netview_offsetfromdp(4685304);
        xsim_sc_channel<0, bool > *p_13_S01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->S01_AXI_bready.bind(*p_13_S01_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_bready);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_13_M00_AXI_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_13->M00_AXI_awaddr.bind(*p_13_M00_AXI_awaddr);
        p_13_M00_AXI_awaddr->set_sv_netview_offsetfromdp(4685416);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->M00_AXI_awlen.bind(*p_13_M00_AXI_awlen);
        p_13_M00_AXI_awlen->set_sv_netview_offsetfromdp(4685472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->M00_AXI_awsize.bind(*p_13_M00_AXI_awsize);
        p_13_M00_AXI_awsize->set_sv_netview_offsetfromdp(4685528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->M00_AXI_awburst.bind(*p_13_M00_AXI_awburst);
        p_13_M00_AXI_awburst->set_sv_netview_offsetfromdp(4685584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->M00_AXI_awlock.bind(*p_13_M00_AXI_awlock);
        p_13_M00_AXI_awlock->set_sv_netview_offsetfromdp(4685640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->M00_AXI_awcache.bind(*p_13_M00_AXI_awcache);
        p_13_M00_AXI_awcache->set_sv_netview_offsetfromdp(4685696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->M00_AXI_awprot.bind(*p_13_M00_AXI_awprot);
        p_13_M00_AXI_awprot->set_sv_netview_offsetfromdp(4685752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->M00_AXI_awqos.bind(*p_13_M00_AXI_awqos);
        p_13_M00_AXI_awqos->set_sv_netview_offsetfromdp(4685808);
        xsim_sc_channel<0, bool > *p_13_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->M00_AXI_awvalid.bind(*p_13_M00_AXI_awvalid);
        p_13_M00_AXI_awvalid->set_sv_netview_offsetfromdp(4685864);
        xsim_sc_channel<0, bool > *p_13_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->M00_AXI_awready.bind(*p_13_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_13_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_13->M00_AXI_wdata.bind(*p_13_M00_AXI_wdata);
        p_13_M00_AXI_wdata->set_sv_netview_offsetfromdp(4685976);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->M00_AXI_wstrb.bind(*p_13_M00_AXI_wstrb);
        p_13_M00_AXI_wstrb->set_sv_netview_offsetfromdp(4686032);
        xsim_sc_channel<0, bool > *p_13_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->M00_AXI_wlast.bind(*p_13_M00_AXI_wlast);
        p_13_M00_AXI_wlast->set_sv_netview_offsetfromdp(4686088);
        xsim_sc_channel<0, bool > *p_13_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->M00_AXI_wvalid.bind(*p_13_M00_AXI_wvalid);
        p_13_M00_AXI_wvalid->set_sv_netview_offsetfromdp(4686144);
        xsim_sc_channel<0, bool > *p_13_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->M00_AXI_wready.bind(*p_13_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->M00_AXI_bresp.bind(*p_13_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_13_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->M00_AXI_bvalid.bind(*p_13_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_13_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->M00_AXI_bready.bind(*p_13_M00_AXI_bready);
        p_13_M00_AXI_bready->set_sv_netview_offsetfromdp(4686368);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_13_M00_AXI_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_13->M00_AXI_araddr.bind(*p_13_M00_AXI_araddr);
        p_13_M00_AXI_araddr->set_sv_netview_offsetfromdp(4686424);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->M00_AXI_arlen.bind(*p_13_M00_AXI_arlen);
        p_13_M00_AXI_arlen->set_sv_netview_offsetfromdp(4686480);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->M00_AXI_arsize.bind(*p_13_M00_AXI_arsize);
        p_13_M00_AXI_arsize->set_sv_netview_offsetfromdp(4686536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->M00_AXI_arburst.bind(*p_13_M00_AXI_arburst);
        p_13_M00_AXI_arburst->set_sv_netview_offsetfromdp(4686592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->M00_AXI_arlock.bind(*p_13_M00_AXI_arlock);
        p_13_M00_AXI_arlock->set_sv_netview_offsetfromdp(4686648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->M00_AXI_arcache.bind(*p_13_M00_AXI_arcache);
        p_13_M00_AXI_arcache->set_sv_netview_offsetfromdp(4686704);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->M00_AXI_arprot.bind(*p_13_M00_AXI_arprot);
        p_13_M00_AXI_arprot->set_sv_netview_offsetfromdp(4686760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->M00_AXI_arqos.bind(*p_13_M00_AXI_arqos);
        p_13_M00_AXI_arqos->set_sv_netview_offsetfromdp(4686816);
        xsim_sc_channel<0, bool > *p_13_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->M00_AXI_arvalid.bind(*p_13_M00_AXI_arvalid);
        p_13_M00_AXI_arvalid->set_sv_netview_offsetfromdp(4686872);
        xsim_sc_channel<0, bool > *p_13_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->M00_AXI_arready.bind(*p_13_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_13_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_13->M00_AXI_rdata.bind(*p_13_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->M00_AXI_rresp.bind(*p_13_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_13_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->M00_AXI_rlast.bind(*p_13_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_13_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->M00_AXI_rvalid.bind(*p_13_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_13_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->M00_AXI_rready.bind(*p_13_M00_AXI_rready);
        p_13_M00_AXI_rready->set_sv_netview_offsetfromdp(4687208);
        sc_inst_14 = new bd_d216_rs_M00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.rs_m00_axi");
        sc_inst_14->xsim_set_dbg_index(2446);
        xsim_sc_channel<0, bool > *p_14_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->aclk.bind(*p_14_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_aclk);
        xsim_sc_channel<0, bool > *p_14_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->aresetn.bind(*p_14_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_aresetn);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_14_s_axi_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_14->s_axi_awaddr.bind(*p_14_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s_axi_awlen.bind(*p_14_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_awsize.bind(*p_14_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_awburst.bind(*p_14_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_awlock.bind(*p_14_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s_axi_awcache.bind(*p_14_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_awprot.bind(*p_14_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s_axi_awregion.bind(*p_14_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s_axi_awqos.bind(*p_14_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_14_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_awvalid.bind(*p_14_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_awready.bind(*p_14_s_axi_awready);
        p_14_s_axi_awready->set_sv_netview_offsetfromdp(4687984);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s_axi_wdata.bind(*p_14_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s_axi_wstrb.bind(*p_14_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_wlast.bind(*p_14_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_14_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_wvalid.bind(*p_14_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_wready.bind(*p_14_s_axi_wready);
        p_14_s_axi_wready->set_sv_netview_offsetfromdp(4688264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_bresp.bind(*p_14_s_axi_bresp);
        p_14_s_axi_bresp->set_sv_netview_offsetfromdp(4688320);
        xsim_sc_channel<0, bool > *p_14_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_bvalid.bind(*p_14_s_axi_bvalid);
        p_14_s_axi_bvalid->set_sv_netview_offsetfromdp(4688376);
        xsim_sc_channel<0, bool > *p_14_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_bready.bind(*p_14_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_bready);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_14_s_axi_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_14->s_axi_araddr.bind(*p_14_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s_axi_arlen.bind(*p_14_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_arsize.bind(*p_14_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_arburst.bind(*p_14_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_arlock.bind(*p_14_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s_axi_arcache.bind(*p_14_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_arprot.bind(*p_14_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s_axi_arregion.bind(*p_14_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s_axi_arqos.bind(*p_14_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_14_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_arvalid.bind(*p_14_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_arready.bind(*p_14_s_axi_arready);
        p_14_s_axi_arready->set_sv_netview_offsetfromdp(4689048);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s_axi_rdata.bind(*p_14_s_axi_rdata);
        p_14_s_axi_rdata->set_sv_netview_offsetfromdp(4689104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_rresp.bind(*p_14_s_axi_rresp);
        p_14_s_axi_rresp->set_sv_netview_offsetfromdp(4689160);
        xsim_sc_channel<0, bool > *p_14_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_rlast.bind(*p_14_s_axi_rlast);
        p_14_s_axi_rlast->set_sv_netview_offsetfromdp(4689216);
        xsim_sc_channel<0, bool > *p_14_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_rvalid.bind(*p_14_s_axi_rvalid);
        p_14_s_axi_rvalid->set_sv_netview_offsetfromdp(4689272);
        xsim_sc_channel<0, bool > *p_14_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_rready.bind(*p_14_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_rready);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_14_m_axi_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_14->m_axi_awaddr.bind(*p_14_m_axi_awaddr);
        p_14_m_axi_awaddr->set_sv_netview_offsetfromdp(4689384);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m_axi_awlen.bind(*p_14_m_axi_awlen);
        p_14_m_axi_awlen->set_sv_netview_offsetfromdp(4689440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m_axi_awsize.bind(*p_14_m_axi_awsize);
        p_14_m_axi_awsize->set_sv_netview_offsetfromdp(4689496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m_axi_awburst.bind(*p_14_m_axi_awburst);
        p_14_m_axi_awburst->set_sv_netview_offsetfromdp(4689552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m_axi_awlock.bind(*p_14_m_axi_awlock);
        p_14_m_axi_awlock->set_sv_netview_offsetfromdp(4689608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m_axi_awcache.bind(*p_14_m_axi_awcache);
        p_14_m_axi_awcache->set_sv_netview_offsetfromdp(4689664);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m_axi_awprot.bind(*p_14_m_axi_awprot);
        p_14_m_axi_awprot->set_sv_netview_offsetfromdp(4689720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m_axi_awregion.bind(*p_14_m_axi_awregion);
        p_14_m_axi_awregion->set_sv_netview_offsetfromdp(4689776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m_axi_awqos.bind(*p_14_m_axi_awqos);
        p_14_m_axi_awqos->set_sv_netview_offsetfromdp(4689832);
        xsim_sc_channel<0, bool > *p_14_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_awvalid.bind(*p_14_m_axi_awvalid);
        p_14_m_axi_awvalid->set_sv_netview_offsetfromdp(4689888);
        xsim_sc_channel<0, bool > *p_14_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_awready.bind(*p_14_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_m_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->m_axi_wdata.bind(*p_14_m_axi_wdata);
        p_14_m_axi_wdata->set_sv_netview_offsetfromdp(4690000);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m_axi_wstrb.bind(*p_14_m_axi_wstrb);
        p_14_m_axi_wstrb->set_sv_netview_offsetfromdp(4690056);
        xsim_sc_channel<0, bool > *p_14_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_wlast.bind(*p_14_m_axi_wlast);
        p_14_m_axi_wlast->set_sv_netview_offsetfromdp(4690112);
        xsim_sc_channel<0, bool > *p_14_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_wvalid.bind(*p_14_m_axi_wvalid);
        p_14_m_axi_wvalid->set_sv_netview_offsetfromdp(4690168);
        xsim_sc_channel<0, bool > *p_14_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_wready.bind(*p_14_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m_axi_bresp.bind(*p_14_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_14_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_bvalid.bind(*p_14_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_bready.bind(*p_14_m_axi_bready);
        p_14_m_axi_bready->set_sv_netview_offsetfromdp(4690392);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_14_m_axi_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_14->m_axi_araddr.bind(*p_14_m_axi_araddr);
        p_14_m_axi_araddr->set_sv_netview_offsetfromdp(4690448);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m_axi_arlen.bind(*p_14_m_axi_arlen);
        p_14_m_axi_arlen->set_sv_netview_offsetfromdp(4690504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m_axi_arsize.bind(*p_14_m_axi_arsize);
        p_14_m_axi_arsize->set_sv_netview_offsetfromdp(4690560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m_axi_arburst.bind(*p_14_m_axi_arburst);
        p_14_m_axi_arburst->set_sv_netview_offsetfromdp(4690616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m_axi_arlock.bind(*p_14_m_axi_arlock);
        p_14_m_axi_arlock->set_sv_netview_offsetfromdp(4690672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m_axi_arcache.bind(*p_14_m_axi_arcache);
        p_14_m_axi_arcache->set_sv_netview_offsetfromdp(4690728);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m_axi_arprot.bind(*p_14_m_axi_arprot);
        p_14_m_axi_arprot->set_sv_netview_offsetfromdp(4690784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m_axi_arregion.bind(*p_14_m_axi_arregion);
        p_14_m_axi_arregion->set_sv_netview_offsetfromdp(4690840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m_axi_arqos.bind(*p_14_m_axi_arqos);
        p_14_m_axi_arqos->set_sv_netview_offsetfromdp(4690896);
        xsim_sc_channel<0, bool > *p_14_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_arvalid.bind(*p_14_m_axi_arvalid);
        p_14_m_axi_arvalid->set_sv_netview_offsetfromdp(4690952);
        xsim_sc_channel<0, bool > *p_14_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_arready.bind(*p_14_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_m_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->m_axi_rdata.bind(*p_14_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m_axi_rresp.bind(*p_14_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_rlast.bind(*p_14_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_14_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_rvalid.bind(*p_14_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_rready.bind(*p_14_m_axi_rready);
        p_14_m_axi_rready->set_sv_netview_offsetfromdp(4691288);
        sc_inst_15 = new bd_d216_calib_const_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.calib_const");
        sc_inst_15->xsim_set_dbg_index(2538);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_dout = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->dout.bind(*p_15_dout);
        p_15_dout->set_sv_netview_offsetfromdp(4701648);
        sc_inst_16 = new pfm_dynamic_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.pfm_dynamic_sci_inst");
        sc_inst_16->xsim_set_dbg_index(65);
        sc_inst_17 = new pfm_dynamic_profile_vip_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.profile_vip_0");
        sc_inst_17->xsim_set_dbg_index(66);
        xsim_sc_channel<0, bool > *p_17_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->aclk.bind(*p_17_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_aclk);
        xsim_sc_channel<0, bool > *p_17_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->aresetn.bind(*p_17_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_awaddr.bind(*p_17_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_awlen.bind(*p_17_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_awburst.bind(*p_17_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s_axi_awlock.bind(*p_17_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_awcache.bind(*p_17_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_axi_awprot.bind(*p_17_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_awqos.bind(*p_17_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_17_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awvalid.bind(*p_17_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awready.bind(*p_17_s_axi_awready);
        p_17_s_axi_awready->set_sv_netview_offsetfromdp(4903136);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s_axi_wdata.bind(*p_17_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_wstrb.bind(*p_17_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_17_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wlast.bind(*p_17_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_17_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wvalid.bind(*p_17_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wready.bind(*p_17_s_axi_wready);
        p_17_s_axi_wready->set_sv_netview_offsetfromdp(4903416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_bresp.bind(*p_17_s_axi_bresp);
        p_17_s_axi_bresp->set_sv_netview_offsetfromdp(4903472);
        xsim_sc_channel<0, bool > *p_17_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bvalid.bind(*p_17_s_axi_bvalid);
        p_17_s_axi_bvalid->set_sv_netview_offsetfromdp(4903528);
        xsim_sc_channel<0, bool > *p_17_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bready.bind(*p_17_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_araddr.bind(*p_17_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_arlen.bind(*p_17_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_arburst.bind(*p_17_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s_axi_arlock.bind(*p_17_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_arcache.bind(*p_17_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_axi_arprot.bind(*p_17_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_arqos.bind(*p_17_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_17_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arvalid.bind(*p_17_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arready.bind(*p_17_s_axi_arready);
        p_17_s_axi_arready->set_sv_netview_offsetfromdp(4904088);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s_axi_rdata.bind(*p_17_s_axi_rdata);
        p_17_s_axi_rdata->set_sv_netview_offsetfromdp(4904144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_rresp.bind(*p_17_s_axi_rresp);
        p_17_s_axi_rresp->set_sv_netview_offsetfromdp(4904200);
        xsim_sc_channel<0, bool > *p_17_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rlast.bind(*p_17_s_axi_rlast);
        p_17_s_axi_rlast->set_sv_netview_offsetfromdp(4904256);
        xsim_sc_channel<0, bool > *p_17_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rvalid.bind(*p_17_s_axi_rvalid);
        p_17_s_axi_rvalid->set_sv_netview_offsetfromdp(4904312);
        xsim_sc_channel<0, bool > *p_17_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rready.bind(*p_17_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->m_axi_awaddr.bind(*p_17_m_axi_awaddr);
        p_17_m_axi_awaddr->set_sv_netview_offsetfromdp(4904424);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axi_awlen.bind(*p_17_m_axi_awlen);
        p_17_m_axi_awlen->set_sv_netview_offsetfromdp(4904480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_awburst.bind(*p_17_m_axi_awburst);
        p_17_m_axi_awburst->set_sv_netview_offsetfromdp(4904536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m_axi_awlock.bind(*p_17_m_axi_awlock);
        p_17_m_axi_awlock->set_sv_netview_offsetfromdp(4904592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_awcache.bind(*p_17_m_axi_awcache);
        p_17_m_axi_awcache->set_sv_netview_offsetfromdp(4904648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_awprot.bind(*p_17_m_axi_awprot);
        p_17_m_axi_awprot->set_sv_netview_offsetfromdp(4904704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_awqos.bind(*p_17_m_axi_awqos);
        p_17_m_axi_awqos->set_sv_netview_offsetfromdp(4904760);
        xsim_sc_channel<0, bool > *p_17_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_awvalid.bind(*p_17_m_axi_awvalid);
        p_17_m_axi_awvalid->set_sv_netview_offsetfromdp(4904816);
        xsim_sc_channel<0, bool > *p_17_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_awready.bind(*p_17_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m_axi_wdata.bind(*p_17_m_axi_wdata);
        p_17_m_axi_wdata->set_sv_netview_offsetfromdp(4904928);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axi_wstrb.bind(*p_17_m_axi_wstrb);
        p_17_m_axi_wstrb->set_sv_netview_offsetfromdp(4904984);
        xsim_sc_channel<0, bool > *p_17_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_wlast.bind(*p_17_m_axi_wlast);
        p_17_m_axi_wlast->set_sv_netview_offsetfromdp(4905040);
        xsim_sc_channel<0, bool > *p_17_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_wvalid.bind(*p_17_m_axi_wvalid);
        p_17_m_axi_wvalid->set_sv_netview_offsetfromdp(4905096);
        xsim_sc_channel<0, bool > *p_17_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_wready.bind(*p_17_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_bresp.bind(*p_17_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_17_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_bvalid.bind(*p_17_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_17_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_bready.bind(*p_17_m_axi_bready);
        p_17_m_axi_bready->set_sv_netview_offsetfromdp(4905320);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->m_axi_araddr.bind(*p_17_m_axi_araddr);
        p_17_m_axi_araddr->set_sv_netview_offsetfromdp(4905376);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axi_arlen.bind(*p_17_m_axi_arlen);
        p_17_m_axi_arlen->set_sv_netview_offsetfromdp(4905432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_arburst.bind(*p_17_m_axi_arburst);
        p_17_m_axi_arburst->set_sv_netview_offsetfromdp(4905488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m_axi_arlock.bind(*p_17_m_axi_arlock);
        p_17_m_axi_arlock->set_sv_netview_offsetfromdp(4905544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_arcache.bind(*p_17_m_axi_arcache);
        p_17_m_axi_arcache->set_sv_netview_offsetfromdp(4905600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_arprot.bind(*p_17_m_axi_arprot);
        p_17_m_axi_arprot->set_sv_netview_offsetfromdp(4905656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_arqos.bind(*p_17_m_axi_arqos);
        p_17_m_axi_arqos->set_sv_netview_offsetfromdp(4905712);
        xsim_sc_channel<0, bool > *p_17_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_arvalid.bind(*p_17_m_axi_arvalid);
        p_17_m_axi_arvalid->set_sv_netview_offsetfromdp(4905768);
        xsim_sc_channel<0, bool > *p_17_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_arready.bind(*p_17_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m_axi_rdata.bind(*p_17_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_rresp.bind(*p_17_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_17_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_rlast.bind(*p_17_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_17_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_rvalid.bind(*p_17_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_17_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_rready.bind(*p_17_m_axi_rready);
        p_17_m_axi_rready->set_sv_netview_offsetfromdp(4906104);
        sc_inst_18 = new pfm_dynamic_m01_regslice_6(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m01_couplers.m01_regslice");
        sc_inst_18->xsim_set_dbg_index(2727);
        xsim_sc_channel<0, bool > *p_18_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_18->aclk.bind(*p_18_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_18_aclk);
        xsim_sc_channel<0, bool > *p_18_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_18->aresetn.bind(*p_18_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_18_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->s_axi_awaddr.bind(*p_18_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s_axi_awprot.bind(*p_18_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_18_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_awvalid.bind(*p_18_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_18_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_awready.bind(*p_18_s_axi_awready);
        p_18_s_axi_awready->set_sv_netview_offsetfromdp(5167960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_wdata.bind(*p_18_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s_axi_wstrb.bind(*p_18_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_18_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_wvalid.bind(*p_18_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_18_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_wready.bind(*p_18_s_axi_wready);
        p_18_s_axi_wready->set_sv_netview_offsetfromdp(5168184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_bresp.bind(*p_18_s_axi_bresp);
        p_18_s_axi_bresp->set_sv_netview_offsetfromdp(5168240);
        xsim_sc_channel<0, bool > *p_18_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_bvalid.bind(*p_18_s_axi_bvalid);
        p_18_s_axi_bvalid->set_sv_netview_offsetfromdp(5168296);
        xsim_sc_channel<0, bool > *p_18_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_bready.bind(*p_18_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->s_axi_araddr.bind(*p_18_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s_axi_arprot.bind(*p_18_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_18_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_arvalid.bind(*p_18_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_18_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_arready.bind(*p_18_s_axi_arready);
        p_18_s_axi_arready->set_sv_netview_offsetfromdp(5168576);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_rdata.bind(*p_18_s_axi_rdata);
        p_18_s_axi_rdata->set_sv_netview_offsetfromdp(5168632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_rresp.bind(*p_18_s_axi_rresp);
        p_18_s_axi_rresp->set_sv_netview_offsetfromdp(5168688);
        xsim_sc_channel<0, bool > *p_18_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_rvalid.bind(*p_18_s_axi_rvalid);
        p_18_s_axi_rvalid->set_sv_netview_offsetfromdp(5168744);
        xsim_sc_channel<0, bool > *p_18_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_rready.bind(*p_18_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axi_awaddr.bind(*p_18_m_axi_awaddr);
        p_18_m_axi_awaddr->set_sv_netview_offsetfromdp(5168856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_awprot.bind(*p_18_m_axi_awprot);
        p_18_m_axi_awprot->set_sv_netview_offsetfromdp(5168912);
        xsim_sc_channel<0, bool > *p_18_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_awvalid.bind(*p_18_m_axi_awvalid);
        p_18_m_axi_awvalid->set_sv_netview_offsetfromdp(5168968);
        xsim_sc_channel<0, bool > *p_18_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_awready.bind(*p_18_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->m_axi_wdata.bind(*p_18_m_axi_wdata);
        p_18_m_axi_wdata->set_sv_netview_offsetfromdp(5169080);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_wstrb.bind(*p_18_m_axi_wstrb);
        p_18_m_axi_wstrb->set_sv_netview_offsetfromdp(5169136);
        xsim_sc_channel<0, bool > *p_18_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_wvalid.bind(*p_18_m_axi_wvalid);
        p_18_m_axi_wvalid->set_sv_netview_offsetfromdp(5169192);
        xsim_sc_channel<0, bool > *p_18_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_wready.bind(*p_18_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_bresp.bind(*p_18_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_18_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_bvalid.bind(*p_18_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_18_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_bready.bind(*p_18_m_axi_bready);
        p_18_m_axi_bready->set_sv_netview_offsetfromdp(5169416);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axi_araddr.bind(*p_18_m_axi_araddr);
        p_18_m_axi_araddr->set_sv_netview_offsetfromdp(5169472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_arprot.bind(*p_18_m_axi_arprot);
        p_18_m_axi_arprot->set_sv_netview_offsetfromdp(5169528);
        xsim_sc_channel<0, bool > *p_18_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_arvalid.bind(*p_18_m_axi_arvalid);
        p_18_m_axi_arvalid->set_sv_netview_offsetfromdp(5169584);
        xsim_sc_channel<0, bool > *p_18_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_arready.bind(*p_18_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->m_axi_rdata.bind(*p_18_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_rresp.bind(*p_18_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_18_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_rvalid.bind(*p_18_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_18_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_rready.bind(*p_18_m_axi_rready);
        p_18_m_axi_rready->set_sv_netview_offsetfromdp(5169864);
        sc_inst_19 = new pfm_dynamic_xbar_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.xbar");
        sc_inst_19->xsim_set_dbg_index(1592);
        xsim_sc_channel<0, bool > *p_19_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_19->aclk.bind(*p_19_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_aclk);
        xsim_sc_channel<0, bool > *p_19_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_19->aresetn.bind(*p_19_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_19_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->s_axi_awaddr.bind(*p_19_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->s_axi_awprot.bind(*p_19_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->s_axi_awvalid.bind(*p_19_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->s_axi_awready.bind(*p_19_s_axi_awready);
        p_19_s_axi_awready->set_sv_netview_offsetfromdp(5180424);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_wdata.bind(*p_19_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_wstrb.bind(*p_19_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->s_axi_wvalid.bind(*p_19_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->s_axi_wready.bind(*p_19_s_axi_wready);
        p_19_s_axi_wready->set_sv_netview_offsetfromdp(5180648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_bresp.bind(*p_19_s_axi_bresp);
        p_19_s_axi_bresp->set_sv_netview_offsetfromdp(5180704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->s_axi_bvalid.bind(*p_19_s_axi_bvalid);
        p_19_s_axi_bvalid->set_sv_netview_offsetfromdp(5180760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->s_axi_bready.bind(*p_19_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->s_axi_araddr.bind(*p_19_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->s_axi_arprot.bind(*p_19_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->s_axi_arvalid.bind(*p_19_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->s_axi_arready.bind(*p_19_s_axi_arready);
        p_19_s_axi_arready->set_sv_netview_offsetfromdp(5181040);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_rdata.bind(*p_19_s_axi_rdata);
        p_19_s_axi_rdata->set_sv_netview_offsetfromdp(5181096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_rresp.bind(*p_19_s_axi_rresp);
        p_19_s_axi_rresp->set_sv_netview_offsetfromdp(5181152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->s_axi_rvalid.bind(*p_19_s_axi_rvalid);
        p_19_s_axi_rvalid->set_sv_netview_offsetfromdp(5181208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->s_axi_rready.bind(*p_19_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_19_m_axi_awaddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_19->m_axi_awaddr.bind(*p_19_m_axi_awaddr);
        p_19_m_axi_awaddr->set_sv_netview_offsetfromdp(5181320);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_19_m_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_19->m_axi_awprot.bind(*p_19_m_axi_awprot);
        p_19_m_axi_awprot->set_sv_netview_offsetfromdp(5181376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_awvalid.bind(*p_19_m_axi_awvalid);
        p_19_m_axi_awvalid->set_sv_netview_offsetfromdp(5181432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_awready.bind(*p_19_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_wdata.bind(*p_19_m_axi_wdata);
        p_19_m_axi_wdata->set_sv_netview_offsetfromdp(5181544);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axi_wstrb.bind(*p_19_m_axi_wstrb);
        p_19_m_axi_wstrb->set_sv_netview_offsetfromdp(5181600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_wvalid.bind(*p_19_m_axi_wvalid);
        p_19_m_axi_wvalid->set_sv_netview_offsetfromdp(5181656);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_wready.bind(*p_19_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_wready);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_bresp.bind(*p_19_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_bresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_bvalid.bind(*p_19_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_bvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_bready.bind(*p_19_m_axi_bready);
        p_19_m_axi_bready->set_sv_netview_offsetfromdp(5181880);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_19_m_axi_araddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_19->m_axi_araddr.bind(*p_19_m_axi_araddr);
        p_19_m_axi_araddr->set_sv_netview_offsetfromdp(5181936);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_19_m_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_19->m_axi_arprot.bind(*p_19_m_axi_arprot);
        p_19_m_axi_arprot->set_sv_netview_offsetfromdp(5181992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_arvalid.bind(*p_19_m_axi_arvalid);
        p_19_m_axi_arvalid->set_sv_netview_offsetfromdp(5182048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_arready.bind(*p_19_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_rdata.bind(*p_19_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_rdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_rresp.bind(*p_19_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_rresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_rvalid.bind(*p_19_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_rvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_rready.bind(*p_19_m_axi_rready);
        p_19_m_axi_rready->set_sv_netview_offsetfromdp(5182328);
        sc_inst_20 = new pfm_dynamic_auto_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr1.interconnect_axilite_user_1.m01_couplers.auto_cc");
        sc_inst_20->xsim_set_dbg_index(2924);
        xsim_sc_channel<0, bool > *p_20_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_aclk.bind(*p_20_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_20_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_aresetn.bind(*p_20_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->s_axi_awaddr.bind(*p_20_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_awprot.bind(*p_20_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_20_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_awvalid.bind(*p_20_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_awready.bind(*p_20_s_axi_awready);
        p_20_s_axi_awready->set_sv_netview_offsetfromdp(5675488);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_wdata.bind(*p_20_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_wstrb.bind(*p_20_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_20_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wvalid.bind(*p_20_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wready.bind(*p_20_s_axi_wready);
        p_20_s_axi_wready->set_sv_netview_offsetfromdp(5675712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_bresp.bind(*p_20_s_axi_bresp);
        p_20_s_axi_bresp->set_sv_netview_offsetfromdp(5675768);
        xsim_sc_channel<0, bool > *p_20_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_bvalid.bind(*p_20_s_axi_bvalid);
        p_20_s_axi_bvalid->set_sv_netview_offsetfromdp(5675824);
        xsim_sc_channel<0, bool > *p_20_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_bready.bind(*p_20_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->s_axi_araddr.bind(*p_20_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_arprot.bind(*p_20_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_20_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_arvalid.bind(*p_20_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_arready.bind(*p_20_s_axi_arready);
        p_20_s_axi_arready->set_sv_netview_offsetfromdp(5676104);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_rdata.bind(*p_20_s_axi_rdata);
        p_20_s_axi_rdata->set_sv_netview_offsetfromdp(5676160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_rresp.bind(*p_20_s_axi_rresp);
        p_20_s_axi_rresp->set_sv_netview_offsetfromdp(5676216);
        xsim_sc_channel<0, bool > *p_20_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rvalid.bind(*p_20_s_axi_rvalid);
        p_20_s_axi_rvalid->set_sv_netview_offsetfromdp(5676272);
        xsim_sc_channel<0, bool > *p_20_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rready.bind(*p_20_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_rready);
        xsim_sc_channel<0, bool > *p_20_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_aclk.bind(*p_20_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_20_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_aresetn.bind(*p_20_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->m_axi_awaddr.bind(*p_20_m_axi_awaddr);
        p_20_m_axi_awaddr->set_sv_netview_offsetfromdp(5676496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_awprot.bind(*p_20_m_axi_awprot);
        p_20_m_axi_awprot->set_sv_netview_offsetfromdp(5676552);
        xsim_sc_channel<0, bool > *p_20_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_awvalid.bind(*p_20_m_axi_awvalid);
        p_20_m_axi_awvalid->set_sv_netview_offsetfromdp(5676608);
        xsim_sc_channel<0, bool > *p_20_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_awready.bind(*p_20_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->m_axi_wdata.bind(*p_20_m_axi_wdata);
        p_20_m_axi_wdata->set_sv_netview_offsetfromdp(5676720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_wstrb.bind(*p_20_m_axi_wstrb);
        p_20_m_axi_wstrb->set_sv_netview_offsetfromdp(5676776);
        xsim_sc_channel<0, bool > *p_20_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_wvalid.bind(*p_20_m_axi_wvalid);
        p_20_m_axi_wvalid->set_sv_netview_offsetfromdp(5676832);
        xsim_sc_channel<0, bool > *p_20_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_wready.bind(*p_20_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_bresp.bind(*p_20_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_20_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_bvalid.bind(*p_20_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_20_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_bready.bind(*p_20_m_axi_bready);
        p_20_m_axi_bready->set_sv_netview_offsetfromdp(5677056);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->m_axi_araddr.bind(*p_20_m_axi_araddr);
        p_20_m_axi_araddr->set_sv_netview_offsetfromdp(5677112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_arprot.bind(*p_20_m_axi_arprot);
        p_20_m_axi_arprot->set_sv_netview_offsetfromdp(5677168);
        xsim_sc_channel<0, bool > *p_20_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_arvalid.bind(*p_20_m_axi_arvalid);
        p_20_m_axi_arvalid->set_sv_netview_offsetfromdp(5677224);
        xsim_sc_channel<0, bool > *p_20_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_arready.bind(*p_20_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->m_axi_rdata.bind(*p_20_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_rresp.bind(*p_20_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_20_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_rvalid.bind(*p_20_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_20_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_rready.bind(*p_20_m_axi_rready);
        p_20_m_axi_rready->set_sv_netview_offsetfromdp(5677504);
        sc_inst_21 = new pfm_dynamic_m01_regslice_7(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr1.interconnect_axilite_user_1.m01_couplers.m01_regslice");
        sc_inst_21->xsim_set_dbg_index(2925);
        xsim_sc_channel<0, bool > *p_21_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_21->aclk.bind(*p_21_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_21_aclk);
        xsim_sc_channel<0, bool > *p_21_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_21->aresetn.bind(*p_21_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_21_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->s_axi_awaddr.bind(*p_21_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->s_axi_awprot.bind(*p_21_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_21_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_awvalid.bind(*p_21_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_21_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_awready.bind(*p_21_s_axi_awready);
        p_21_s_axi_awready->set_sv_netview_offsetfromdp(5677888);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_wdata.bind(*p_21_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_axi_wstrb.bind(*p_21_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_21_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_wvalid.bind(*p_21_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_21_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_wready.bind(*p_21_s_axi_wready);
        p_21_s_axi_wready->set_sv_netview_offsetfromdp(5678112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_bresp.bind(*p_21_s_axi_bresp);
        p_21_s_axi_bresp->set_sv_netview_offsetfromdp(5678168);
        xsim_sc_channel<0, bool > *p_21_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_bvalid.bind(*p_21_s_axi_bvalid);
        p_21_s_axi_bvalid->set_sv_netview_offsetfromdp(5678224);
        xsim_sc_channel<0, bool > *p_21_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_bready.bind(*p_21_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->s_axi_araddr.bind(*p_21_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->s_axi_arprot.bind(*p_21_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_21_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_arvalid.bind(*p_21_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_21_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_arready.bind(*p_21_s_axi_arready);
        p_21_s_axi_arready->set_sv_netview_offsetfromdp(5678504);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_rdata.bind(*p_21_s_axi_rdata);
        p_21_s_axi_rdata->set_sv_netview_offsetfromdp(5678560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_rresp.bind(*p_21_s_axi_rresp);
        p_21_s_axi_rresp->set_sv_netview_offsetfromdp(5678616);
        xsim_sc_channel<0, bool > *p_21_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_rvalid.bind(*p_21_s_axi_rvalid);
        p_21_s_axi_rvalid->set_sv_netview_offsetfromdp(5678672);
        xsim_sc_channel<0, bool > *p_21_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_rready.bind(*p_21_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_rready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->m_axi_awaddr.bind(*p_21_m_axi_awaddr);
        p_21_m_axi_awaddr->set_sv_netview_offsetfromdp(5678784);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_awprot.bind(*p_21_m_axi_awprot);
        p_21_m_axi_awprot->set_sv_netview_offsetfromdp(5678840);
        xsim_sc_channel<0, bool > *p_21_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_awvalid.bind(*p_21_m_axi_awvalid);
        p_21_m_axi_awvalid->set_sv_netview_offsetfromdp(5678896);
        xsim_sc_channel<0, bool > *p_21_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_awready.bind(*p_21_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->m_axi_wdata.bind(*p_21_m_axi_wdata);
        p_21_m_axi_wdata->set_sv_netview_offsetfromdp(5679008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_wstrb.bind(*p_21_m_axi_wstrb);
        p_21_m_axi_wstrb->set_sv_netview_offsetfromdp(5679064);
        xsim_sc_channel<0, bool > *p_21_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_wvalid.bind(*p_21_m_axi_wvalid);
        p_21_m_axi_wvalid->set_sv_netview_offsetfromdp(5679120);
        xsim_sc_channel<0, bool > *p_21_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_wready.bind(*p_21_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_bresp.bind(*p_21_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_21_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_bvalid.bind(*p_21_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_21_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_bready.bind(*p_21_m_axi_bready);
        p_21_m_axi_bready->set_sv_netview_offsetfromdp(5679344);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->m_axi_araddr.bind(*p_21_m_axi_araddr);
        p_21_m_axi_araddr->set_sv_netview_offsetfromdp(5679400);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_arprot.bind(*p_21_m_axi_arprot);
        p_21_m_axi_arprot->set_sv_netview_offsetfromdp(5679456);
        xsim_sc_channel<0, bool > *p_21_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_arvalid.bind(*p_21_m_axi_arvalid);
        p_21_m_axi_arvalid->set_sv_netview_offsetfromdp(5679512);
        xsim_sc_channel<0, bool > *p_21_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_arready.bind(*p_21_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->m_axi_rdata.bind(*p_21_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_rresp.bind(*p_21_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_21_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_rvalid.bind(*p_21_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_21_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_rready.bind(*p_21_m_axi_rready);
        p_21_m_axi_rready->set_sv_netview_offsetfromdp(5679792);
        sc_inst_22 = new pfm_dynamic_xbar_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr1.interconnect_axilite_user_1.xbar");
        sc_inst_22->xsim_set_dbg_index(1654);
        xsim_sc_channel<0, bool > *p_22_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_22->aclk.bind(*p_22_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aclk);
        xsim_sc_channel<0, bool > *p_22_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_22->aresetn.bind(*p_22_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->s_axi_awaddr.bind(*p_22_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_awprot.bind(*p_22_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_awvalid.bind(*p_22_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_awready.bind(*p_22_s_axi_awready);
        p_22_s_axi_awready->set_sv_netview_offsetfromdp(5690352);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_wdata.bind(*p_22_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_wstrb.bind(*p_22_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_wvalid.bind(*p_22_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_wready.bind(*p_22_s_axi_wready);
        p_22_s_axi_wready->set_sv_netview_offsetfromdp(5690576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_bresp.bind(*p_22_s_axi_bresp);
        p_22_s_axi_bresp->set_sv_netview_offsetfromdp(5690632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_bvalid.bind(*p_22_s_axi_bvalid);
        p_22_s_axi_bvalid->set_sv_netview_offsetfromdp(5690688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_bready.bind(*p_22_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->s_axi_araddr.bind(*p_22_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_arprot.bind(*p_22_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_arvalid.bind(*p_22_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_arready.bind(*p_22_s_axi_arready);
        p_22_s_axi_arready->set_sv_netview_offsetfromdp(5690968);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_rdata.bind(*p_22_s_axi_rdata);
        p_22_s_axi_rdata->set_sv_netview_offsetfromdp(5691024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_rresp.bind(*p_22_s_axi_rresp);
        p_22_s_axi_rresp->set_sv_netview_offsetfromdp(5691080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_rvalid.bind(*p_22_s_axi_rvalid);
        p_22_s_axi_rvalid->set_sv_netview_offsetfromdp(5691136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_rready.bind(*p_22_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_rready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_22_m_axi_awaddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_22->m_axi_awaddr.bind(*p_22_m_axi_awaddr);
        p_22_m_axi_awaddr->set_sv_netview_offsetfromdp(5691248);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_22_m_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_22->m_axi_awprot.bind(*p_22_m_axi_awprot);
        p_22_m_axi_awprot->set_sv_netview_offsetfromdp(5691304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_awvalid.bind(*p_22_m_axi_awvalid);
        p_22_m_axi_awvalid->set_sv_netview_offsetfromdp(5691360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_awready.bind(*p_22_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_wdata.bind(*p_22_m_axi_wdata);
        p_22_m_axi_wdata->set_sv_netview_offsetfromdp(5691472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_axi_wstrb.bind(*p_22_m_axi_wstrb);
        p_22_m_axi_wstrb->set_sv_netview_offsetfromdp(5691528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_wvalid.bind(*p_22_m_axi_wvalid);
        p_22_m_axi_wvalid->set_sv_netview_offsetfromdp(5691584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_wready.bind(*p_22_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_wready);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_bresp.bind(*p_22_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_bresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_bvalid.bind(*p_22_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_bvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_bready.bind(*p_22_m_axi_bready);
        p_22_m_axi_bready->set_sv_netview_offsetfromdp(5691808);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_22_m_axi_araddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_22->m_axi_araddr.bind(*p_22_m_axi_araddr);
        p_22_m_axi_araddr->set_sv_netview_offsetfromdp(5691864);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_22_m_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_22->m_axi_arprot.bind(*p_22_m_axi_arprot);
        p_22_m_axi_arprot->set_sv_netview_offsetfromdp(5691920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_arvalid.bind(*p_22_m_axi_arvalid);
        p_22_m_axi_arvalid->set_sv_netview_offsetfromdp(5691976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_arready.bind(*p_22_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_rdata.bind(*p_22_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_rresp.bind(*p_22_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_rvalid.bind(*p_22_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_rready.bind(*p_22_m_axi_rready);
        p_22_m_axi_rready->set_sv_netview_offsetfromdp(5692256);
        sc_inst_23 = new pfm_dynamic_smartconn_data_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.smartconn_data_0");
        sc_inst_23->xsim_set_dbg_index(75);
        xsim_sc_channel<0, bool > *p_23_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->aclk.bind(*p_23_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aclk);
        xsim_sc_channel<0, bool > *p_23_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->aresetn.bind(*p_23_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S00_AXI_awid.bind(*p_23_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->S00_AXI_awaddr.bind(*p_23_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->S00_AXI_awlen.bind(*p_23_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_awsize.bind(*p_23_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_awburst.bind(*p_23_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S00_AXI_awlock.bind(*p_23_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_awcache.bind(*p_23_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_awprot.bind(*p_23_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_awqos.bind(*p_23_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_awvalid.bind(*p_23_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_awready.bind(*p_23_S00_AXI_awready);
        p_23_S00_AXI_awready->set_sv_netview_offsetfromdp(6948888);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->S00_AXI_wdata.bind(*p_23_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_wstrb.bind(*p_23_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_wlast.bind(*p_23_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_wvalid.bind(*p_23_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_wready.bind(*p_23_S00_AXI_wready);
        p_23_S00_AXI_wready->set_sv_netview_offsetfromdp(6949168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S00_AXI_bid.bind(*p_23_S00_AXI_bid);
        p_23_S00_AXI_bid->set_sv_netview_offsetfromdp(6949224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_bresp.bind(*p_23_S00_AXI_bresp);
        p_23_S00_AXI_bresp->set_sv_netview_offsetfromdp(6949280);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_bvalid.bind(*p_23_S00_AXI_bvalid);
        p_23_S00_AXI_bvalid->set_sv_netview_offsetfromdp(6949336);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_bready.bind(*p_23_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S00_AXI_arid.bind(*p_23_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->S00_AXI_araddr.bind(*p_23_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->S00_AXI_arlen.bind(*p_23_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_arsize.bind(*p_23_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_arburst.bind(*p_23_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S00_AXI_arlock.bind(*p_23_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_arcache.bind(*p_23_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_arprot.bind(*p_23_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_arqos.bind(*p_23_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_arvalid.bind(*p_23_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_arready.bind(*p_23_S00_AXI_arready);
        p_23_S00_AXI_arready->set_sv_netview_offsetfromdp(6950008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S00_AXI_rid.bind(*p_23_S00_AXI_rid);
        p_23_S00_AXI_rid->set_sv_netview_offsetfromdp(6950064);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->S00_AXI_rdata.bind(*p_23_S00_AXI_rdata);
        p_23_S00_AXI_rdata->set_sv_netview_offsetfromdp(6950120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_rresp.bind(*p_23_S00_AXI_rresp);
        p_23_S00_AXI_rresp->set_sv_netview_offsetfromdp(6950176);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_rlast.bind(*p_23_S00_AXI_rlast);
        p_23_S00_AXI_rlast->set_sv_netview_offsetfromdp(6950232);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_rvalid.bind(*p_23_S00_AXI_rvalid);
        p_23_S00_AXI_rvalid->set_sv_netview_offsetfromdp(6950288);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_rready.bind(*p_23_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S01_AXI_awid.bind(*p_23_S01_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_S01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->S01_AXI_awaddr.bind(*p_23_S01_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_S01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->S01_AXI_awlen.bind(*p_23_S01_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S01_AXI_awsize.bind(*p_23_S01_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S01_AXI_awburst.bind(*p_23_S01_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S01_AXI_awlock.bind(*p_23_S01_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S01_AXI_awcache.bind(*p_23_S01_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S01_AXI_awprot.bind(*p_23_S01_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S01_AXI_awqos.bind(*p_23_S01_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_awqos);
        xsim_sc_channel<0, bool > *p_23_S01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S01_AXI_awvalid.bind(*p_23_S01_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_23_S01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S01_AXI_awready.bind(*p_23_S01_AXI_awready);
        p_23_S01_AXI_awready->set_sv_netview_offsetfromdp(6950960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_S01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->S01_AXI_wdata.bind(*p_23_S01_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S01_AXI_wstrb.bind(*p_23_S01_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_23_S01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->S01_AXI_wlast.bind(*p_23_S01_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_wlast);
        xsim_sc_channel<0, bool > *p_23_S01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S01_AXI_wvalid.bind(*p_23_S01_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_23_S01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S01_AXI_wready.bind(*p_23_S01_AXI_wready);
        p_23_S01_AXI_wready->set_sv_netview_offsetfromdp(6951240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S01_AXI_bid.bind(*p_23_S01_AXI_bid);
        p_23_S01_AXI_bid->set_sv_netview_offsetfromdp(6951296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S01_AXI_bresp.bind(*p_23_S01_AXI_bresp);
        p_23_S01_AXI_bresp->set_sv_netview_offsetfromdp(6951352);
        xsim_sc_channel<0, bool > *p_23_S01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S01_AXI_bvalid.bind(*p_23_S01_AXI_bvalid);
        p_23_S01_AXI_bvalid->set_sv_netview_offsetfromdp(6951408);
        xsim_sc_channel<0, bool > *p_23_S01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S01_AXI_bready.bind(*p_23_S01_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S01_AXI_arid.bind(*p_23_S01_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_S01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->S01_AXI_araddr.bind(*p_23_S01_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_S01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->S01_AXI_arlen.bind(*p_23_S01_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S01_AXI_arsize.bind(*p_23_S01_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S01_AXI_arburst.bind(*p_23_S01_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S01_AXI_arlock.bind(*p_23_S01_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S01_AXI_arcache.bind(*p_23_S01_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S01_AXI_arprot.bind(*p_23_S01_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S01_AXI_arqos.bind(*p_23_S01_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_arqos);
        xsim_sc_channel<0, bool > *p_23_S01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S01_AXI_arvalid.bind(*p_23_S01_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_23_S01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S01_AXI_arready.bind(*p_23_S01_AXI_arready);
        p_23_S01_AXI_arready->set_sv_netview_offsetfromdp(6952080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S01_AXI_rid.bind(*p_23_S01_AXI_rid);
        p_23_S01_AXI_rid->set_sv_netview_offsetfromdp(6952136);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_S01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->S01_AXI_rdata.bind(*p_23_S01_AXI_rdata);
        p_23_S01_AXI_rdata->set_sv_netview_offsetfromdp(6952192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S01_AXI_rresp.bind(*p_23_S01_AXI_rresp);
        p_23_S01_AXI_rresp->set_sv_netview_offsetfromdp(6952248);
        xsim_sc_channel<0, bool > *p_23_S01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->S01_AXI_rlast.bind(*p_23_S01_AXI_rlast);
        p_23_S01_AXI_rlast->set_sv_netview_offsetfromdp(6952304);
        xsim_sc_channel<0, bool > *p_23_S01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S01_AXI_rvalid.bind(*p_23_S01_AXI_rvalid);
        p_23_S01_AXI_rvalid->set_sv_netview_offsetfromdp(6952360);
        xsim_sc_channel<0, bool > *p_23_S01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S01_AXI_rready.bind(*p_23_S01_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S02_AXI_awid.bind(*p_23_S02_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_S02_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->S02_AXI_awaddr.bind(*p_23_S02_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_S02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->S02_AXI_awlen.bind(*p_23_S02_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S02_AXI_awsize.bind(*p_23_S02_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S02_AXI_awburst.bind(*p_23_S02_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S02_AXI_awlock.bind(*p_23_S02_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S02_AXI_awcache.bind(*p_23_S02_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S02_AXI_awprot.bind(*p_23_S02_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S02_AXI_awqos.bind(*p_23_S02_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_awqos);
        xsim_sc_channel<0, bool > *p_23_S02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S02_AXI_awvalid.bind(*p_23_S02_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_23_S02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S02_AXI_awready.bind(*p_23_S02_AXI_awready);
        p_23_S02_AXI_awready->set_sv_netview_offsetfromdp(6953032);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_S02_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->S02_AXI_wdata.bind(*p_23_S02_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S02_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S02_AXI_wstrb.bind(*p_23_S02_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_23_S02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->S02_AXI_wlast.bind(*p_23_S02_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_wlast);
        xsim_sc_channel<0, bool > *p_23_S02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S02_AXI_wvalid.bind(*p_23_S02_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_23_S02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S02_AXI_wready.bind(*p_23_S02_AXI_wready);
        p_23_S02_AXI_wready->set_sv_netview_offsetfromdp(6953312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S02_AXI_bid.bind(*p_23_S02_AXI_bid);
        p_23_S02_AXI_bid->set_sv_netview_offsetfromdp(6953368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S02_AXI_bresp.bind(*p_23_S02_AXI_bresp);
        p_23_S02_AXI_bresp->set_sv_netview_offsetfromdp(6953424);
        xsim_sc_channel<0, bool > *p_23_S02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S02_AXI_bvalid.bind(*p_23_S02_AXI_bvalid);
        p_23_S02_AXI_bvalid->set_sv_netview_offsetfromdp(6953480);
        xsim_sc_channel<0, bool > *p_23_S02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S02_AXI_bready.bind(*p_23_S02_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S02_AXI_arid.bind(*p_23_S02_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_S02_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->S02_AXI_araddr.bind(*p_23_S02_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_S02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->S02_AXI_arlen.bind(*p_23_S02_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S02_AXI_arsize.bind(*p_23_S02_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S02_AXI_arburst.bind(*p_23_S02_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S02_AXI_arlock.bind(*p_23_S02_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S02_AXI_arcache.bind(*p_23_S02_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S02_AXI_arprot.bind(*p_23_S02_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S02_AXI_arqos.bind(*p_23_S02_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_arqos);
        xsim_sc_channel<0, bool > *p_23_S02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S02_AXI_arvalid.bind(*p_23_S02_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_23_S02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S02_AXI_arready.bind(*p_23_S02_AXI_arready);
        p_23_S02_AXI_arready->set_sv_netview_offsetfromdp(6954152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S02_AXI_rid.bind(*p_23_S02_AXI_rid);
        p_23_S02_AXI_rid->set_sv_netview_offsetfromdp(6954208);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_S02_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->S02_AXI_rdata.bind(*p_23_S02_AXI_rdata);
        p_23_S02_AXI_rdata->set_sv_netview_offsetfromdp(6954264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S02_AXI_rresp.bind(*p_23_S02_AXI_rresp);
        p_23_S02_AXI_rresp->set_sv_netview_offsetfromdp(6954320);
        xsim_sc_channel<0, bool > *p_23_S02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->S02_AXI_rlast.bind(*p_23_S02_AXI_rlast);
        p_23_S02_AXI_rlast->set_sv_netview_offsetfromdp(6954376);
        xsim_sc_channel<0, bool > *p_23_S02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S02_AXI_rvalid.bind(*p_23_S02_AXI_rvalid);
        p_23_S02_AXI_rvalid->set_sv_netview_offsetfromdp(6954432);
        xsim_sc_channel<0, bool > *p_23_S02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S02_AXI_rready.bind(*p_23_S02_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S03_AXI_awid.bind(*p_23_S03_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_S03_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->S03_AXI_awaddr.bind(*p_23_S03_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_S03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->S03_AXI_awlen.bind(*p_23_S03_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S03_AXI_awsize.bind(*p_23_S03_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S03_AXI_awburst.bind(*p_23_S03_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S03_AXI_awlock.bind(*p_23_S03_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S03_AXI_awcache.bind(*p_23_S03_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S03_AXI_awprot.bind(*p_23_S03_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S03_AXI_awqos.bind(*p_23_S03_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_awqos);
        xsim_sc_channel<0, bool > *p_23_S03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S03_AXI_awvalid.bind(*p_23_S03_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_23_S03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S03_AXI_awready.bind(*p_23_S03_AXI_awready);
        p_23_S03_AXI_awready->set_sv_netview_offsetfromdp(6955104);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_S03_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->S03_AXI_wdata.bind(*p_23_S03_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S03_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S03_AXI_wstrb.bind(*p_23_S03_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_23_S03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->S03_AXI_wlast.bind(*p_23_S03_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_wlast);
        xsim_sc_channel<0, bool > *p_23_S03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S03_AXI_wvalid.bind(*p_23_S03_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_23_S03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S03_AXI_wready.bind(*p_23_S03_AXI_wready);
        p_23_S03_AXI_wready->set_sv_netview_offsetfromdp(6955384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S03_AXI_bid.bind(*p_23_S03_AXI_bid);
        p_23_S03_AXI_bid->set_sv_netview_offsetfromdp(6955440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S03_AXI_bresp.bind(*p_23_S03_AXI_bresp);
        p_23_S03_AXI_bresp->set_sv_netview_offsetfromdp(6955496);
        xsim_sc_channel<0, bool > *p_23_S03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S03_AXI_bvalid.bind(*p_23_S03_AXI_bvalid);
        p_23_S03_AXI_bvalid->set_sv_netview_offsetfromdp(6955552);
        xsim_sc_channel<0, bool > *p_23_S03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S03_AXI_bready.bind(*p_23_S03_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S03_AXI_arid.bind(*p_23_S03_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_S03_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->S03_AXI_araddr.bind(*p_23_S03_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_S03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->S03_AXI_arlen.bind(*p_23_S03_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S03_AXI_arsize.bind(*p_23_S03_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S03_AXI_arburst.bind(*p_23_S03_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S03_AXI_arlock.bind(*p_23_S03_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S03_AXI_arcache.bind(*p_23_S03_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S03_AXI_arprot.bind(*p_23_S03_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S03_AXI_arqos.bind(*p_23_S03_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_arqos);
        xsim_sc_channel<0, bool > *p_23_S03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S03_AXI_arvalid.bind(*p_23_S03_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_23_S03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S03_AXI_arready.bind(*p_23_S03_AXI_arready);
        p_23_S03_AXI_arready->set_sv_netview_offsetfromdp(6956224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S03_AXI_rid.bind(*p_23_S03_AXI_rid);
        p_23_S03_AXI_rid->set_sv_netview_offsetfromdp(6956280);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_S03_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->S03_AXI_rdata.bind(*p_23_S03_AXI_rdata);
        p_23_S03_AXI_rdata->set_sv_netview_offsetfromdp(6956336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S03_AXI_rresp.bind(*p_23_S03_AXI_rresp);
        p_23_S03_AXI_rresp->set_sv_netview_offsetfromdp(6956392);
        xsim_sc_channel<0, bool > *p_23_S03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->S03_AXI_rlast.bind(*p_23_S03_AXI_rlast);
        p_23_S03_AXI_rlast->set_sv_netview_offsetfromdp(6956448);
        xsim_sc_channel<0, bool > *p_23_S03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S03_AXI_rvalid.bind(*p_23_S03_AXI_rvalid);
        p_23_S03_AXI_rvalid->set_sv_netview_offsetfromdp(6956504);
        xsim_sc_channel<0, bool > *p_23_S03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S03_AXI_rready.bind(*p_23_S03_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_rready);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_23_M00_AXI_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_23->M00_AXI_awaddr.bind(*p_23_M00_AXI_awaddr);
        p_23_M00_AXI_awaddr->set_sv_netview_offsetfromdp(6956616);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->M00_AXI_awlen.bind(*p_23_M00_AXI_awlen);
        p_23_M00_AXI_awlen->set_sv_netview_offsetfromdp(6956672);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_awsize.bind(*p_23_M00_AXI_awsize);
        p_23_M00_AXI_awsize->set_sv_netview_offsetfromdp(6956728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_awburst.bind(*p_23_M00_AXI_awburst);
        p_23_M00_AXI_awburst->set_sv_netview_offsetfromdp(6956784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->M00_AXI_awlock.bind(*p_23_M00_AXI_awlock);
        p_23_M00_AXI_awlock->set_sv_netview_offsetfromdp(6956840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_awcache.bind(*p_23_M00_AXI_awcache);
        p_23_M00_AXI_awcache->set_sv_netview_offsetfromdp(6956896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_awprot.bind(*p_23_M00_AXI_awprot);
        p_23_M00_AXI_awprot->set_sv_netview_offsetfromdp(6956952);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_awqos.bind(*p_23_M00_AXI_awqos);
        p_23_M00_AXI_awqos->set_sv_netview_offsetfromdp(6957008);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_awvalid.bind(*p_23_M00_AXI_awvalid);
        p_23_M00_AXI_awvalid->set_sv_netview_offsetfromdp(6957064);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_awready.bind(*p_23_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->M00_AXI_wdata.bind(*p_23_M00_AXI_wdata);
        p_23_M00_AXI_wdata->set_sv_netview_offsetfromdp(6957176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_wstrb.bind(*p_23_M00_AXI_wstrb);
        p_23_M00_AXI_wstrb->set_sv_netview_offsetfromdp(6957232);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_wlast.bind(*p_23_M00_AXI_wlast);
        p_23_M00_AXI_wlast->set_sv_netview_offsetfromdp(6957288);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_wvalid.bind(*p_23_M00_AXI_wvalid);
        p_23_M00_AXI_wvalid->set_sv_netview_offsetfromdp(6957344);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_wready.bind(*p_23_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_bresp.bind(*p_23_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_bvalid.bind(*p_23_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_bready.bind(*p_23_M00_AXI_bready);
        p_23_M00_AXI_bready->set_sv_netview_offsetfromdp(6957568);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_23_M00_AXI_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_23->M00_AXI_araddr.bind(*p_23_M00_AXI_araddr);
        p_23_M00_AXI_araddr->set_sv_netview_offsetfromdp(6957624);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->M00_AXI_arlen.bind(*p_23_M00_AXI_arlen);
        p_23_M00_AXI_arlen->set_sv_netview_offsetfromdp(6957680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_arsize.bind(*p_23_M00_AXI_arsize);
        p_23_M00_AXI_arsize->set_sv_netview_offsetfromdp(6957736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_arburst.bind(*p_23_M00_AXI_arburst);
        p_23_M00_AXI_arburst->set_sv_netview_offsetfromdp(6957792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->M00_AXI_arlock.bind(*p_23_M00_AXI_arlock);
        p_23_M00_AXI_arlock->set_sv_netview_offsetfromdp(6957848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_arcache.bind(*p_23_M00_AXI_arcache);
        p_23_M00_AXI_arcache->set_sv_netview_offsetfromdp(6957904);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_arprot.bind(*p_23_M00_AXI_arprot);
        p_23_M00_AXI_arprot->set_sv_netview_offsetfromdp(6957960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_arqos.bind(*p_23_M00_AXI_arqos);
        p_23_M00_AXI_arqos->set_sv_netview_offsetfromdp(6958016);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_arvalid.bind(*p_23_M00_AXI_arvalid);
        p_23_M00_AXI_arvalid->set_sv_netview_offsetfromdp(6958072);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_arready.bind(*p_23_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->M00_AXI_rdata.bind(*p_23_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_rresp.bind(*p_23_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_rlast.bind(*p_23_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_rvalid.bind(*p_23_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_rready.bind(*p_23_M00_AXI_rready);
        p_23_M00_AXI_rready->set_sv_netview_offsetfromdp(6958408);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_23_M01_AXI_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_23->M01_AXI_awaddr.bind(*p_23_M01_AXI_awaddr);
        p_23_M01_AXI_awaddr->set_sv_netview_offsetfromdp(6958464);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->M01_AXI_awlen.bind(*p_23_M01_AXI_awlen);
        p_23_M01_AXI_awlen->set_sv_netview_offsetfromdp(6958520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M01_AXI_awsize.bind(*p_23_M01_AXI_awsize);
        p_23_M01_AXI_awsize->set_sv_netview_offsetfromdp(6958576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M01_AXI_awburst.bind(*p_23_M01_AXI_awburst);
        p_23_M01_AXI_awburst->set_sv_netview_offsetfromdp(6958632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->M01_AXI_awlock.bind(*p_23_M01_AXI_awlock);
        p_23_M01_AXI_awlock->set_sv_netview_offsetfromdp(6958688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M01_AXI_awcache.bind(*p_23_M01_AXI_awcache);
        p_23_M01_AXI_awcache->set_sv_netview_offsetfromdp(6958744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M01_AXI_awprot.bind(*p_23_M01_AXI_awprot);
        p_23_M01_AXI_awprot->set_sv_netview_offsetfromdp(6958800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M01_AXI_awqos.bind(*p_23_M01_AXI_awqos);
        p_23_M01_AXI_awqos->set_sv_netview_offsetfromdp(6958856);
        xsim_sc_channel<0, bool > *p_23_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M01_AXI_awvalid.bind(*p_23_M01_AXI_awvalid);
        p_23_M01_AXI_awvalid->set_sv_netview_offsetfromdp(6958912);
        xsim_sc_channel<0, bool > *p_23_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M01_AXI_awready.bind(*p_23_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M01_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_M01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->M01_AXI_wdata.bind(*p_23_M01_AXI_wdata);
        p_23_M01_AXI_wdata->set_sv_netview_offsetfromdp(6959024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M01_AXI_wstrb.bind(*p_23_M01_AXI_wstrb);
        p_23_M01_AXI_wstrb->set_sv_netview_offsetfromdp(6959080);
        xsim_sc_channel<0, bool > *p_23_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M01_AXI_wlast.bind(*p_23_M01_AXI_wlast);
        p_23_M01_AXI_wlast->set_sv_netview_offsetfromdp(6959136);
        xsim_sc_channel<0, bool > *p_23_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M01_AXI_wvalid.bind(*p_23_M01_AXI_wvalid);
        p_23_M01_AXI_wvalid->set_sv_netview_offsetfromdp(6959192);
        xsim_sc_channel<0, bool > *p_23_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M01_AXI_wready.bind(*p_23_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M01_AXI_bresp.bind(*p_23_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M01_AXI_bresp);
        xsim_sc_channel<0, bool > *p_23_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M01_AXI_bvalid.bind(*p_23_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_23_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M01_AXI_bready.bind(*p_23_M01_AXI_bready);
        p_23_M01_AXI_bready->set_sv_netview_offsetfromdp(6959416);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_23_M01_AXI_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_23->M01_AXI_araddr.bind(*p_23_M01_AXI_araddr);
        p_23_M01_AXI_araddr->set_sv_netview_offsetfromdp(6959472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->M01_AXI_arlen.bind(*p_23_M01_AXI_arlen);
        p_23_M01_AXI_arlen->set_sv_netview_offsetfromdp(6959528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M01_AXI_arsize.bind(*p_23_M01_AXI_arsize);
        p_23_M01_AXI_arsize->set_sv_netview_offsetfromdp(6959584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M01_AXI_arburst.bind(*p_23_M01_AXI_arburst);
        p_23_M01_AXI_arburst->set_sv_netview_offsetfromdp(6959640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->M01_AXI_arlock.bind(*p_23_M01_AXI_arlock);
        p_23_M01_AXI_arlock->set_sv_netview_offsetfromdp(6959696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M01_AXI_arcache.bind(*p_23_M01_AXI_arcache);
        p_23_M01_AXI_arcache->set_sv_netview_offsetfromdp(6959752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M01_AXI_arprot.bind(*p_23_M01_AXI_arprot);
        p_23_M01_AXI_arprot->set_sv_netview_offsetfromdp(6959808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M01_AXI_arqos.bind(*p_23_M01_AXI_arqos);
        p_23_M01_AXI_arqos->set_sv_netview_offsetfromdp(6959864);
        xsim_sc_channel<0, bool > *p_23_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M01_AXI_arvalid.bind(*p_23_M01_AXI_arvalid);
        p_23_M01_AXI_arvalid->set_sv_netview_offsetfromdp(6959920);
        xsim_sc_channel<0, bool > *p_23_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M01_AXI_arready.bind(*p_23_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M01_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_M01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->M01_AXI_rdata.bind(*p_23_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M01_AXI_rresp.bind(*p_23_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_23_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M01_AXI_rlast.bind(*p_23_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_23_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M01_AXI_rvalid.bind(*p_23_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_23_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M01_AXI_rready.bind(*p_23_M01_AXI_rready);
        p_23_M01_AXI_rready->set_sv_netview_offsetfromdp(6960256);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_23_M02_AXI_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_23->M02_AXI_awaddr.bind(*p_23_M02_AXI_awaddr);
        p_23_M02_AXI_awaddr->set_sv_netview_offsetfromdp(6960312);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->M02_AXI_awlen.bind(*p_23_M02_AXI_awlen);
        p_23_M02_AXI_awlen->set_sv_netview_offsetfromdp(6960368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M02_AXI_awsize.bind(*p_23_M02_AXI_awsize);
        p_23_M02_AXI_awsize->set_sv_netview_offsetfromdp(6960424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M02_AXI_awburst.bind(*p_23_M02_AXI_awburst);
        p_23_M02_AXI_awburst->set_sv_netview_offsetfromdp(6960480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->M02_AXI_awlock.bind(*p_23_M02_AXI_awlock);
        p_23_M02_AXI_awlock->set_sv_netview_offsetfromdp(6960536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M02_AXI_awcache.bind(*p_23_M02_AXI_awcache);
        p_23_M02_AXI_awcache->set_sv_netview_offsetfromdp(6960592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M02_AXI_awprot.bind(*p_23_M02_AXI_awprot);
        p_23_M02_AXI_awprot->set_sv_netview_offsetfromdp(6960648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M02_AXI_awqos.bind(*p_23_M02_AXI_awqos);
        p_23_M02_AXI_awqos->set_sv_netview_offsetfromdp(6960704);
        xsim_sc_channel<0, bool > *p_23_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M02_AXI_awvalid.bind(*p_23_M02_AXI_awvalid);
        p_23_M02_AXI_awvalid->set_sv_netview_offsetfromdp(6960760);
        xsim_sc_channel<0, bool > *p_23_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M02_AXI_awready.bind(*p_23_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M02_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_M02_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->M02_AXI_wdata.bind(*p_23_M02_AXI_wdata);
        p_23_M02_AXI_wdata->set_sv_netview_offsetfromdp(6960872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M02_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M02_AXI_wstrb.bind(*p_23_M02_AXI_wstrb);
        p_23_M02_AXI_wstrb->set_sv_netview_offsetfromdp(6960928);
        xsim_sc_channel<0, bool > *p_23_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M02_AXI_wlast.bind(*p_23_M02_AXI_wlast);
        p_23_M02_AXI_wlast->set_sv_netview_offsetfromdp(6960984);
        xsim_sc_channel<0, bool > *p_23_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M02_AXI_wvalid.bind(*p_23_M02_AXI_wvalid);
        p_23_M02_AXI_wvalid->set_sv_netview_offsetfromdp(6961040);
        xsim_sc_channel<0, bool > *p_23_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M02_AXI_wready.bind(*p_23_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M02_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M02_AXI_bresp.bind(*p_23_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M02_AXI_bresp);
        xsim_sc_channel<0, bool > *p_23_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M02_AXI_bvalid.bind(*p_23_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_23_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M02_AXI_bready.bind(*p_23_M02_AXI_bready);
        p_23_M02_AXI_bready->set_sv_netview_offsetfromdp(6961264);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_23_M02_AXI_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_23->M02_AXI_araddr.bind(*p_23_M02_AXI_araddr);
        p_23_M02_AXI_araddr->set_sv_netview_offsetfromdp(6961320);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->M02_AXI_arlen.bind(*p_23_M02_AXI_arlen);
        p_23_M02_AXI_arlen->set_sv_netview_offsetfromdp(6961376);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M02_AXI_arsize.bind(*p_23_M02_AXI_arsize);
        p_23_M02_AXI_arsize->set_sv_netview_offsetfromdp(6961432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M02_AXI_arburst.bind(*p_23_M02_AXI_arburst);
        p_23_M02_AXI_arburst->set_sv_netview_offsetfromdp(6961488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->M02_AXI_arlock.bind(*p_23_M02_AXI_arlock);
        p_23_M02_AXI_arlock->set_sv_netview_offsetfromdp(6961544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M02_AXI_arcache.bind(*p_23_M02_AXI_arcache);
        p_23_M02_AXI_arcache->set_sv_netview_offsetfromdp(6961600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M02_AXI_arprot.bind(*p_23_M02_AXI_arprot);
        p_23_M02_AXI_arprot->set_sv_netview_offsetfromdp(6961656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M02_AXI_arqos.bind(*p_23_M02_AXI_arqos);
        p_23_M02_AXI_arqos->set_sv_netview_offsetfromdp(6961712);
        xsim_sc_channel<0, bool > *p_23_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M02_AXI_arvalid.bind(*p_23_M02_AXI_arvalid);
        p_23_M02_AXI_arvalid->set_sv_netview_offsetfromdp(6961768);
        xsim_sc_channel<0, bool > *p_23_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M02_AXI_arready.bind(*p_23_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M02_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_M02_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->M02_AXI_rdata.bind(*p_23_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M02_AXI_rresp.bind(*p_23_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_23_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M02_AXI_rlast.bind(*p_23_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M02_AXI_rlast);
        xsim_sc_channel<0, bool > *p_23_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M02_AXI_rvalid.bind(*p_23_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_23_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M02_AXI_rready.bind(*p_23_M02_AXI_rready);
        p_23_M02_AXI_rready->set_sv_netview_offsetfromdp(6962104);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_23_M03_AXI_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_23->M03_AXI_awaddr.bind(*p_23_M03_AXI_awaddr);
        p_23_M03_AXI_awaddr->set_sv_netview_offsetfromdp(6962160);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->M03_AXI_awlen.bind(*p_23_M03_AXI_awlen);
        p_23_M03_AXI_awlen->set_sv_netview_offsetfromdp(6962216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M03_AXI_awsize.bind(*p_23_M03_AXI_awsize);
        p_23_M03_AXI_awsize->set_sv_netview_offsetfromdp(6962272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M03_AXI_awburst.bind(*p_23_M03_AXI_awburst);
        p_23_M03_AXI_awburst->set_sv_netview_offsetfromdp(6962328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_M03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->M03_AXI_awlock.bind(*p_23_M03_AXI_awlock);
        p_23_M03_AXI_awlock->set_sv_netview_offsetfromdp(6962384);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M03_AXI_awcache.bind(*p_23_M03_AXI_awcache);
        p_23_M03_AXI_awcache->set_sv_netview_offsetfromdp(6962440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M03_AXI_awprot.bind(*p_23_M03_AXI_awprot);
        p_23_M03_AXI_awprot->set_sv_netview_offsetfromdp(6962496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M03_AXI_awqos.bind(*p_23_M03_AXI_awqos);
        p_23_M03_AXI_awqos->set_sv_netview_offsetfromdp(6962552);
        xsim_sc_channel<0, bool > *p_23_M03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M03_AXI_awvalid.bind(*p_23_M03_AXI_awvalid);
        p_23_M03_AXI_awvalid->set_sv_netview_offsetfromdp(6962608);
        xsim_sc_channel<0, bool > *p_23_M03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M03_AXI_awready.bind(*p_23_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M03_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_M03_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->M03_AXI_wdata.bind(*p_23_M03_AXI_wdata);
        p_23_M03_AXI_wdata->set_sv_netview_offsetfromdp(6962720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M03_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M03_AXI_wstrb.bind(*p_23_M03_AXI_wstrb);
        p_23_M03_AXI_wstrb->set_sv_netview_offsetfromdp(6962776);
        xsim_sc_channel<0, bool > *p_23_M03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M03_AXI_wlast.bind(*p_23_M03_AXI_wlast);
        p_23_M03_AXI_wlast->set_sv_netview_offsetfromdp(6962832);
        xsim_sc_channel<0, bool > *p_23_M03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M03_AXI_wvalid.bind(*p_23_M03_AXI_wvalid);
        p_23_M03_AXI_wvalid->set_sv_netview_offsetfromdp(6962888);
        xsim_sc_channel<0, bool > *p_23_M03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M03_AXI_wready.bind(*p_23_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M03_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M03_AXI_bresp.bind(*p_23_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M03_AXI_bresp);
        xsim_sc_channel<0, bool > *p_23_M03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M03_AXI_bvalid.bind(*p_23_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M03_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_23_M03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M03_AXI_bready.bind(*p_23_M03_AXI_bready);
        p_23_M03_AXI_bready->set_sv_netview_offsetfromdp(6963112);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_23_M03_AXI_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_23->M03_AXI_araddr.bind(*p_23_M03_AXI_araddr);
        p_23_M03_AXI_araddr->set_sv_netview_offsetfromdp(6963168);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->M03_AXI_arlen.bind(*p_23_M03_AXI_arlen);
        p_23_M03_AXI_arlen->set_sv_netview_offsetfromdp(6963224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M03_AXI_arsize.bind(*p_23_M03_AXI_arsize);
        p_23_M03_AXI_arsize->set_sv_netview_offsetfromdp(6963280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M03_AXI_arburst.bind(*p_23_M03_AXI_arburst);
        p_23_M03_AXI_arburst->set_sv_netview_offsetfromdp(6963336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_M03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->M03_AXI_arlock.bind(*p_23_M03_AXI_arlock);
        p_23_M03_AXI_arlock->set_sv_netview_offsetfromdp(6963392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M03_AXI_arcache.bind(*p_23_M03_AXI_arcache);
        p_23_M03_AXI_arcache->set_sv_netview_offsetfromdp(6963448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M03_AXI_arprot.bind(*p_23_M03_AXI_arprot);
        p_23_M03_AXI_arprot->set_sv_netview_offsetfromdp(6963504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M03_AXI_arqos.bind(*p_23_M03_AXI_arqos);
        p_23_M03_AXI_arqos->set_sv_netview_offsetfromdp(6963560);
        xsim_sc_channel<0, bool > *p_23_M03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M03_AXI_arvalid.bind(*p_23_M03_AXI_arvalid);
        p_23_M03_AXI_arvalid->set_sv_netview_offsetfromdp(6963616);
        xsim_sc_channel<0, bool > *p_23_M03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M03_AXI_arready.bind(*p_23_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M03_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_M03_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->M03_AXI_rdata.bind(*p_23_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M03_AXI_rresp.bind(*p_23_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M03_AXI_rresp);
        xsim_sc_channel<0, bool > *p_23_M03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M03_AXI_rlast.bind(*p_23_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M03_AXI_rlast);
        xsim_sc_channel<0, bool > *p_23_M03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M03_AXI_rvalid.bind(*p_23_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M03_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_23_M03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M03_AXI_rready.bind(*p_23_M03_AXI_rready);
        p_23_M03_AXI_rready->set_sv_netview_offsetfromdp(6963952);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_M04_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->M04_AXI_awaddr.bind(*p_23_M04_AXI_awaddr);
        p_23_M04_AXI_awaddr->set_sv_netview_offsetfromdp(6964008);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_M04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->M04_AXI_awlen.bind(*p_23_M04_AXI_awlen);
        p_23_M04_AXI_awlen->set_sv_netview_offsetfromdp(6964064);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M04_AXI_awsize.bind(*p_23_M04_AXI_awsize);
        p_23_M04_AXI_awsize->set_sv_netview_offsetfromdp(6964120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M04_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M04_AXI_awburst.bind(*p_23_M04_AXI_awburst);
        p_23_M04_AXI_awburst->set_sv_netview_offsetfromdp(6964176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_M04_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->M04_AXI_awlock.bind(*p_23_M04_AXI_awlock);
        p_23_M04_AXI_awlock->set_sv_netview_offsetfromdp(6964232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M04_AXI_awcache.bind(*p_23_M04_AXI_awcache);
        p_23_M04_AXI_awcache->set_sv_netview_offsetfromdp(6964288);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M04_AXI_awprot.bind(*p_23_M04_AXI_awprot);
        p_23_M04_AXI_awprot->set_sv_netview_offsetfromdp(6964344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M04_AXI_awqos.bind(*p_23_M04_AXI_awqos);
        p_23_M04_AXI_awqos->set_sv_netview_offsetfromdp(6964400);
        xsim_sc_channel<0, bool > *p_23_M04_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M04_AXI_awvalid.bind(*p_23_M04_AXI_awvalid);
        p_23_M04_AXI_awvalid->set_sv_netview_offsetfromdp(6964456);
        xsim_sc_channel<0, bool > *p_23_M04_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M04_AXI_awready.bind(*p_23_M04_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M04_AXI_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_M04_AXI_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->M04_AXI_wdata.bind(*p_23_M04_AXI_wdata);
        p_23_M04_AXI_wdata->set_sv_netview_offsetfromdp(6964568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_M04_AXI_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->M04_AXI_wstrb.bind(*p_23_M04_AXI_wstrb);
        p_23_M04_AXI_wstrb->set_sv_netview_offsetfromdp(6964624);
        xsim_sc_channel<0, bool > *p_23_M04_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M04_AXI_wlast.bind(*p_23_M04_AXI_wlast);
        p_23_M04_AXI_wlast->set_sv_netview_offsetfromdp(6964680);
        xsim_sc_channel<0, bool > *p_23_M04_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M04_AXI_wvalid.bind(*p_23_M04_AXI_wvalid);
        p_23_M04_AXI_wvalid->set_sv_netview_offsetfromdp(6964736);
        xsim_sc_channel<0, bool > *p_23_M04_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M04_AXI_wready.bind(*p_23_M04_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M04_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M04_AXI_bresp.bind(*p_23_M04_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M04_AXI_bresp);
        xsim_sc_channel<0, bool > *p_23_M04_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M04_AXI_bvalid.bind(*p_23_M04_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M04_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_23_M04_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M04_AXI_bready.bind(*p_23_M04_AXI_bready);
        p_23_M04_AXI_bready->set_sv_netview_offsetfromdp(6964960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_M04_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->M04_AXI_araddr.bind(*p_23_M04_AXI_araddr);
        p_23_M04_AXI_araddr->set_sv_netview_offsetfromdp(6965016);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_M04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->M04_AXI_arlen.bind(*p_23_M04_AXI_arlen);
        p_23_M04_AXI_arlen->set_sv_netview_offsetfromdp(6965072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M04_AXI_arsize.bind(*p_23_M04_AXI_arsize);
        p_23_M04_AXI_arsize->set_sv_netview_offsetfromdp(6965128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M04_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M04_AXI_arburst.bind(*p_23_M04_AXI_arburst);
        p_23_M04_AXI_arburst->set_sv_netview_offsetfromdp(6965184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_M04_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->M04_AXI_arlock.bind(*p_23_M04_AXI_arlock);
        p_23_M04_AXI_arlock->set_sv_netview_offsetfromdp(6965240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M04_AXI_arcache.bind(*p_23_M04_AXI_arcache);
        p_23_M04_AXI_arcache->set_sv_netview_offsetfromdp(6965296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M04_AXI_arprot.bind(*p_23_M04_AXI_arprot);
        p_23_M04_AXI_arprot->set_sv_netview_offsetfromdp(6965352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M04_AXI_arqos.bind(*p_23_M04_AXI_arqos);
        p_23_M04_AXI_arqos->set_sv_netview_offsetfromdp(6965408);
        xsim_sc_channel<0, bool > *p_23_M04_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M04_AXI_arvalid.bind(*p_23_M04_AXI_arvalid);
        p_23_M04_AXI_arvalid->set_sv_netview_offsetfromdp(6965464);
        xsim_sc_channel<0, bool > *p_23_M04_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M04_AXI_arready.bind(*p_23_M04_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M04_AXI_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_M04_AXI_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->M04_AXI_rdata.bind(*p_23_M04_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M04_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M04_AXI_rresp.bind(*p_23_M04_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M04_AXI_rresp);
        xsim_sc_channel<0, bool > *p_23_M04_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M04_AXI_rlast.bind(*p_23_M04_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M04_AXI_rlast);
        xsim_sc_channel<0, bool > *p_23_M04_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M04_AXI_rvalid.bind(*p_23_M04_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M04_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_23_M04_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M04_AXI_rready.bind(*p_23_M04_AXI_rready);
        p_23_M04_AXI_rready->set_sv_netview_offsetfromdp(6965800);
        sc_inst_24 = new pfm_top_sci(".pfm_top_wrapper.pfm_top_i.pfm_top_sci_inst");
        sc_inst_24->xsim_set_dbg_index(24);
        sc_inst_25 = new pfm_top_axi_clock_converter_0_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_clock_converter_0");
        sc_inst_25->xsim_set_dbg_index(437);
        xsim_sc_channel<0, bool > *p_25_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_aclk.bind(*p_25_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_25_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_aresetn.bind(*p_25_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_aresetn);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_25_s_axi_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_25->s_axi_awaddr.bind(*p_25_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->s_axi_awlen.bind(*p_25_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_awsize.bind(*p_25_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_awburst.bind(*p_25_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->s_axi_awlock.bind(*p_25_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awcache.bind(*p_25_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_awprot.bind(*p_25_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awregion.bind(*p_25_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awqos.bind(*p_25_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_25_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_awvalid.bind(*p_25_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_awready.bind(*p_25_s_axi_awready);
        p_25_s_axi_awready->set_sv_netview_offsetfromdp(7360840);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_25_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_25->s_axi_wdata.bind(*p_25_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->s_axi_wstrb.bind(*p_25_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_25_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wlast.bind(*p_25_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_25_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wvalid.bind(*p_25_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wready.bind(*p_25_s_axi_wready);
        p_25_s_axi_wready->set_sv_netview_offsetfromdp(7361120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_bresp.bind(*p_25_s_axi_bresp);
        p_25_s_axi_bresp->set_sv_netview_offsetfromdp(7361176);
        xsim_sc_channel<0, bool > *p_25_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_bvalid.bind(*p_25_s_axi_bvalid);
        p_25_s_axi_bvalid->set_sv_netview_offsetfromdp(7361232);
        xsim_sc_channel<0, bool > *p_25_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_bready.bind(*p_25_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_bready);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_25_s_axi_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_25->s_axi_araddr.bind(*p_25_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->s_axi_arlen.bind(*p_25_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_arsize.bind(*p_25_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_arburst.bind(*p_25_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->s_axi_arlock.bind(*p_25_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arcache.bind(*p_25_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_arprot.bind(*p_25_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arregion.bind(*p_25_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arqos.bind(*p_25_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_25_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_arvalid.bind(*p_25_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_arready.bind(*p_25_s_axi_arready);
        p_25_s_axi_arready->set_sv_netview_offsetfromdp(7361904);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_25_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_25->s_axi_rdata.bind(*p_25_s_axi_rdata);
        p_25_s_axi_rdata->set_sv_netview_offsetfromdp(7361960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_rresp.bind(*p_25_s_axi_rresp);
        p_25_s_axi_rresp->set_sv_netview_offsetfromdp(7362016);
        xsim_sc_channel<0, bool > *p_25_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rlast.bind(*p_25_s_axi_rlast);
        p_25_s_axi_rlast->set_sv_netview_offsetfromdp(7362072);
        xsim_sc_channel<0, bool > *p_25_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rvalid.bind(*p_25_s_axi_rvalid);
        p_25_s_axi_rvalid->set_sv_netview_offsetfromdp(7362128);
        xsim_sc_channel<0, bool > *p_25_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rready.bind(*p_25_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_rready);
        xsim_sc_channel<0, bool > *p_25_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_aclk.bind(*p_25_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_25_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_aresetn.bind(*p_25_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_aresetn);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_25_m_axi_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_25->m_axi_awaddr.bind(*p_25_m_axi_awaddr);
        p_25_m_axi_awaddr->set_sv_netview_offsetfromdp(7362352);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->m_axi_awlen.bind(*p_25_m_axi_awlen);
        p_25_m_axi_awlen->set_sv_netview_offsetfromdp(7362408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_awsize.bind(*p_25_m_axi_awsize);
        p_25_m_axi_awsize->set_sv_netview_offsetfromdp(7362464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_awburst.bind(*p_25_m_axi_awburst);
        p_25_m_axi_awburst->set_sv_netview_offsetfromdp(7362520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->m_axi_awlock.bind(*p_25_m_axi_awlock);
        p_25_m_axi_awlock->set_sv_netview_offsetfromdp(7362576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awcache.bind(*p_25_m_axi_awcache);
        p_25_m_axi_awcache->set_sv_netview_offsetfromdp(7362632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_awprot.bind(*p_25_m_axi_awprot);
        p_25_m_axi_awprot->set_sv_netview_offsetfromdp(7362688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awregion.bind(*p_25_m_axi_awregion);
        p_25_m_axi_awregion->set_sv_netview_offsetfromdp(7362744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awqos.bind(*p_25_m_axi_awqos);
        p_25_m_axi_awqos->set_sv_netview_offsetfromdp(7362800);
        xsim_sc_channel<0, bool > *p_25_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_awvalid.bind(*p_25_m_axi_awvalid);
        p_25_m_axi_awvalid->set_sv_netview_offsetfromdp(7362856);
        xsim_sc_channel<0, bool > *p_25_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_awready.bind(*p_25_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_25_m_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_25->m_axi_wdata.bind(*p_25_m_axi_wdata);
        p_25_m_axi_wdata->set_sv_netview_offsetfromdp(7362968);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_m_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->m_axi_wstrb.bind(*p_25_m_axi_wstrb);
        p_25_m_axi_wstrb->set_sv_netview_offsetfromdp(7363024);
        xsim_sc_channel<0, bool > *p_25_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wlast.bind(*p_25_m_axi_wlast);
        p_25_m_axi_wlast->set_sv_netview_offsetfromdp(7363080);
        xsim_sc_channel<0, bool > *p_25_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wvalid.bind(*p_25_m_axi_wvalid);
        p_25_m_axi_wvalid->set_sv_netview_offsetfromdp(7363136);
        xsim_sc_channel<0, bool > *p_25_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wready.bind(*p_25_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_bresp.bind(*p_25_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_25_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_bvalid.bind(*p_25_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_25_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_bready.bind(*p_25_m_axi_bready);
        p_25_m_axi_bready->set_sv_netview_offsetfromdp(7363360);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_25_m_axi_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_25->m_axi_araddr.bind(*p_25_m_axi_araddr);
        p_25_m_axi_araddr->set_sv_netview_offsetfromdp(7363416);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->m_axi_arlen.bind(*p_25_m_axi_arlen);
        p_25_m_axi_arlen->set_sv_netview_offsetfromdp(7363472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_arsize.bind(*p_25_m_axi_arsize);
        p_25_m_axi_arsize->set_sv_netview_offsetfromdp(7363528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_arburst.bind(*p_25_m_axi_arburst);
        p_25_m_axi_arburst->set_sv_netview_offsetfromdp(7363584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->m_axi_arlock.bind(*p_25_m_axi_arlock);
        p_25_m_axi_arlock->set_sv_netview_offsetfromdp(7363640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arcache.bind(*p_25_m_axi_arcache);
        p_25_m_axi_arcache->set_sv_netview_offsetfromdp(7363696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_arprot.bind(*p_25_m_axi_arprot);
        p_25_m_axi_arprot->set_sv_netview_offsetfromdp(7363752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arregion.bind(*p_25_m_axi_arregion);
        p_25_m_axi_arregion->set_sv_netview_offsetfromdp(7363808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arqos.bind(*p_25_m_axi_arqos);
        p_25_m_axi_arqos->set_sv_netview_offsetfromdp(7363864);
        xsim_sc_channel<0, bool > *p_25_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_arvalid.bind(*p_25_m_axi_arvalid);
        p_25_m_axi_arvalid->set_sv_netview_offsetfromdp(7363920);
        xsim_sc_channel<0, bool > *p_25_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_arready.bind(*p_25_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_25_m_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_25->m_axi_rdata.bind(*p_25_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_rresp.bind(*p_25_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_25_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rlast.bind(*p_25_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_25_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rvalid.bind(*p_25_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_25_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rready.bind(*p_25_m_axi_rready);
        p_25_m_axi_rready->set_sv_netview_offsetfromdp(7364256);
        sc_inst_26 = new pfm_top_axi_vip_0_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_vip_0");
        sc_inst_26->xsim_set_dbg_index(438);
        xsim_sc_channel<0, bool > *p_26_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_26->aclk.bind(*p_26_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aclk);
        xsim_sc_channel<0, bool > *p_26_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_26->aresetn.bind(*p_26_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->s_axi_awaddr.bind(*p_26_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->s_axi_awlen.bind(*p_26_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_awburst.bind(*p_26_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->s_axi_awlock.bind(*p_26_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_awcache.bind(*p_26_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->s_axi_awprot.bind(*p_26_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_awqos.bind(*p_26_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->s_axi_awuser.bind(*p_26_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_26_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_awvalid.bind(*p_26_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_awready.bind(*p_26_s_axi_awready);
        p_26_s_axi_awready->set_sv_netview_offsetfromdp(7364976);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->s_axi_wdata.bind(*p_26_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_wstrb.bind(*p_26_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_26_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_wlast.bind(*p_26_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_26_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_wvalid.bind(*p_26_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_wready.bind(*p_26_s_axi_wready);
        p_26_s_axi_wready->set_sv_netview_offsetfromdp(7365256);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_bresp.bind(*p_26_s_axi_bresp);
        p_26_s_axi_bresp->set_sv_netview_offsetfromdp(7365312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_buser.bind(*p_26_s_axi_buser);
        p_26_s_axi_buser->set_sv_netview_offsetfromdp(7365368);
        xsim_sc_channel<0, bool > *p_26_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_bvalid.bind(*p_26_s_axi_bvalid);
        p_26_s_axi_bvalid->set_sv_netview_offsetfromdp(7365424);
        xsim_sc_channel<0, bool > *p_26_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_bready.bind(*p_26_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->s_axi_araddr.bind(*p_26_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->s_axi_arlen.bind(*p_26_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_arburst.bind(*p_26_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->s_axi_arlock.bind(*p_26_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_arcache.bind(*p_26_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->s_axi_arprot.bind(*p_26_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_arqos.bind(*p_26_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->s_axi_aruser.bind(*p_26_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_26_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_arvalid.bind(*p_26_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_arready.bind(*p_26_s_axi_arready);
        p_26_s_axi_arready->set_sv_netview_offsetfromdp(7366040);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->s_axi_rdata.bind(*p_26_s_axi_rdata);
        p_26_s_axi_rdata->set_sv_netview_offsetfromdp(7366096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_rresp.bind(*p_26_s_axi_rresp);
        p_26_s_axi_rresp->set_sv_netview_offsetfromdp(7366152);
        xsim_sc_channel<0, bool > *p_26_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_rlast.bind(*p_26_s_axi_rlast);
        p_26_s_axi_rlast->set_sv_netview_offsetfromdp(7366208);
        xsim_sc_channel<0, bool > *p_26_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_rvalid.bind(*p_26_s_axi_rvalid);
        p_26_s_axi_rvalid->set_sv_netview_offsetfromdp(7366264);
        xsim_sc_channel<0, bool > *p_26_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_rready.bind(*p_26_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->m_axi_awaddr.bind(*p_26_m_axi_awaddr);
        p_26_m_axi_awaddr->set_sv_netview_offsetfromdp(7366376);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->m_axi_awlen.bind(*p_26_m_axi_awlen);
        p_26_m_axi_awlen->set_sv_netview_offsetfromdp(7366432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_awburst.bind(*p_26_m_axi_awburst);
        p_26_m_axi_awburst->set_sv_netview_offsetfromdp(7366488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->m_axi_awlock.bind(*p_26_m_axi_awlock);
        p_26_m_axi_awlock->set_sv_netview_offsetfromdp(7366544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_awcache.bind(*p_26_m_axi_awcache);
        p_26_m_axi_awcache->set_sv_netview_offsetfromdp(7366600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->m_axi_awprot.bind(*p_26_m_axi_awprot);
        p_26_m_axi_awprot->set_sv_netview_offsetfromdp(7366656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_awqos.bind(*p_26_m_axi_awqos);
        p_26_m_axi_awqos->set_sv_netview_offsetfromdp(7366712);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_m_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->m_axi_awuser.bind(*p_26_m_axi_awuser);
        p_26_m_axi_awuser->set_sv_netview_offsetfromdp(7366768);
        xsim_sc_channel<0, bool > *p_26_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_awvalid.bind(*p_26_m_axi_awvalid);
        p_26_m_axi_awvalid->set_sv_netview_offsetfromdp(7366824);
        xsim_sc_channel<0, bool > *p_26_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_awready.bind(*p_26_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->m_axi_wdata.bind(*p_26_m_axi_wdata);
        p_26_m_axi_wdata->set_sv_netview_offsetfromdp(7366936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_wstrb.bind(*p_26_m_axi_wstrb);
        p_26_m_axi_wstrb->set_sv_netview_offsetfromdp(7366992);
        xsim_sc_channel<0, bool > *p_26_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_wlast.bind(*p_26_m_axi_wlast);
        p_26_m_axi_wlast->set_sv_netview_offsetfromdp(7367048);
        xsim_sc_channel<0, bool > *p_26_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_wvalid.bind(*p_26_m_axi_wvalid);
        p_26_m_axi_wvalid->set_sv_netview_offsetfromdp(7367104);
        xsim_sc_channel<0, bool > *p_26_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_wready.bind(*p_26_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_bresp.bind(*p_26_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_buser.bind(*p_26_m_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_buser);
        xsim_sc_channel<0, bool > *p_26_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_bvalid.bind(*p_26_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_26_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_bready.bind(*p_26_m_axi_bready);
        p_26_m_axi_bready->set_sv_netview_offsetfromdp(7367384);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->m_axi_araddr.bind(*p_26_m_axi_araddr);
        p_26_m_axi_araddr->set_sv_netview_offsetfromdp(7367440);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->m_axi_arlen.bind(*p_26_m_axi_arlen);
        p_26_m_axi_arlen->set_sv_netview_offsetfromdp(7367496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_arburst.bind(*p_26_m_axi_arburst);
        p_26_m_axi_arburst->set_sv_netview_offsetfromdp(7367552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->m_axi_arlock.bind(*p_26_m_axi_arlock);
        p_26_m_axi_arlock->set_sv_netview_offsetfromdp(7367608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_arcache.bind(*p_26_m_axi_arcache);
        p_26_m_axi_arcache->set_sv_netview_offsetfromdp(7367664);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->m_axi_arprot.bind(*p_26_m_axi_arprot);
        p_26_m_axi_arprot->set_sv_netview_offsetfromdp(7367720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_arqos.bind(*p_26_m_axi_arqos);
        p_26_m_axi_arqos->set_sv_netview_offsetfromdp(7367776);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_m_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->m_axi_aruser.bind(*p_26_m_axi_aruser);
        p_26_m_axi_aruser->set_sv_netview_offsetfromdp(7367832);
        xsim_sc_channel<0, bool > *p_26_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_arvalid.bind(*p_26_m_axi_arvalid);
        p_26_m_axi_arvalid->set_sv_netview_offsetfromdp(7367888);
        xsim_sc_channel<0, bool > *p_26_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_arready.bind(*p_26_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->m_axi_rdata.bind(*p_26_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_rresp.bind(*p_26_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_26_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_rlast.bind(*p_26_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_26_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_rvalid.bind(*p_26_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_26_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_rready.bind(*p_26_m_axi_rready);
        p_26_m_axi_rready->set_sv_netview_offsetfromdp(7368224);
        sc_inst_27 = new pfm_top_axi_vip_1_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_vip_1");
        sc_inst_27->xsim_set_dbg_index(439);
        xsim_sc_channel<0, bool > *p_27_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_27->aclk.bind(*p_27_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aclk);
        xsim_sc_channel<0, bool > *p_27_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_27->aresetn.bind(*p_27_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_27_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_27->s_axi_awaddr.bind(*p_27_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_27_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_27->s_axi_awlen.bind(*p_27_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_awburst.bind(*p_27_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_27_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_27->s_axi_awlock.bind(*p_27_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awcache.bind(*p_27_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_awprot.bind(*p_27_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awqos.bind(*p_27_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->s_axi_awuser.bind(*p_27_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_27_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_awvalid.bind(*p_27_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_awready.bind(*p_27_s_axi_awready);
        p_27_s_axi_awready->set_sv_netview_offsetfromdp(7368944);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->s_axi_wdata.bind(*p_27_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_wstrb.bind(*p_27_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_27_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wlast.bind(*p_27_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_27_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wvalid.bind(*p_27_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wready.bind(*p_27_s_axi_wready);
        p_27_s_axi_wready->set_sv_netview_offsetfromdp(7369224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_bresp.bind(*p_27_s_axi_bresp);
        p_27_s_axi_bresp->set_sv_netview_offsetfromdp(7369280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_buser.bind(*p_27_s_axi_buser);
        p_27_s_axi_buser->set_sv_netview_offsetfromdp(7369336);
        xsim_sc_channel<0, bool > *p_27_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_bvalid.bind(*p_27_s_axi_bvalid);
        p_27_s_axi_bvalid->set_sv_netview_offsetfromdp(7369392);
        xsim_sc_channel<0, bool > *p_27_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_bready.bind(*p_27_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_27_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_27->s_axi_araddr.bind(*p_27_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_27_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_27->s_axi_arlen.bind(*p_27_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_arburst.bind(*p_27_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_27_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_27->s_axi_arlock.bind(*p_27_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arcache.bind(*p_27_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_arprot.bind(*p_27_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arqos.bind(*p_27_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->s_axi_aruser.bind(*p_27_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_27_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_arvalid.bind(*p_27_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_arready.bind(*p_27_s_axi_arready);
        p_27_s_axi_arready->set_sv_netview_offsetfromdp(7370008);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->s_axi_rdata.bind(*p_27_s_axi_rdata);
        p_27_s_axi_rdata->set_sv_netview_offsetfromdp(7370064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_rresp.bind(*p_27_s_axi_rresp);
        p_27_s_axi_rresp->set_sv_netview_offsetfromdp(7370120);
        xsim_sc_channel<0, bool > *p_27_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rlast.bind(*p_27_s_axi_rlast);
        p_27_s_axi_rlast->set_sv_netview_offsetfromdp(7370176);
        xsim_sc_channel<0, bool > *p_27_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rvalid.bind(*p_27_s_axi_rvalid);
        p_27_s_axi_rvalid->set_sv_netview_offsetfromdp(7370232);
        xsim_sc_channel<0, bool > *p_27_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rready.bind(*p_27_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_27_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_27->m_axi_awaddr.bind(*p_27_m_axi_awaddr);
        p_27_m_axi_awaddr->set_sv_netview_offsetfromdp(7370344);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_27_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_27->m_axi_awlen.bind(*p_27_m_axi_awlen);
        p_27_m_axi_awlen->set_sv_netview_offsetfromdp(7370400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_awburst.bind(*p_27_m_axi_awburst);
        p_27_m_axi_awburst->set_sv_netview_offsetfromdp(7370456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_27_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_27->m_axi_awlock.bind(*p_27_m_axi_awlock);
        p_27_m_axi_awlock->set_sv_netview_offsetfromdp(7370512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awcache.bind(*p_27_m_axi_awcache);
        p_27_m_axi_awcache->set_sv_netview_offsetfromdp(7370568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_awprot.bind(*p_27_m_axi_awprot);
        p_27_m_axi_awprot->set_sv_netview_offsetfromdp(7370624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awqos.bind(*p_27_m_axi_awqos);
        p_27_m_axi_awqos->set_sv_netview_offsetfromdp(7370680);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_m_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->m_axi_awuser.bind(*p_27_m_axi_awuser);
        p_27_m_axi_awuser->set_sv_netview_offsetfromdp(7370736);
        xsim_sc_channel<0, bool > *p_27_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_awvalid.bind(*p_27_m_axi_awvalid);
        p_27_m_axi_awvalid->set_sv_netview_offsetfromdp(7370792);
        xsim_sc_channel<0, bool > *p_27_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_awready.bind(*p_27_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->m_axi_wdata.bind(*p_27_m_axi_wdata);
        p_27_m_axi_wdata->set_sv_netview_offsetfromdp(7370904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_wstrb.bind(*p_27_m_axi_wstrb);
        p_27_m_axi_wstrb->set_sv_netview_offsetfromdp(7370960);
        xsim_sc_channel<0, bool > *p_27_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wlast.bind(*p_27_m_axi_wlast);
        p_27_m_axi_wlast->set_sv_netview_offsetfromdp(7371016);
        xsim_sc_channel<0, bool > *p_27_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wvalid.bind(*p_27_m_axi_wvalid);
        p_27_m_axi_wvalid->set_sv_netview_offsetfromdp(7371072);
        xsim_sc_channel<0, bool > *p_27_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wready.bind(*p_27_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_bresp.bind(*p_27_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_buser.bind(*p_27_m_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_buser);
        xsim_sc_channel<0, bool > *p_27_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_bvalid.bind(*p_27_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_27_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_bready.bind(*p_27_m_axi_bready);
        p_27_m_axi_bready->set_sv_netview_offsetfromdp(7371352);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_27_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_27->m_axi_araddr.bind(*p_27_m_axi_araddr);
        p_27_m_axi_araddr->set_sv_netview_offsetfromdp(7371408);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_27_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_27->m_axi_arlen.bind(*p_27_m_axi_arlen);
        p_27_m_axi_arlen->set_sv_netview_offsetfromdp(7371464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_arburst.bind(*p_27_m_axi_arburst);
        p_27_m_axi_arburst->set_sv_netview_offsetfromdp(7371520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_27_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_27->m_axi_arlock.bind(*p_27_m_axi_arlock);
        p_27_m_axi_arlock->set_sv_netview_offsetfromdp(7371576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arcache.bind(*p_27_m_axi_arcache);
        p_27_m_axi_arcache->set_sv_netview_offsetfromdp(7371632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_arprot.bind(*p_27_m_axi_arprot);
        p_27_m_axi_arprot->set_sv_netview_offsetfromdp(7371688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arqos.bind(*p_27_m_axi_arqos);
        p_27_m_axi_arqos->set_sv_netview_offsetfromdp(7371744);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_m_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->m_axi_aruser.bind(*p_27_m_axi_aruser);
        p_27_m_axi_aruser->set_sv_netview_offsetfromdp(7371800);
        xsim_sc_channel<0, bool > *p_27_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_arvalid.bind(*p_27_m_axi_arvalid);
        p_27_m_axi_arvalid->set_sv_netview_offsetfromdp(7371856);
        xsim_sc_channel<0, bool > *p_27_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_arready.bind(*p_27_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->m_axi_rdata.bind(*p_27_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_rresp.bind(*p_27_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_27_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rlast.bind(*p_27_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_27_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rvalid.bind(*p_27_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_27_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rready.bind(*p_27_m_axi_rready);
        p_27_m_axi_rready->set_sv_netview_offsetfromdp(7372192);
        sc_inst_28 = new pfm_top_axi_vip_2_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_vip_2");
        sc_inst_28->xsim_set_dbg_index(440);
        xsim_sc_channel<0, bool > *p_28_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_28->aclk.bind(*p_28_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_28_aclk);
        xsim_sc_channel<0, bool > *p_28_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_28->aresetn.bind(*p_28_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_28_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_28_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_28->s_axi_awaddr.bind(*p_28_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->s_axi_awlen.bind(*p_28_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_awburst.bind(*p_28_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->s_axi_awlock.bind(*p_28_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_awcache.bind(*p_28_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->s_axi_awprot.bind(*p_28_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_awqos.bind(*p_28_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->s_axi_awuser.bind(*p_28_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_28_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_awvalid.bind(*p_28_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_28_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_awready.bind(*p_28_s_axi_awready);
        p_28_s_axi_awready->set_sv_netview_offsetfromdp(7372912);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->s_axi_wdata.bind(*p_28_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_wstrb.bind(*p_28_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_28_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_wlast.bind(*p_28_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_28_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_wvalid.bind(*p_28_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_28_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_wready.bind(*p_28_s_axi_wready);
        p_28_s_axi_wready->set_sv_netview_offsetfromdp(7373192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_bresp.bind(*p_28_s_axi_bresp);
        p_28_s_axi_bresp->set_sv_netview_offsetfromdp(7373248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_buser.bind(*p_28_s_axi_buser);
        p_28_s_axi_buser->set_sv_netview_offsetfromdp(7373304);
        xsim_sc_channel<0, bool > *p_28_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_bvalid.bind(*p_28_s_axi_bvalid);
        p_28_s_axi_bvalid->set_sv_netview_offsetfromdp(7373360);
        xsim_sc_channel<0, bool > *p_28_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_bready.bind(*p_28_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_28_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_28->s_axi_araddr.bind(*p_28_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->s_axi_arlen.bind(*p_28_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_arburst.bind(*p_28_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->s_axi_arlock.bind(*p_28_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_arcache.bind(*p_28_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->s_axi_arprot.bind(*p_28_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_arqos.bind(*p_28_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->s_axi_aruser.bind(*p_28_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_28_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_arvalid.bind(*p_28_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_28_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_arready.bind(*p_28_s_axi_arready);
        p_28_s_axi_arready->set_sv_netview_offsetfromdp(7373976);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->s_axi_rdata.bind(*p_28_s_axi_rdata);
        p_28_s_axi_rdata->set_sv_netview_offsetfromdp(7374032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_rresp.bind(*p_28_s_axi_rresp);
        p_28_s_axi_rresp->set_sv_netview_offsetfromdp(7374088);
        xsim_sc_channel<0, bool > *p_28_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_rlast.bind(*p_28_s_axi_rlast);
        p_28_s_axi_rlast->set_sv_netview_offsetfromdp(7374144);
        xsim_sc_channel<0, bool > *p_28_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_rvalid.bind(*p_28_s_axi_rvalid);
        p_28_s_axi_rvalid->set_sv_netview_offsetfromdp(7374200);
        xsim_sc_channel<0, bool > *p_28_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_rready.bind(*p_28_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_28_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_28->m_axi_awaddr.bind(*p_28_m_axi_awaddr);
        p_28_m_axi_awaddr->set_sv_netview_offsetfromdp(7374312);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->m_axi_awlen.bind(*p_28_m_axi_awlen);
        p_28_m_axi_awlen->set_sv_netview_offsetfromdp(7374368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->m_axi_awburst.bind(*p_28_m_axi_awburst);
        p_28_m_axi_awburst->set_sv_netview_offsetfromdp(7374424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->m_axi_awlock.bind(*p_28_m_axi_awlock);
        p_28_m_axi_awlock->set_sv_netview_offsetfromdp(7374480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_awcache.bind(*p_28_m_axi_awcache);
        p_28_m_axi_awcache->set_sv_netview_offsetfromdp(7374536);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->m_axi_awprot.bind(*p_28_m_axi_awprot);
        p_28_m_axi_awprot->set_sv_netview_offsetfromdp(7374592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_awqos.bind(*p_28_m_axi_awqos);
        p_28_m_axi_awqos->set_sv_netview_offsetfromdp(7374648);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_m_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->m_axi_awuser.bind(*p_28_m_axi_awuser);
        p_28_m_axi_awuser->set_sv_netview_offsetfromdp(7374704);
        xsim_sc_channel<0, bool > *p_28_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_awvalid.bind(*p_28_m_axi_awvalid);
        p_28_m_axi_awvalid->set_sv_netview_offsetfromdp(7374760);
        xsim_sc_channel<0, bool > *p_28_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_awready.bind(*p_28_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->m_axi_wdata.bind(*p_28_m_axi_wdata);
        p_28_m_axi_wdata->set_sv_netview_offsetfromdp(7374872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_wstrb.bind(*p_28_m_axi_wstrb);
        p_28_m_axi_wstrb->set_sv_netview_offsetfromdp(7374928);
        xsim_sc_channel<0, bool > *p_28_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_wlast.bind(*p_28_m_axi_wlast);
        p_28_m_axi_wlast->set_sv_netview_offsetfromdp(7374984);
        xsim_sc_channel<0, bool > *p_28_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_wvalid.bind(*p_28_m_axi_wvalid);
        p_28_m_axi_wvalid->set_sv_netview_offsetfromdp(7375040);
        xsim_sc_channel<0, bool > *p_28_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_wready.bind(*p_28_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->m_axi_bresp.bind(*p_28_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_buser.bind(*p_28_m_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_buser);
        xsim_sc_channel<0, bool > *p_28_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_bvalid.bind(*p_28_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_28_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_bready.bind(*p_28_m_axi_bready);
        p_28_m_axi_bready->set_sv_netview_offsetfromdp(7375320);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_28_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_28->m_axi_araddr.bind(*p_28_m_axi_araddr);
        p_28_m_axi_araddr->set_sv_netview_offsetfromdp(7375376);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->m_axi_arlen.bind(*p_28_m_axi_arlen);
        p_28_m_axi_arlen->set_sv_netview_offsetfromdp(7375432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->m_axi_arburst.bind(*p_28_m_axi_arburst);
        p_28_m_axi_arburst->set_sv_netview_offsetfromdp(7375488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->m_axi_arlock.bind(*p_28_m_axi_arlock);
        p_28_m_axi_arlock->set_sv_netview_offsetfromdp(7375544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_arcache.bind(*p_28_m_axi_arcache);
        p_28_m_axi_arcache->set_sv_netview_offsetfromdp(7375600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->m_axi_arprot.bind(*p_28_m_axi_arprot);
        p_28_m_axi_arprot->set_sv_netview_offsetfromdp(7375656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_arqos.bind(*p_28_m_axi_arqos);
        p_28_m_axi_arqos->set_sv_netview_offsetfromdp(7375712);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_m_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->m_axi_aruser.bind(*p_28_m_axi_aruser);
        p_28_m_axi_aruser->set_sv_netview_offsetfromdp(7375768);
        xsim_sc_channel<0, bool > *p_28_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_arvalid.bind(*p_28_m_axi_arvalid);
        p_28_m_axi_arvalid->set_sv_netview_offsetfromdp(7375824);
        xsim_sc_channel<0, bool > *p_28_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_arready.bind(*p_28_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->m_axi_rdata.bind(*p_28_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->m_axi_rresp.bind(*p_28_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_28_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_rlast.bind(*p_28_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_28_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_rvalid.bind(*p_28_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_28_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_rready.bind(*p_28_m_axi_rready);
        p_28_m_axi_rready->set_sv_netview_offsetfromdp(7376160);
        sc_inst_29 = new pfm_top_axi_vip_3_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_vip_3");
        sc_inst_29->xsim_set_dbg_index(441);
        xsim_sc_channel<0, bool > *p_29_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_29->aclk.bind(*p_29_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_29_aclk);
        xsim_sc_channel<0, bool > *p_29_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_29->aresetn.bind(*p_29_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_29_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_29_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_29->s_axi_awaddr.bind(*p_29_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_29_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_29->s_axi_awlen.bind(*p_29_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_awburst.bind(*p_29_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_29_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_29->s_axi_awlock.bind(*p_29_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_awcache.bind(*p_29_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->s_axi_awprot.bind(*p_29_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_awqos.bind(*p_29_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->s_axi_awuser.bind(*p_29_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_29_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_awvalid.bind(*p_29_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_awready.bind(*p_29_s_axi_awready);
        p_29_s_axi_awready->set_sv_netview_offsetfromdp(7376880);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->s_axi_wdata.bind(*p_29_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_wstrb.bind(*p_29_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_29_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_wlast.bind(*p_29_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_29_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_wvalid.bind(*p_29_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_wready.bind(*p_29_s_axi_wready);
        p_29_s_axi_wready->set_sv_netview_offsetfromdp(7377160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_bresp.bind(*p_29_s_axi_bresp);
        p_29_s_axi_bresp->set_sv_netview_offsetfromdp(7377216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_buser.bind(*p_29_s_axi_buser);
        p_29_s_axi_buser->set_sv_netview_offsetfromdp(7377272);
        xsim_sc_channel<0, bool > *p_29_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_bvalid.bind(*p_29_s_axi_bvalid);
        p_29_s_axi_bvalid->set_sv_netview_offsetfromdp(7377328);
        xsim_sc_channel<0, bool > *p_29_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_bready.bind(*p_29_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_29_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_29->s_axi_araddr.bind(*p_29_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_29_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_29->s_axi_arlen.bind(*p_29_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_arburst.bind(*p_29_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_29_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_29->s_axi_arlock.bind(*p_29_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_arcache.bind(*p_29_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->s_axi_arprot.bind(*p_29_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_arqos.bind(*p_29_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->s_axi_aruser.bind(*p_29_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_29_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_arvalid.bind(*p_29_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_arready.bind(*p_29_s_axi_arready);
        p_29_s_axi_arready->set_sv_netview_offsetfromdp(7377944);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->s_axi_rdata.bind(*p_29_s_axi_rdata);
        p_29_s_axi_rdata->set_sv_netview_offsetfromdp(7378000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_rresp.bind(*p_29_s_axi_rresp);
        p_29_s_axi_rresp->set_sv_netview_offsetfromdp(7378056);
        xsim_sc_channel<0, bool > *p_29_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_rlast.bind(*p_29_s_axi_rlast);
        p_29_s_axi_rlast->set_sv_netview_offsetfromdp(7378112);
        xsim_sc_channel<0, bool > *p_29_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_rvalid.bind(*p_29_s_axi_rvalid);
        p_29_s_axi_rvalid->set_sv_netview_offsetfromdp(7378168);
        xsim_sc_channel<0, bool > *p_29_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_rready.bind(*p_29_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_29_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_29->m_axi_awaddr.bind(*p_29_m_axi_awaddr);
        p_29_m_axi_awaddr->set_sv_netview_offsetfromdp(7378280);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_29_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_29->m_axi_awlen.bind(*p_29_m_axi_awlen);
        p_29_m_axi_awlen->set_sv_netview_offsetfromdp(7378336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_awburst.bind(*p_29_m_axi_awburst);
        p_29_m_axi_awburst->set_sv_netview_offsetfromdp(7378392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_29_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_29->m_axi_awlock.bind(*p_29_m_axi_awlock);
        p_29_m_axi_awlock->set_sv_netview_offsetfromdp(7378448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_awcache.bind(*p_29_m_axi_awcache);
        p_29_m_axi_awcache->set_sv_netview_offsetfromdp(7378504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->m_axi_awprot.bind(*p_29_m_axi_awprot);
        p_29_m_axi_awprot->set_sv_netview_offsetfromdp(7378560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_awqos.bind(*p_29_m_axi_awqos);
        p_29_m_axi_awqos->set_sv_netview_offsetfromdp(7378616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_m_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->m_axi_awuser.bind(*p_29_m_axi_awuser);
        p_29_m_axi_awuser->set_sv_netview_offsetfromdp(7378672);
        xsim_sc_channel<0, bool > *p_29_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_awvalid.bind(*p_29_m_axi_awvalid);
        p_29_m_axi_awvalid->set_sv_netview_offsetfromdp(7378728);
        xsim_sc_channel<0, bool > *p_29_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_awready.bind(*p_29_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->m_axi_wdata.bind(*p_29_m_axi_wdata);
        p_29_m_axi_wdata->set_sv_netview_offsetfromdp(7378840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_wstrb.bind(*p_29_m_axi_wstrb);
        p_29_m_axi_wstrb->set_sv_netview_offsetfromdp(7378896);
        xsim_sc_channel<0, bool > *p_29_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_wlast.bind(*p_29_m_axi_wlast);
        p_29_m_axi_wlast->set_sv_netview_offsetfromdp(7378952);
        xsim_sc_channel<0, bool > *p_29_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_wvalid.bind(*p_29_m_axi_wvalid);
        p_29_m_axi_wvalid->set_sv_netview_offsetfromdp(7379008);
        xsim_sc_channel<0, bool > *p_29_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_wready.bind(*p_29_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_bresp.bind(*p_29_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_buser.bind(*p_29_m_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_buser);
        xsim_sc_channel<0, bool > *p_29_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_bvalid.bind(*p_29_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_29_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_bready.bind(*p_29_m_axi_bready);
        p_29_m_axi_bready->set_sv_netview_offsetfromdp(7379288);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_29_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_29->m_axi_araddr.bind(*p_29_m_axi_araddr);
        p_29_m_axi_araddr->set_sv_netview_offsetfromdp(7379344);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_29_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_29->m_axi_arlen.bind(*p_29_m_axi_arlen);
        p_29_m_axi_arlen->set_sv_netview_offsetfromdp(7379400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_arburst.bind(*p_29_m_axi_arburst);
        p_29_m_axi_arburst->set_sv_netview_offsetfromdp(7379456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_29_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_29->m_axi_arlock.bind(*p_29_m_axi_arlock);
        p_29_m_axi_arlock->set_sv_netview_offsetfromdp(7379512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_arcache.bind(*p_29_m_axi_arcache);
        p_29_m_axi_arcache->set_sv_netview_offsetfromdp(7379568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->m_axi_arprot.bind(*p_29_m_axi_arprot);
        p_29_m_axi_arprot->set_sv_netview_offsetfromdp(7379624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_arqos.bind(*p_29_m_axi_arqos);
        p_29_m_axi_arqos->set_sv_netview_offsetfromdp(7379680);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_m_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->m_axi_aruser.bind(*p_29_m_axi_aruser);
        p_29_m_axi_aruser->set_sv_netview_offsetfromdp(7379736);
        xsim_sc_channel<0, bool > *p_29_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_arvalid.bind(*p_29_m_axi_arvalid);
        p_29_m_axi_arvalid->set_sv_netview_offsetfromdp(7379792);
        xsim_sc_channel<0, bool > *p_29_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_arready.bind(*p_29_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->m_axi_rdata.bind(*p_29_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_rresp.bind(*p_29_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_29_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_rlast.bind(*p_29_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_29_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_rvalid.bind(*p_29_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_29_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_rready.bind(*p_29_m_axi_rready);
        p_29_m_axi_rready->set_sv_netview_offsetfromdp(7380128);
        sc_inst_30 = new pfm_top_xbar_0(".pfm_top_wrapper.pfm_top_i.static_region.connect_to_es_cu.xbar");
        sc_inst_30->xsim_set_dbg_index(1008);
        xsim_sc_channel<0, bool > *p_30_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_30->aclk.bind(*p_30_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aclk);
        xsim_sc_channel<0, bool > *p_30_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_30->aresetn.bind(*p_30_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aresetn);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_30_s_axi_awaddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_30->s_axi_awaddr.bind(*p_30_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awaddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_30_s_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_30->s_axi_awprot.bind(*p_30_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_awvalid.bind(*p_30_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_awready.bind(*p_30_s_axi_awready);
        p_30_s_axi_awready->set_sv_netview_offsetfromdp(7512232);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_30_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_30->s_axi_wdata.bind(*p_30_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->s_axi_wstrb.bind(*p_30_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wstrb);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_wvalid.bind(*p_30_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_wready.bind(*p_30_s_axi_wready);
        p_30_s_axi_wready->set_sv_netview_offsetfromdp(7512456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_bresp.bind(*p_30_s_axi_bresp);
        p_30_s_axi_bresp->set_sv_netview_offsetfromdp(7512512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_bvalid.bind(*p_30_s_axi_bvalid);
        p_30_s_axi_bvalid->set_sv_netview_offsetfromdp(7512568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_bready.bind(*p_30_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_bready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_30_s_axi_araddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_30->s_axi_araddr.bind(*p_30_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_araddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_30_s_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_30->s_axi_arprot.bind(*p_30_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_arvalid.bind(*p_30_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_arready.bind(*p_30_s_axi_arready);
        p_30_s_axi_arready->set_sv_netview_offsetfromdp(7512848);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_30_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_30->s_axi_rdata.bind(*p_30_s_axi_rdata);
        p_30_s_axi_rdata->set_sv_netview_offsetfromdp(7512904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_rresp.bind(*p_30_s_axi_rresp);
        p_30_s_axi_rresp->set_sv_netview_offsetfromdp(7512960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_rvalid.bind(*p_30_s_axi_rvalid);
        p_30_s_axi_rvalid->set_sv_netview_offsetfromdp(7513016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_rready.bind(*p_30_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_rready);
        xsim_sc_channel<320, sc_dt::sc_bv<320> > *p_30_m_axi_awaddr = new xsim_sc_channel<320, sc_dt::sc_bv<320> >();
        sc_inst_30->m_axi_awaddr.bind(*p_30_m_axi_awaddr);
        p_30_m_axi_awaddr->set_sv_netview_offsetfromdp(7513128);
        xsim_sc_channel<15, sc_dt::sc_bv<15> > *p_30_m_axi_awprot = new xsim_sc_channel<15, sc_dt::sc_bv<15> >();
        sc_inst_30->m_axi_awprot.bind(*p_30_m_axi_awprot);
        p_30_m_axi_awprot->set_sv_netview_offsetfromdp(7513184);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_30_m_axi_awvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_30->m_axi_awvalid.bind(*p_30_m_axi_awvalid);
        p_30_m_axi_awvalid->set_sv_netview_offsetfromdp(7513240);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_30_m_axi_awready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_30->m_axi_awready.bind(*p_30_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_awready);
        xsim_sc_channel<160, sc_dt::sc_bv<160> > *p_30_m_axi_wdata = new xsim_sc_channel<160, sc_dt::sc_bv<160> >();
        sc_inst_30->m_axi_wdata.bind(*p_30_m_axi_wdata);
        p_30_m_axi_wdata->set_sv_netview_offsetfromdp(7513352);
        xsim_sc_channel<20, sc_dt::sc_bv<20> > *p_30_m_axi_wstrb = new xsim_sc_channel<20, sc_dt::sc_bv<20> >();
        sc_inst_30->m_axi_wstrb.bind(*p_30_m_axi_wstrb);
        p_30_m_axi_wstrb->set_sv_netview_offsetfromdp(7513408);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_30_m_axi_wvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_30->m_axi_wvalid.bind(*p_30_m_axi_wvalid);
        p_30_m_axi_wvalid->set_sv_netview_offsetfromdp(7513464);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_30_m_axi_wready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_30->m_axi_wready.bind(*p_30_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_wready);
        xsim_sc_channel<10, sc_dt::sc_bv<10> > *p_30_m_axi_bresp = new xsim_sc_channel<10, sc_dt::sc_bv<10> >();
        sc_inst_30->m_axi_bresp.bind(*p_30_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_bresp);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_30_m_axi_bvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_30->m_axi_bvalid.bind(*p_30_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_bvalid);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_30_m_axi_bready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_30->m_axi_bready.bind(*p_30_m_axi_bready);
        p_30_m_axi_bready->set_sv_netview_offsetfromdp(7513688);
        xsim_sc_channel<320, sc_dt::sc_bv<320> > *p_30_m_axi_araddr = new xsim_sc_channel<320, sc_dt::sc_bv<320> >();
        sc_inst_30->m_axi_araddr.bind(*p_30_m_axi_araddr);
        p_30_m_axi_araddr->set_sv_netview_offsetfromdp(7513744);
        xsim_sc_channel<15, sc_dt::sc_bv<15> > *p_30_m_axi_arprot = new xsim_sc_channel<15, sc_dt::sc_bv<15> >();
        sc_inst_30->m_axi_arprot.bind(*p_30_m_axi_arprot);
        p_30_m_axi_arprot->set_sv_netview_offsetfromdp(7513800);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_30_m_axi_arvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_30->m_axi_arvalid.bind(*p_30_m_axi_arvalid);
        p_30_m_axi_arvalid->set_sv_netview_offsetfromdp(7513856);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_30_m_axi_arready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_30->m_axi_arready.bind(*p_30_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_arready);
        xsim_sc_channel<160, sc_dt::sc_bv<160> > *p_30_m_axi_rdata = new xsim_sc_channel<160, sc_dt::sc_bv<160> >();
        sc_inst_30->m_axi_rdata.bind(*p_30_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rdata);
        xsim_sc_channel<10, sc_dt::sc_bv<10> > *p_30_m_axi_rresp = new xsim_sc_channel<10, sc_dt::sc_bv<10> >();
        sc_inst_30->m_axi_rresp.bind(*p_30_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rresp);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_30_m_axi_rvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_30->m_axi_rvalid.bind(*p_30_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rvalid);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_30_m_axi_rready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_30->m_axi_rready.bind(*p_30_m_axi_rready);
        p_30_m_axi_rready->set_sv_netview_offsetfromdp(7514136);
        sc_inst_31 = new pfm_top_embedded_schedular_0(".pfm_top_wrapper.pfm_top_i.static_region.embedded_schedular");
        sc_inst_31->xsim_set_dbg_index(445);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_31_interrupt_cu = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_31->interrupt_cu.bind(*p_31_interrupt_cu);
        (*_glb_hdl_sc_channel_map).push_back(p_31_interrupt_cu);
        xsim_sc_channel<0, bool > *p_31_interrupt_m2m = new xsim_sc_channel<0, bool >();
        sc_inst_31->interrupt_m2m.bind(*p_31_interrupt_m2m);
        p_31_interrupt_m2m->set_sv_netview_offsetfromdp(7516024);
        xsim_sc_channel<0, bool > *p_31_s_axi_ctrl_user_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_ctrl_user_aresetn.bind(*p_31_s_axi_ctrl_user_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_ctrl_user_aresetn);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_aresetn.bind(*p_31_s_axi_data_p2p_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_aresetn);
        xsim_sc_channel<0, bool > *p_31_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_31->maxi_lite_mb_aresetn.bind(*p_31_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_31_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_aresetn.bind(*p_31_m_axi_data_m2m_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_aresetn);
        xsim_sc_channel<0, bool > *p_31_s_axi_ctrl_user_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_ctrl_user_aclk.bind(*p_31_s_axi_ctrl_user_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_ctrl_user_aclk);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_aclk.bind(*p_31_s_axi_data_p2p_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_aclk);
        xsim_sc_channel<0, bool > *p_31_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_31->maxi_lite_mb_aclk.bind(*p_31_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_31_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_aclk.bind(*p_31_m_axi_data_m2m_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_aclk);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_s_axi_data_p2p_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->s_axi_data_p2p_awaddr.bind(*p_31_s_axi_data_p2p_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_s_axi_data_p2p_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->s_axi_data_p2p_awlen.bind(*p_31_s_axi_data_p2p_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_s_axi_data_p2p_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->s_axi_data_p2p_awsize.bind(*p_31_s_axi_data_p2p_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_data_p2p_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_data_p2p_awburst.bind(*p_31_s_axi_data_p2p_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_awburst);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_awlock.bind(*p_31_s_axi_data_p2p_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_data_p2p_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_data_p2p_awcache.bind(*p_31_s_axi_data_p2p_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_s_axi_data_p2p_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->s_axi_data_p2p_awprot.bind(*p_31_s_axi_data_p2p_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_data_p2p_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_data_p2p_awregion.bind(*p_31_s_axi_data_p2p_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_data_p2p_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_data_p2p_awqos.bind(*p_31_s_axi_data_p2p_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_s_axi_data_p2p_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->s_axi_data_p2p_awuser.bind(*p_31_s_axi_data_p2p_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_awuser);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_awvalid.bind(*p_31_s_axi_data_p2p_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_awvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_awready.bind(*p_31_s_axi_data_p2p_awready);
        p_31_s_axi_data_p2p_awready->set_sv_netview_offsetfromdp(7517144);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_s_axi_data_p2p_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->s_axi_data_p2p_wdata.bind(*p_31_s_axi_data_p2p_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_data_p2p_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_data_p2p_wstrb.bind(*p_31_s_axi_data_p2p_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_wstrb);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_wlast.bind(*p_31_s_axi_data_p2p_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_wlast);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_wvalid.bind(*p_31_s_axi_data_p2p_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_wvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_wready.bind(*p_31_s_axi_data_p2p_wready);
        p_31_s_axi_data_p2p_wready->set_sv_netview_offsetfromdp(7517424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_data_p2p_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_data_p2p_bresp.bind(*p_31_s_axi_data_p2p_bresp);
        p_31_s_axi_data_p2p_bresp->set_sv_netview_offsetfromdp(7517480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_data_p2p_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_data_p2p_buser.bind(*p_31_s_axi_data_p2p_buser);
        p_31_s_axi_data_p2p_buser->set_sv_netview_offsetfromdp(7517536);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_bvalid.bind(*p_31_s_axi_data_p2p_bvalid);
        p_31_s_axi_data_p2p_bvalid->set_sv_netview_offsetfromdp(7517592);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_bready.bind(*p_31_s_axi_data_p2p_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_s_axi_data_p2p_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->s_axi_data_p2p_araddr.bind(*p_31_s_axi_data_p2p_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_s_axi_data_p2p_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->s_axi_data_p2p_arlen.bind(*p_31_s_axi_data_p2p_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_s_axi_data_p2p_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->s_axi_data_p2p_arsize.bind(*p_31_s_axi_data_p2p_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_data_p2p_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_data_p2p_arburst.bind(*p_31_s_axi_data_p2p_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_arburst);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_arlock.bind(*p_31_s_axi_data_p2p_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_data_p2p_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_data_p2p_arcache.bind(*p_31_s_axi_data_p2p_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_s_axi_data_p2p_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->s_axi_data_p2p_arprot.bind(*p_31_s_axi_data_p2p_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_data_p2p_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_data_p2p_arregion.bind(*p_31_s_axi_data_p2p_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_data_p2p_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_data_p2p_arqos.bind(*p_31_s_axi_data_p2p_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_s_axi_data_p2p_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->s_axi_data_p2p_aruser.bind(*p_31_s_axi_data_p2p_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_aruser);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_arvalid.bind(*p_31_s_axi_data_p2p_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_arvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_arready.bind(*p_31_s_axi_data_p2p_arready);
        p_31_s_axi_data_p2p_arready->set_sv_netview_offsetfromdp(7518320);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_s_axi_data_p2p_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->s_axi_data_p2p_rdata.bind(*p_31_s_axi_data_p2p_rdata);
        p_31_s_axi_data_p2p_rdata->set_sv_netview_offsetfromdp(7518376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_data_p2p_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_data_p2p_rresp.bind(*p_31_s_axi_data_p2p_rresp);
        p_31_s_axi_data_p2p_rresp->set_sv_netview_offsetfromdp(7518432);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_rlast.bind(*p_31_s_axi_data_p2p_rlast);
        p_31_s_axi_data_p2p_rlast->set_sv_netview_offsetfromdp(7518488);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_rvalid.bind(*p_31_s_axi_data_p2p_rvalid);
        p_31_s_axi_data_p2p_rvalid->set_sv_netview_offsetfromdp(7518544);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_rready.bind(*p_31_s_axi_data_p2p_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->maxi_lite_mb_awaddr.bind(*p_31_maxi_lite_mb_awaddr);
        p_31_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(7518656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->maxi_lite_mb_awprot.bind(*p_31_maxi_lite_mb_awprot);
        p_31_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(7518712);
        xsim_sc_channel<0, bool > *p_31_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->maxi_lite_mb_awvalid.bind(*p_31_maxi_lite_mb_awvalid);
        p_31_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(7518768);
        xsim_sc_channel<0, bool > *p_31_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->maxi_lite_mb_awready.bind(*p_31_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->maxi_lite_mb_wdata.bind(*p_31_maxi_lite_mb_wdata);
        p_31_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(7518880);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->maxi_lite_mb_wstrb.bind(*p_31_maxi_lite_mb_wstrb);
        p_31_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(7518936);
        xsim_sc_channel<0, bool > *p_31_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->maxi_lite_mb_wvalid.bind(*p_31_maxi_lite_mb_wvalid);
        p_31_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(7518992);
        xsim_sc_channel<0, bool > *p_31_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->maxi_lite_mb_wready.bind(*p_31_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->maxi_lite_mb_bresp.bind(*p_31_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_31_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->maxi_lite_mb_bvalid.bind(*p_31_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_31_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->maxi_lite_mb_bready.bind(*p_31_maxi_lite_mb_bready);
        p_31_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(7519216);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->maxi_lite_mb_araddr.bind(*p_31_maxi_lite_mb_araddr);
        p_31_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(7519272);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->maxi_lite_mb_arprot.bind(*p_31_maxi_lite_mb_arprot);
        p_31_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(7519328);
        xsim_sc_channel<0, bool > *p_31_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->maxi_lite_mb_arvalid.bind(*p_31_maxi_lite_mb_arvalid);
        p_31_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(7519384);
        xsim_sc_channel<0, bool > *p_31_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->maxi_lite_mb_arready.bind(*p_31_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->maxi_lite_mb_rdata.bind(*p_31_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->maxi_lite_mb_rresp.bind(*p_31_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_31_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->maxi_lite_mb_rvalid.bind(*p_31_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_31_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->maxi_lite_mb_rready.bind(*p_31_maxi_lite_mb_rready);
        p_31_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(7519664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_m_axi_data_m2m_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->m_axi_data_m2m_awid.bind(*p_31_m_axi_data_m2m_awid);
        p_31_m_axi_data_m2m_awid->set_sv_netview_offsetfromdp(7519720);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_m_axi_data_m2m_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->m_axi_data_m2m_awaddr.bind(*p_31_m_axi_data_m2m_awaddr);
        p_31_m_axi_data_m2m_awaddr->set_sv_netview_offsetfromdp(7519776);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_m_axi_data_m2m_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->m_axi_data_m2m_awlen.bind(*p_31_m_axi_data_m2m_awlen);
        p_31_m_axi_data_m2m_awlen->set_sv_netview_offsetfromdp(7519832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_m_axi_data_m2m_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->m_axi_data_m2m_awsize.bind(*p_31_m_axi_data_m2m_awsize);
        p_31_m_axi_data_m2m_awsize->set_sv_netview_offsetfromdp(7519888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_data_m2m_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_data_m2m_awburst.bind(*p_31_m_axi_data_m2m_awburst);
        p_31_m_axi_data_m2m_awburst->set_sv_netview_offsetfromdp(7519944);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_awlock.bind(*p_31_m_axi_data_m2m_awlock);
        p_31_m_axi_data_m2m_awlock->set_sv_netview_offsetfromdp(7520000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_data_m2m_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_data_m2m_awcache.bind(*p_31_m_axi_data_m2m_awcache);
        p_31_m_axi_data_m2m_awcache->set_sv_netview_offsetfromdp(7520056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_m_axi_data_m2m_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->m_axi_data_m2m_awprot.bind(*p_31_m_axi_data_m2m_awprot);
        p_31_m_axi_data_m2m_awprot->set_sv_netview_offsetfromdp(7520112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_data_m2m_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_data_m2m_awqos.bind(*p_31_m_axi_data_m2m_awqos);
        p_31_m_axi_data_m2m_awqos->set_sv_netview_offsetfromdp(7520168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_data_m2m_awuser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_data_m2m_awuser.bind(*p_31_m_axi_data_m2m_awuser);
        p_31_m_axi_data_m2m_awuser->set_sv_netview_offsetfromdp(7520224);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_awvalid.bind(*p_31_m_axi_data_m2m_awvalid);
        p_31_m_axi_data_m2m_awvalid->set_sv_netview_offsetfromdp(7520280);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_awready.bind(*p_31_m_axi_data_m2m_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_m_axi_data_m2m_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->m_axi_data_m2m_wdata.bind(*p_31_m_axi_data_m2m_wdata);
        p_31_m_axi_data_m2m_wdata->set_sv_netview_offsetfromdp(7520392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_data_m2m_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_data_m2m_wstrb.bind(*p_31_m_axi_data_m2m_wstrb);
        p_31_m_axi_data_m2m_wstrb->set_sv_netview_offsetfromdp(7520448);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_wlast.bind(*p_31_m_axi_data_m2m_wlast);
        p_31_m_axi_data_m2m_wlast->set_sv_netview_offsetfromdp(7520504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_data_m2m_wuser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_data_m2m_wuser.bind(*p_31_m_axi_data_m2m_wuser);
        p_31_m_axi_data_m2m_wuser->set_sv_netview_offsetfromdp(7520560);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_wvalid.bind(*p_31_m_axi_data_m2m_wvalid);
        p_31_m_axi_data_m2m_wvalid->set_sv_netview_offsetfromdp(7520616);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_wready.bind(*p_31_m_axi_data_m2m_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_m_axi_data_m2m_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->m_axi_data_m2m_bid.bind(*p_31_m_axi_data_m2m_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_data_m2m_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_data_m2m_bresp.bind(*p_31_m_axi_data_m2m_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_data_m2m_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_data_m2m_buser.bind(*p_31_m_axi_data_m2m_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_buser);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_bvalid.bind(*p_31_m_axi_data_m2m_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_bvalid);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_bready.bind(*p_31_m_axi_data_m2m_bready);
        p_31_m_axi_data_m2m_bready->set_sv_netview_offsetfromdp(7520952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_m_axi_data_m2m_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->m_axi_data_m2m_arid.bind(*p_31_m_axi_data_m2m_arid);
        p_31_m_axi_data_m2m_arid->set_sv_netview_offsetfromdp(7521008);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_m_axi_data_m2m_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->m_axi_data_m2m_araddr.bind(*p_31_m_axi_data_m2m_araddr);
        p_31_m_axi_data_m2m_araddr->set_sv_netview_offsetfromdp(7521064);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_m_axi_data_m2m_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->m_axi_data_m2m_arlen.bind(*p_31_m_axi_data_m2m_arlen);
        p_31_m_axi_data_m2m_arlen->set_sv_netview_offsetfromdp(7521120);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_m_axi_data_m2m_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->m_axi_data_m2m_arsize.bind(*p_31_m_axi_data_m2m_arsize);
        p_31_m_axi_data_m2m_arsize->set_sv_netview_offsetfromdp(7521176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_data_m2m_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_data_m2m_arburst.bind(*p_31_m_axi_data_m2m_arburst);
        p_31_m_axi_data_m2m_arburst->set_sv_netview_offsetfromdp(7521232);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_arlock.bind(*p_31_m_axi_data_m2m_arlock);
        p_31_m_axi_data_m2m_arlock->set_sv_netview_offsetfromdp(7521288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_data_m2m_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_data_m2m_arcache.bind(*p_31_m_axi_data_m2m_arcache);
        p_31_m_axi_data_m2m_arcache->set_sv_netview_offsetfromdp(7521344);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_m_axi_data_m2m_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->m_axi_data_m2m_arprot.bind(*p_31_m_axi_data_m2m_arprot);
        p_31_m_axi_data_m2m_arprot->set_sv_netview_offsetfromdp(7521400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_data_m2m_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_data_m2m_arqos.bind(*p_31_m_axi_data_m2m_arqos);
        p_31_m_axi_data_m2m_arqos->set_sv_netview_offsetfromdp(7521456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_data_m2m_aruser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_data_m2m_aruser.bind(*p_31_m_axi_data_m2m_aruser);
        p_31_m_axi_data_m2m_aruser->set_sv_netview_offsetfromdp(7521512);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_arvalid.bind(*p_31_m_axi_data_m2m_arvalid);
        p_31_m_axi_data_m2m_arvalid->set_sv_netview_offsetfromdp(7521568);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_arready.bind(*p_31_m_axi_data_m2m_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_m_axi_data_m2m_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->m_axi_data_m2m_rid.bind(*p_31_m_axi_data_m2m_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_m_axi_data_m2m_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->m_axi_data_m2m_rdata.bind(*p_31_m_axi_data_m2m_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_data_m2m_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_data_m2m_rresp.bind(*p_31_m_axi_data_m2m_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_rresp);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_rlast.bind(*p_31_m_axi_data_m2m_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_rlast);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_data_m2m_ruser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_data_m2m_ruser.bind(*p_31_m_axi_data_m2m_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_ruser);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_rvalid.bind(*p_31_m_axi_data_m2m_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_rvalid);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_rready.bind(*p_31_m_axi_data_m2m_rready);
        p_31_m_axi_data_m2m_rready->set_sv_netview_offsetfromdp(7522016);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_s_axi_ctrl_user_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->s_axi_ctrl_user_awaddr.bind(*p_31_s_axi_ctrl_user_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_ctrl_user_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_s_axi_ctrl_user_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->s_axi_ctrl_user_awprot.bind(*p_31_s_axi_ctrl_user_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_ctrl_user_awprot);
        xsim_sc_channel<0, bool > *p_31_s_axi_ctrl_user_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_ctrl_user_awvalid.bind(*p_31_s_axi_ctrl_user_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_ctrl_user_awvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_ctrl_user_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_ctrl_user_awready.bind(*p_31_s_axi_ctrl_user_awready);
        p_31_s_axi_ctrl_user_awready->set_sv_netview_offsetfromdp(7522240);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_s_axi_ctrl_user_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->s_axi_ctrl_user_wdata.bind(*p_31_s_axi_ctrl_user_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_ctrl_user_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_ctrl_user_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_ctrl_user_wstrb.bind(*p_31_s_axi_ctrl_user_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_ctrl_user_wstrb);
        xsim_sc_channel<0, bool > *p_31_s_axi_ctrl_user_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_ctrl_user_wvalid.bind(*p_31_s_axi_ctrl_user_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_ctrl_user_wvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_ctrl_user_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_ctrl_user_wready.bind(*p_31_s_axi_ctrl_user_wready);
        p_31_s_axi_ctrl_user_wready->set_sv_netview_offsetfromdp(7522464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_ctrl_user_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_ctrl_user_bresp.bind(*p_31_s_axi_ctrl_user_bresp);
        p_31_s_axi_ctrl_user_bresp->set_sv_netview_offsetfromdp(7522520);
        xsim_sc_channel<0, bool > *p_31_s_axi_ctrl_user_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_ctrl_user_bvalid.bind(*p_31_s_axi_ctrl_user_bvalid);
        p_31_s_axi_ctrl_user_bvalid->set_sv_netview_offsetfromdp(7522576);
        xsim_sc_channel<0, bool > *p_31_s_axi_ctrl_user_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_ctrl_user_bready.bind(*p_31_s_axi_ctrl_user_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_ctrl_user_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_s_axi_ctrl_user_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->s_axi_ctrl_user_araddr.bind(*p_31_s_axi_ctrl_user_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_ctrl_user_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_s_axi_ctrl_user_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->s_axi_ctrl_user_arprot.bind(*p_31_s_axi_ctrl_user_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_ctrl_user_arprot);
        xsim_sc_channel<0, bool > *p_31_s_axi_ctrl_user_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_ctrl_user_arvalid.bind(*p_31_s_axi_ctrl_user_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_ctrl_user_arvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_ctrl_user_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_ctrl_user_arready.bind(*p_31_s_axi_ctrl_user_arready);
        p_31_s_axi_ctrl_user_arready->set_sv_netview_offsetfromdp(7522856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_s_axi_ctrl_user_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->s_axi_ctrl_user_rdata.bind(*p_31_s_axi_ctrl_user_rdata);
        p_31_s_axi_ctrl_user_rdata->set_sv_netview_offsetfromdp(7522912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_ctrl_user_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_ctrl_user_rresp.bind(*p_31_s_axi_ctrl_user_rresp);
        p_31_s_axi_ctrl_user_rresp->set_sv_netview_offsetfromdp(7522968);
        xsim_sc_channel<0, bool > *p_31_s_axi_ctrl_user_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_ctrl_user_rvalid.bind(*p_31_s_axi_ctrl_user_rvalid);
        p_31_s_axi_ctrl_user_rvalid->set_sv_netview_offsetfromdp(7523024);
        xsim_sc_channel<0, bool > *p_31_s_axi_ctrl_user_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_ctrl_user_rready.bind(*p_31_s_axi_ctrl_user_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_ctrl_user_rready);
        sc_inst_32 = new pfm_top_sim_address_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_address_0");
        sc_inst_32->xsim_set_dbg_index(447);
        xsim_sc_channel<0, bool > *p_32_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_aclk.bind(*p_32_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_32_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_aresetn.bind(*p_32_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_32_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_aximm_aclk.bind(*p_32_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_32_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_aximm_aresetn.bind(*p_32_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_32_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_AWVALID.bind(*p_32_m_aximm_AWVALID);
        p_32_m_aximm_AWVALID->set_sv_netview_offsetfromdp(7569584);
        xsim_sc_channel<0, bool > *p_32_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_AWREADY.bind(*p_32_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_32_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_32->m_aximm_AWADDR.bind(*p_32_m_aximm_AWADDR);
        p_32_m_aximm_AWADDR->set_sv_netview_offsetfromdp(7569696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->m_aximm_AWID.bind(*p_32_m_aximm_AWID);
        p_32_m_aximm_AWID->set_sv_netview_offsetfromdp(7569752);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->m_aximm_AWLEN.bind(*p_32_m_aximm_AWLEN);
        p_32_m_aximm_AWLEN->set_sv_netview_offsetfromdp(7569808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->m_aximm_AWSIZE.bind(*p_32_m_aximm_AWSIZE);
        p_32_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(7569864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_aximm_AWBURST.bind(*p_32_m_aximm_AWBURST);
        p_32_m_aximm_AWBURST->set_sv_netview_offsetfromdp(7569920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->m_aximm_AWLOCK.bind(*p_32_m_aximm_AWLOCK);
        p_32_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(7569976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_aximm_AWCACHE.bind(*p_32_m_aximm_AWCACHE);
        p_32_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(7570032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->m_aximm_AWPROT.bind(*p_32_m_aximm_AWPROT);
        p_32_m_aximm_AWPROT->set_sv_netview_offsetfromdp(7570088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_aximm_AWREGION.bind(*p_32_m_aximm_AWREGION);
        p_32_m_aximm_AWREGION->set_sv_netview_offsetfromdp(7570144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_aximm_AWQOS.bind(*p_32_m_aximm_AWQOS);
        p_32_m_aximm_AWQOS->set_sv_netview_offsetfromdp(7570200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_m_aximm_AWUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->m_aximm_AWUSER.bind(*p_32_m_aximm_AWUSER);
        p_32_m_aximm_AWUSER->set_sv_netview_offsetfromdp(7570256);
        xsim_sc_channel<0, bool > *p_32_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_WVALID.bind(*p_32_m_aximm_WVALID);
        p_32_m_aximm_WVALID->set_sv_netview_offsetfromdp(7570312);
        xsim_sc_channel<0, bool > *p_32_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_WREADY.bind(*p_32_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->m_aximm_WDATA.bind(*p_32_m_aximm_WDATA);
        p_32_m_aximm_WDATA->set_sv_netview_offsetfromdp(7570424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_aximm_WSTRB.bind(*p_32_m_aximm_WSTRB);
        p_32_m_aximm_WSTRB->set_sv_netview_offsetfromdp(7570480);
        xsim_sc_channel<0, bool > *p_32_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_WLAST.bind(*p_32_m_aximm_WLAST);
        p_32_m_aximm_WLAST->set_sv_netview_offsetfromdp(7570536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_m_aximm_WUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->m_aximm_WUSER.bind(*p_32_m_aximm_WUSER);
        p_32_m_aximm_WUSER->set_sv_netview_offsetfromdp(7570592);
        xsim_sc_channel<0, bool > *p_32_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_ARVALID.bind(*p_32_m_aximm_ARVALID);
        p_32_m_aximm_ARVALID->set_sv_netview_offsetfromdp(7570648);
        xsim_sc_channel<0, bool > *p_32_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_ARREADY.bind(*p_32_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_32_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_32->m_aximm_ARADDR.bind(*p_32_m_aximm_ARADDR);
        p_32_m_aximm_ARADDR->set_sv_netview_offsetfromdp(7570760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->m_aximm_ARID.bind(*p_32_m_aximm_ARID);
        p_32_m_aximm_ARID->set_sv_netview_offsetfromdp(7570816);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->m_aximm_ARLEN.bind(*p_32_m_aximm_ARLEN);
        p_32_m_aximm_ARLEN->set_sv_netview_offsetfromdp(7570872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->m_aximm_ARSIZE.bind(*p_32_m_aximm_ARSIZE);
        p_32_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(7570928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_aximm_ARBURST.bind(*p_32_m_aximm_ARBURST);
        p_32_m_aximm_ARBURST->set_sv_netview_offsetfromdp(7570984);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->m_aximm_ARLOCK.bind(*p_32_m_aximm_ARLOCK);
        p_32_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(7571040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_aximm_ARCACHE.bind(*p_32_m_aximm_ARCACHE);
        p_32_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(7571096);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->m_aximm_ARPROT.bind(*p_32_m_aximm_ARPROT);
        p_32_m_aximm_ARPROT->set_sv_netview_offsetfromdp(7571152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_aximm_ARREGION.bind(*p_32_m_aximm_ARREGION);
        p_32_m_aximm_ARREGION->set_sv_netview_offsetfromdp(7571208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_aximm_ARQOS.bind(*p_32_m_aximm_ARQOS);
        p_32_m_aximm_ARQOS->set_sv_netview_offsetfromdp(7571264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_m_aximm_ARUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->m_aximm_ARUSER.bind(*p_32_m_aximm_ARUSER);
        p_32_m_aximm_ARUSER->set_sv_netview_offsetfromdp(7571320);
        xsim_sc_channel<0, bool > *p_32_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_RVALID.bind(*p_32_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_32_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_RREADY.bind(*p_32_m_aximm_RREADY);
        p_32_m_aximm_RREADY->set_sv_netview_offsetfromdp(7571432);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->m_aximm_RDATA.bind(*p_32_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_32_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_RLAST.bind(*p_32_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->m_aximm_RID.bind(*p_32_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_aximm_RRESP.bind(*p_32_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_RRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_m_aximm_RUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->m_aximm_RUSER.bind(*p_32_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_32_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_BVALID.bind(*p_32_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_32_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_BREADY.bind(*p_32_m_aximm_BREADY);
        p_32_m_aximm_BREADY->set_sv_netview_offsetfromdp(7571824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_aximm_BRESP.bind(*p_32_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->m_aximm_BID.bind(*p_32_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->m_aximm_BUSER.bind(*p_32_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->s_axi_awaddr.bind(*p_32_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->s_axi_awlen.bind(*p_32_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->s_axi_awsize.bind(*p_32_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_awburst.bind(*p_32_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->s_axi_awlock.bind(*p_32_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_awcache.bind(*p_32_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->s_axi_awprot.bind(*p_32_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_awregion.bind(*p_32_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_awqos.bind(*p_32_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->s_axi_awuser.bind(*p_32_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_32_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_awvalid.bind(*p_32_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_awready.bind(*p_32_s_axi_awready);
        p_32_s_axi_awready->set_sv_netview_offsetfromdp(7572664);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->s_axi_wdata.bind(*p_32_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_wstrb.bind(*p_32_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_32_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_wlast.bind(*p_32_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_32_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_wvalid.bind(*p_32_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_wready.bind(*p_32_s_axi_wready);
        p_32_s_axi_wready->set_sv_netview_offsetfromdp(7572944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_bresp.bind(*p_32_s_axi_bresp);
        p_32_s_axi_bresp->set_sv_netview_offsetfromdp(7573000);
        xsim_sc_channel<0, bool > *p_32_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_bvalid.bind(*p_32_s_axi_bvalid);
        p_32_s_axi_bvalid->set_sv_netview_offsetfromdp(7573056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_buser.bind(*p_32_s_axi_buser);
        p_32_s_axi_buser->set_sv_netview_offsetfromdp(7573112);
        xsim_sc_channel<0, bool > *p_32_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_bready.bind(*p_32_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->s_axi_araddr.bind(*p_32_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->s_axi_arlen.bind(*p_32_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->s_axi_arsize.bind(*p_32_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_arburst.bind(*p_32_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->s_axi_arlock.bind(*p_32_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_arcache.bind(*p_32_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->s_axi_arprot.bind(*p_32_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_arregion.bind(*p_32_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_arqos.bind(*p_32_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->s_axi_aruser.bind(*p_32_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_32_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_arvalid.bind(*p_32_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_arready.bind(*p_32_s_axi_arready);
        p_32_s_axi_arready->set_sv_netview_offsetfromdp(7573840);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->s_axi_rdata.bind(*p_32_s_axi_rdata);
        p_32_s_axi_rdata->set_sv_netview_offsetfromdp(7573896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_rresp.bind(*p_32_s_axi_rresp);
        p_32_s_axi_rresp->set_sv_netview_offsetfromdp(7573952);
        xsim_sc_channel<0, bool > *p_32_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_rlast.bind(*p_32_s_axi_rlast);
        p_32_s_axi_rlast->set_sv_netview_offsetfromdp(7574008);
        xsim_sc_channel<0, bool > *p_32_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_rvalid.bind(*p_32_s_axi_rvalid);
        p_32_s_axi_rvalid->set_sv_netview_offsetfromdp(7574064);
        xsim_sc_channel<0, bool > *p_32_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_rready.bind(*p_32_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_rready);
        sc_inst_33 = new pfm_top_sim_ddr_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_ddr_0");
        sc_inst_33->xsim_set_dbg_index(448);
        xsim_sc_channel<0, bool > *p_33_c0_init_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_init_calib_complete.bind(*p_33_c0_init_calib_complete);
        p_33_c0_init_calib_complete->set_sv_netview_offsetfromdp(7574224);
        xsim_sc_channel<0, bool > *p_33_dbg_clk = new xsim_sc_channel<0, bool >();
        sc_inst_33->dbg_clk.bind(*p_33_dbg_clk);
        p_33_dbg_clk->set_sv_netview_offsetfromdp(7574280);
        xsim_sc_channel<0, bool > *p_33_c0_sys_clk_i = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_sys_clk_i.bind(*p_33_c0_sys_clk_i);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_sys_clk_i);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_dbg_bus = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->dbg_bus.bind(*p_33_dbg_bus);
        p_33_dbg_bus->set_sv_netview_offsetfromdp(7574392);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_33_c0_ddr4_adr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_33->c0_ddr4_adr.bind(*p_33_c0_ddr4_adr);
        p_33_c0_ddr4_adr->set_sv_netview_offsetfromdp(7574448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_c0_ddr4_ba = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->c0_ddr4_ba.bind(*p_33_c0_ddr4_ba);
        p_33_c0_ddr4_ba->set_sv_netview_offsetfromdp(7574504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_c0_ddr4_cke = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->c0_ddr4_cke.bind(*p_33_c0_ddr4_cke);
        p_33_c0_ddr4_cke->set_sv_netview_offsetfromdp(7574560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_c0_ddr4_cs_n = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->c0_ddr4_cs_n.bind(*p_33_c0_ddr4_cs_n);
        p_33_c0_ddr4_cs_n->set_sv_netview_offsetfromdp(7574616);
        xsim_sc_channel<72, sc_dt::sc_bv<72> > *p_33_c0_ddr4_dq = new xsim_sc_channel<72, sc_dt::sc_bv<72> >();
        sc_inst_33->c0_ddr4_dq.bind(*p_33_c0_ddr4_dq);
        p_33_c0_ddr4_dq->set_sv_netview_offsetfromdp(7574672);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_33_c0_ddr4_dqs_c = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_33->c0_ddr4_dqs_c.bind(*p_33_c0_ddr4_dqs_c);
        p_33_c0_ddr4_dqs_c->set_sv_netview_offsetfromdp(7574728);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_33_c0_ddr4_dqs_t = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_33->c0_ddr4_dqs_t.bind(*p_33_c0_ddr4_dqs_t);
        p_33_c0_ddr4_dqs_t->set_sv_netview_offsetfromdp(7574784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_c0_ddr4_odt = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->c0_ddr4_odt.bind(*p_33_c0_ddr4_odt);
        p_33_c0_ddr4_odt->set_sv_netview_offsetfromdp(7574840);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_parity = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_parity.bind(*p_33_c0_ddr4_parity);
        p_33_c0_ddr4_parity->set_sv_netview_offsetfromdp(7574896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_c0_ddr4_bg = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->c0_ddr4_bg.bind(*p_33_c0_ddr4_bg);
        p_33_c0_ddr4_bg->set_sv_netview_offsetfromdp(7574952);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_reset_n = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_reset_n.bind(*p_33_c0_ddr4_reset_n);
        p_33_c0_ddr4_reset_n->set_sv_netview_offsetfromdp(7575008);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_act_n = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_act_n.bind(*p_33_c0_ddr4_act_n);
        p_33_c0_ddr4_act_n->set_sv_netview_offsetfromdp(7575064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_c0_ddr4_ck_c = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->c0_ddr4_ck_c.bind(*p_33_c0_ddr4_ck_c);
        p_33_c0_ddr4_ck_c->set_sv_netview_offsetfromdp(7575120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_c0_ddr4_ck_t = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->c0_ddr4_ck_t.bind(*p_33_c0_ddr4_ck_t);
        p_33_c0_ddr4_ck_t->set_sv_netview_offsetfromdp(7575176);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_ui_clk.bind(*p_33_c0_ddr4_ui_clk);
        p_33_c0_ddr4_ui_clk->set_sv_netview_offsetfromdp(7575232);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_ui_clk_sync_rst = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_ui_clk_sync_rst.bind(*p_33_c0_ddr4_ui_clk_sync_rst);
        p_33_c0_ddr4_ui_clk_sync_rst->set_sv_netview_offsetfromdp(7575288);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_aresetn.bind(*p_33_c0_ddr4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_aresetn);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_ctrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_awvalid.bind(*p_33_c0_ddr4_s_axi_ctrl_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_ctrl_awvalid);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_ctrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_awready.bind(*p_33_c0_ddr4_s_axi_ctrl_awready);
        p_33_c0_ddr4_s_axi_ctrl_awready->set_sv_netview_offsetfromdp(7575456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_33_c0_ddr4_s_axi_ctrl_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_awaddr.bind(*p_33_c0_ddr4_s_axi_ctrl_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_ctrl_awaddr);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_ctrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_wvalid.bind(*p_33_c0_ddr4_s_axi_ctrl_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_ctrl_wvalid);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_ctrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_wready.bind(*p_33_c0_ddr4_s_axi_ctrl_wready);
        p_33_c0_ddr4_s_axi_ctrl_wready->set_sv_netview_offsetfromdp(7575624);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_33_c0_ddr4_s_axi_ctrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_wdata.bind(*p_33_c0_ddr4_s_axi_ctrl_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_ctrl_wdata);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_ctrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_bvalid.bind(*p_33_c0_ddr4_s_axi_ctrl_bvalid);
        p_33_c0_ddr4_s_axi_ctrl_bvalid->set_sv_netview_offsetfromdp(7575736);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_ctrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_bready.bind(*p_33_c0_ddr4_s_axi_ctrl_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_ctrl_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_c0_ddr4_s_axi_ctrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_bresp.bind(*p_33_c0_ddr4_s_axi_ctrl_bresp);
        p_33_c0_ddr4_s_axi_ctrl_bresp->set_sv_netview_offsetfromdp(7575848);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_ctrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_arvalid.bind(*p_33_c0_ddr4_s_axi_ctrl_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_ctrl_arvalid);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_ctrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_arready.bind(*p_33_c0_ddr4_s_axi_ctrl_arready);
        p_33_c0_ddr4_s_axi_ctrl_arready->set_sv_netview_offsetfromdp(7575960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_33_c0_ddr4_s_axi_ctrl_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_araddr.bind(*p_33_c0_ddr4_s_axi_ctrl_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_ctrl_araddr);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_ctrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_rvalid.bind(*p_33_c0_ddr4_s_axi_ctrl_rvalid);
        p_33_c0_ddr4_s_axi_ctrl_rvalid->set_sv_netview_offsetfromdp(7576072);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_ctrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_rready.bind(*p_33_c0_ddr4_s_axi_ctrl_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_ctrl_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_33_c0_ddr4_s_axi_ctrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_rdata.bind(*p_33_c0_ddr4_s_axi_ctrl_rdata);
        p_33_c0_ddr4_s_axi_ctrl_rdata->set_sv_netview_offsetfromdp(7576184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_c0_ddr4_s_axi_ctrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_rresp.bind(*p_33_c0_ddr4_s_axi_ctrl_rresp);
        p_33_c0_ddr4_s_axi_ctrl_rresp->set_sv_netview_offsetfromdp(7576240);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_interrupt.bind(*p_33_c0_ddr4_interrupt);
        p_33_c0_ddr4_interrupt->set_sv_netview_offsetfromdp(7576296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_c0_ddr4_s_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->c0_ddr4_s_axi_awid.bind(*p_33_c0_ddr4_s_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_33_c0_ddr4_s_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_33->c0_ddr4_s_axi_awaddr.bind(*p_33_c0_ddr4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_c0_ddr4_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->c0_ddr4_s_axi_awlen.bind(*p_33_c0_ddr4_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_c0_ddr4_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->c0_ddr4_s_axi_awsize.bind(*p_33_c0_ddr4_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_c0_ddr4_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->c0_ddr4_s_axi_awburst.bind(*p_33_c0_ddr4_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_c0_ddr4_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->c0_ddr4_s_axi_awlock.bind(*p_33_c0_ddr4_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_c0_ddr4_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->c0_ddr4_s_axi_awcache.bind(*p_33_c0_ddr4_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_c0_ddr4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->c0_ddr4_s_axi_awprot.bind(*p_33_c0_ddr4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_c0_ddr4_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->c0_ddr4_s_axi_awqos.bind(*p_33_c0_ddr4_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_awvalid.bind(*p_33_c0_ddr4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_awready.bind(*p_33_c0_ddr4_s_axi_awready);
        p_33_c0_ddr4_s_axi_awready->set_sv_netview_offsetfromdp(7576912);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_c0_ddr4_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->c0_ddr4_s_axi_wdata.bind(*p_33_c0_ddr4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_33_c0_ddr4_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_33->c0_ddr4_s_axi_wstrb.bind(*p_33_c0_ddr4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_wlast.bind(*p_33_c0_ddr4_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_wvalid.bind(*p_33_c0_ddr4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_wready.bind(*p_33_c0_ddr4_s_axi_wready);
        p_33_c0_ddr4_s_axi_wready->set_sv_netview_offsetfromdp(7577192);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_bready.bind(*p_33_c0_ddr4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_c0_ddr4_s_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->c0_ddr4_s_axi_bid.bind(*p_33_c0_ddr4_s_axi_bid);
        p_33_c0_ddr4_s_axi_bid->set_sv_netview_offsetfromdp(7577304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_c0_ddr4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->c0_ddr4_s_axi_bresp.bind(*p_33_c0_ddr4_s_axi_bresp);
        p_33_c0_ddr4_s_axi_bresp->set_sv_netview_offsetfromdp(7577360);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_bvalid.bind(*p_33_c0_ddr4_s_axi_bvalid);
        p_33_c0_ddr4_s_axi_bvalid->set_sv_netview_offsetfromdp(7577416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_c0_ddr4_s_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->c0_ddr4_s_axi_arid.bind(*p_33_c0_ddr4_s_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_33_c0_ddr4_s_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_33->c0_ddr4_s_axi_araddr.bind(*p_33_c0_ddr4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_c0_ddr4_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->c0_ddr4_s_axi_arlen.bind(*p_33_c0_ddr4_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_c0_ddr4_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->c0_ddr4_s_axi_arsize.bind(*p_33_c0_ddr4_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_c0_ddr4_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->c0_ddr4_s_axi_arburst.bind(*p_33_c0_ddr4_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_c0_ddr4_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->c0_ddr4_s_axi_arlock.bind(*p_33_c0_ddr4_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_c0_ddr4_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->c0_ddr4_s_axi_arcache.bind(*p_33_c0_ddr4_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_c0_ddr4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->c0_ddr4_s_axi_arprot.bind(*p_33_c0_ddr4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_c0_ddr4_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->c0_ddr4_s_axi_arqos.bind(*p_33_c0_ddr4_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_arvalid.bind(*p_33_c0_ddr4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_arready.bind(*p_33_c0_ddr4_s_axi_arready);
        p_33_c0_ddr4_s_axi_arready->set_sv_netview_offsetfromdp(7578032);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_rready.bind(*p_33_c0_ddr4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_rlast.bind(*p_33_c0_ddr4_s_axi_rlast);
        p_33_c0_ddr4_s_axi_rlast->set_sv_netview_offsetfromdp(7578144);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_rvalid.bind(*p_33_c0_ddr4_s_axi_rvalid);
        p_33_c0_ddr4_s_axi_rvalid->set_sv_netview_offsetfromdp(7578200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_c0_ddr4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->c0_ddr4_s_axi_rresp.bind(*p_33_c0_ddr4_s_axi_rresp);
        p_33_c0_ddr4_s_axi_rresp->set_sv_netview_offsetfromdp(7578256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_c0_ddr4_s_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->c0_ddr4_s_axi_rid.bind(*p_33_c0_ddr4_s_axi_rid);
        p_33_c0_ddr4_s_axi_rid->set_sv_netview_offsetfromdp(7578312);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_c0_ddr4_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->c0_ddr4_s_axi_rdata.bind(*p_33_c0_ddr4_s_axi_rdata);
        p_33_c0_ddr4_s_axi_rdata->set_sv_netview_offsetfromdp(7578368);
        xsim_sc_channel<0, bool > *p_33_addn_ui_clkout1 = new xsim_sc_channel<0, bool >();
        sc_inst_33->addn_ui_clkout1.bind(*p_33_addn_ui_clkout1);
        p_33_addn_ui_clkout1->set_sv_netview_offsetfromdp(7578424);
        xsim_sc_channel<0, bool > *p_33_sys_rst = new xsim_sc_channel<0, bool >();
        sc_inst_33->sys_rst.bind(*p_33_sys_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_sys_rst);
        sc_inst_34 = new pfm_top_sim_qdma_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_qdma_0");
        sc_inst_34->xsim_set_dbg_index(449);
        xsim_sc_channel<0, bool > *p_34_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_aclk.bind(*p_34_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_34_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_aresetn.bind(*p_34_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_34_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axictrl_aclk.bind(*p_34_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_34_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axictrl_aresetn.bind(*p_34_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axictrl_aresetn);
        xsim_sc_channel<0, bool > *p_34_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_aximm_aclk.bind(*p_34_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_34_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_aximm_aresetn.bind(*p_34_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->m_axictrl_awaddr.bind(*p_34_m_axictrl_awaddr);
        p_34_m_axictrl_awaddr->set_sv_netview_offsetfromdp(7578920);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->m_axictrl_awprot.bind(*p_34_m_axictrl_awprot);
        p_34_m_axictrl_awprot->set_sv_netview_offsetfromdp(7578976);
        xsim_sc_channel<0, bool > *p_34_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axictrl_awvalid.bind(*p_34_m_axictrl_awvalid);
        p_34_m_axictrl_awvalid->set_sv_netview_offsetfromdp(7579032);
        xsim_sc_channel<0, bool > *p_34_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axictrl_awready.bind(*p_34_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->m_axictrl_wdata.bind(*p_34_m_axictrl_wdata);
        p_34_m_axictrl_wdata->set_sv_netview_offsetfromdp(7579144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_axictrl_wstrb.bind(*p_34_m_axictrl_wstrb);
        p_34_m_axictrl_wstrb->set_sv_netview_offsetfromdp(7579200);
        xsim_sc_channel<0, bool > *p_34_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axictrl_wvalid.bind(*p_34_m_axictrl_wvalid);
        p_34_m_axictrl_wvalid->set_sv_netview_offsetfromdp(7579256);
        xsim_sc_channel<0, bool > *p_34_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axictrl_wready.bind(*p_34_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axictrl_wready);
        xsim_sc_channel<0, bool > *p_34_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axictrl_bvalid.bind(*p_34_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_34_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axictrl_bready.bind(*p_34_m_axictrl_bready);
        p_34_m_axictrl_bready->set_sv_netview_offsetfromdp(7579424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->m_axictrl_bresp.bind(*p_34_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axictrl_bresp);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->m_axictrl_araddr.bind(*p_34_m_axictrl_araddr);
        p_34_m_axictrl_araddr->set_sv_netview_offsetfromdp(7579536);
        xsim_sc_channel<0, bool > *p_34_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axictrl_arvalid.bind(*p_34_m_axictrl_arvalid);
        p_34_m_axictrl_arvalid->set_sv_netview_offsetfromdp(7579592);
        xsim_sc_channel<0, bool > *p_34_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axictrl_arready.bind(*p_34_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axictrl_arready);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->m_axictrl_arprot.bind(*p_34_m_axictrl_arprot);
        p_34_m_axictrl_arprot->set_sv_netview_offsetfromdp(7579704);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->m_axictrl_rdata.bind(*p_34_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->m_axictrl_rresp.bind(*p_34_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_34_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axictrl_rvalid.bind(*p_34_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_34_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axictrl_rready.bind(*p_34_m_axictrl_rready);
        p_34_m_axictrl_rready->set_sv_netview_offsetfromdp(7579928);
        xsim_sc_channel<0, bool > *p_34_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_AWVALID.bind(*p_34_m_aximm_AWVALID);
        p_34_m_aximm_AWVALID->set_sv_netview_offsetfromdp(7579984);
        xsim_sc_channel<0, bool > *p_34_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_AWREADY.bind(*p_34_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->m_aximm_AWADDR.bind(*p_34_m_aximm_AWADDR);
        p_34_m_aximm_AWADDR->set_sv_netview_offsetfromdp(7580096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->m_aximm_AWID.bind(*p_34_m_aximm_AWID);
        p_34_m_aximm_AWID->set_sv_netview_offsetfromdp(7580152);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->m_aximm_AWLEN.bind(*p_34_m_aximm_AWLEN);
        p_34_m_aximm_AWLEN->set_sv_netview_offsetfromdp(7580208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->m_aximm_AWSIZE.bind(*p_34_m_aximm_AWSIZE);
        p_34_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(7580264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->m_aximm_AWBURST.bind(*p_34_m_aximm_AWBURST);
        p_34_m_aximm_AWBURST->set_sv_netview_offsetfromdp(7580320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->m_aximm_AWLOCK.bind(*p_34_m_aximm_AWLOCK);
        p_34_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(7580376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_aximm_AWCACHE.bind(*p_34_m_aximm_AWCACHE);
        p_34_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(7580432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->m_aximm_AWPROT.bind(*p_34_m_aximm_AWPROT);
        p_34_m_aximm_AWPROT->set_sv_netview_offsetfromdp(7580488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_aximm_AWREGION.bind(*p_34_m_aximm_AWREGION);
        p_34_m_aximm_AWREGION->set_sv_netview_offsetfromdp(7580544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_aximm_AWQOS.bind(*p_34_m_aximm_AWQOS);
        p_34_m_aximm_AWQOS->set_sv_netview_offsetfromdp(7580600);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_m_aximm_AWUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->m_aximm_AWUSER.bind(*p_34_m_aximm_AWUSER);
        p_34_m_aximm_AWUSER->set_sv_netview_offsetfromdp(7580656);
        xsim_sc_channel<0, bool > *p_34_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_WVALID.bind(*p_34_m_aximm_WVALID);
        p_34_m_aximm_WVALID->set_sv_netview_offsetfromdp(7580712);
        xsim_sc_channel<0, bool > *p_34_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_WREADY.bind(*p_34_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->m_aximm_WDATA.bind(*p_34_m_aximm_WDATA);
        p_34_m_aximm_WDATA->set_sv_netview_offsetfromdp(7580824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_aximm_WSTRB.bind(*p_34_m_aximm_WSTRB);
        p_34_m_aximm_WSTRB->set_sv_netview_offsetfromdp(7580880);
        xsim_sc_channel<0, bool > *p_34_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_WLAST.bind(*p_34_m_aximm_WLAST);
        p_34_m_aximm_WLAST->set_sv_netview_offsetfromdp(7580936);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_m_aximm_WUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->m_aximm_WUSER.bind(*p_34_m_aximm_WUSER);
        p_34_m_aximm_WUSER->set_sv_netview_offsetfromdp(7580992);
        xsim_sc_channel<0, bool > *p_34_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_ARVALID.bind(*p_34_m_aximm_ARVALID);
        p_34_m_aximm_ARVALID->set_sv_netview_offsetfromdp(7581048);
        xsim_sc_channel<0, bool > *p_34_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_ARREADY.bind(*p_34_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->m_aximm_ARADDR.bind(*p_34_m_aximm_ARADDR);
        p_34_m_aximm_ARADDR->set_sv_netview_offsetfromdp(7581160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->m_aximm_ARID.bind(*p_34_m_aximm_ARID);
        p_34_m_aximm_ARID->set_sv_netview_offsetfromdp(7581216);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->m_aximm_ARLEN.bind(*p_34_m_aximm_ARLEN);
        p_34_m_aximm_ARLEN->set_sv_netview_offsetfromdp(7581272);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->m_aximm_ARSIZE.bind(*p_34_m_aximm_ARSIZE);
        p_34_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(7581328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->m_aximm_ARBURST.bind(*p_34_m_aximm_ARBURST);
        p_34_m_aximm_ARBURST->set_sv_netview_offsetfromdp(7581384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->m_aximm_ARLOCK.bind(*p_34_m_aximm_ARLOCK);
        p_34_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(7581440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_aximm_ARCACHE.bind(*p_34_m_aximm_ARCACHE);
        p_34_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(7581496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->m_aximm_ARPROT.bind(*p_34_m_aximm_ARPROT);
        p_34_m_aximm_ARPROT->set_sv_netview_offsetfromdp(7581552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_aximm_ARREGION.bind(*p_34_m_aximm_ARREGION);
        p_34_m_aximm_ARREGION->set_sv_netview_offsetfromdp(7581608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_aximm_ARQOS.bind(*p_34_m_aximm_ARQOS);
        p_34_m_aximm_ARQOS->set_sv_netview_offsetfromdp(7581664);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_m_aximm_ARUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->m_aximm_ARUSER.bind(*p_34_m_aximm_ARUSER);
        p_34_m_aximm_ARUSER->set_sv_netview_offsetfromdp(7581720);
        xsim_sc_channel<0, bool > *p_34_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_RVALID.bind(*p_34_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_34_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_RREADY.bind(*p_34_m_aximm_RREADY);
        p_34_m_aximm_RREADY->set_sv_netview_offsetfromdp(7581832);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->m_aximm_RDATA.bind(*p_34_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_34_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_RLAST.bind(*p_34_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->m_aximm_RID.bind(*p_34_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->m_aximm_RRESP.bind(*p_34_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_RRESP);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_m_aximm_RUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->m_aximm_RUSER.bind(*p_34_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_34_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_BVALID.bind(*p_34_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_34_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_BREADY.bind(*p_34_m_aximm_BREADY);
        p_34_m_aximm_BREADY->set_sv_netview_offsetfromdp(7582224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->m_aximm_BRESP.bind(*p_34_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->m_aximm_BID.bind(*p_34_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->m_aximm_BUSER.bind(*p_34_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->s_axi_awaddr.bind(*p_34_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->s_axi_awlen.bind(*p_34_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->s_axi_awsize.bind(*p_34_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->s_axi_awburst.bind(*p_34_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->s_axi_awlock.bind(*p_34_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_awcache.bind(*p_34_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->s_axi_awprot.bind(*p_34_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_awregion.bind(*p_34_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_awqos.bind(*p_34_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_34_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_awvalid.bind(*p_34_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_34_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_awready.bind(*p_34_s_axi_awready);
        p_34_s_axi_awready->set_sv_netview_offsetfromdp(7583008);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->s_axi_wdata.bind(*p_34_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_wstrb.bind(*p_34_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_34_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_wlast.bind(*p_34_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_34_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_wvalid.bind(*p_34_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_34_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_wready.bind(*p_34_s_axi_wready);
        p_34_s_axi_wready->set_sv_netview_offsetfromdp(7583288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->s_axi_bresp.bind(*p_34_s_axi_bresp);
        p_34_s_axi_bresp->set_sv_netview_offsetfromdp(7583344);
        xsim_sc_channel<0, bool > *p_34_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_bvalid.bind(*p_34_s_axi_bvalid);
        p_34_s_axi_bvalid->set_sv_netview_offsetfromdp(7583400);
        xsim_sc_channel<0, bool > *p_34_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_bready.bind(*p_34_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->s_axi_araddr.bind(*p_34_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->s_axi_arlen.bind(*p_34_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->s_axi_arsize.bind(*p_34_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->s_axi_arburst.bind(*p_34_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->s_axi_arlock.bind(*p_34_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_arcache.bind(*p_34_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->s_axi_arprot.bind(*p_34_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_arregion.bind(*p_34_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_arqos.bind(*p_34_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_34_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_arvalid.bind(*p_34_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_34_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_arready.bind(*p_34_s_axi_arready);
        p_34_s_axi_arready->set_sv_netview_offsetfromdp(7584072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->s_axi_rdata.bind(*p_34_s_axi_rdata);
        p_34_s_axi_rdata->set_sv_netview_offsetfromdp(7584128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->s_axi_rresp.bind(*p_34_s_axi_rresp);
        p_34_s_axi_rresp->set_sv_netview_offsetfromdp(7584184);
        xsim_sc_channel<0, bool > *p_34_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_rlast.bind(*p_34_s_axi_rlast);
        p_34_s_axi_rlast->set_sv_netview_offsetfromdp(7584240);
        xsim_sc_channel<0, bool > *p_34_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_rvalid.bind(*p_34_s_axi_rvalid);
        p_34_s_axi_rvalid->set_sv_netview_offsetfromdp(7584296);
        xsim_sc_channel<0, bool > *p_34_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_rready.bind(*p_34_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_rready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_34_usr_irq_req = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_34->usr_irq_req.bind(*p_34_usr_irq_req);
        (*_glb_hdl_sc_channel_map).push_back(p_34_usr_irq_req);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_34_usr_irq_ack = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_34->usr_irq_ack.bind(*p_34_usr_irq_ack);
        p_34_usr_irq_ack->set_sv_netview_offsetfromdp(7584464);
        sc_inst_35 = new pfm_top_smartconnect_0_0(".pfm_top_wrapper.pfm_top_i.static_region.smartconnect_0");
        sc_inst_35->xsim_set_dbg_index(450);
        xsim_sc_channel<0, bool > *p_35_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_35->aclk.bind(*p_35_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_35_aclk);
        xsim_sc_channel<0, bool > *p_35_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_35->aresetn.bind(*p_35_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_35_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_awid.bind(*p_35_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->S00_AXI_awaddr.bind(*p_35_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->S00_AXI_awlen.bind(*p_35_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_awsize.bind(*p_35_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_awburst.bind(*p_35_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_awlock.bind(*p_35_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_awcache.bind(*p_35_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_awprot.bind(*p_35_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_awqos.bind(*p_35_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_S00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->S00_AXI_awuser.bind(*p_35_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_awvalid.bind(*p_35_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_awready.bind(*p_35_S00_AXI_awready);
        p_35_S00_AXI_awready->set_sv_netview_offsetfromdp(7585296);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->S00_AXI_wdata.bind(*p_35_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_wstrb.bind(*p_35_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_wlast.bind(*p_35_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wlast);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_S00_AXI_wuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->S00_AXI_wuser.bind(*p_35_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_wvalid.bind(*p_35_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_wready.bind(*p_35_S00_AXI_wready);
        p_35_S00_AXI_wready->set_sv_netview_offsetfromdp(7585632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_bid.bind(*p_35_S00_AXI_bid);
        p_35_S00_AXI_bid->set_sv_netview_offsetfromdp(7585688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_bresp.bind(*p_35_S00_AXI_bresp);
        p_35_S00_AXI_bresp->set_sv_netview_offsetfromdp(7585744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_buser.bind(*p_35_S00_AXI_buser);
        p_35_S00_AXI_buser->set_sv_netview_offsetfromdp(7585800);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_bvalid.bind(*p_35_S00_AXI_bvalid);
        p_35_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7585856);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_bready.bind(*p_35_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_arid.bind(*p_35_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->S00_AXI_araddr.bind(*p_35_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->S00_AXI_arlen.bind(*p_35_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_arsize.bind(*p_35_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_arburst.bind(*p_35_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_arlock.bind(*p_35_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_arcache.bind(*p_35_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_arprot.bind(*p_35_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_arqos.bind(*p_35_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_S00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->S00_AXI_aruser.bind(*p_35_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_arvalid.bind(*p_35_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_arready.bind(*p_35_S00_AXI_arready);
        p_35_S00_AXI_arready->set_sv_netview_offsetfromdp(7586584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_rid.bind(*p_35_S00_AXI_rid);
        p_35_S00_AXI_rid->set_sv_netview_offsetfromdp(7586640);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->S00_AXI_rdata.bind(*p_35_S00_AXI_rdata);
        p_35_S00_AXI_rdata->set_sv_netview_offsetfromdp(7586696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_rresp.bind(*p_35_S00_AXI_rresp);
        p_35_S00_AXI_rresp->set_sv_netview_offsetfromdp(7586752);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_rlast.bind(*p_35_S00_AXI_rlast);
        p_35_S00_AXI_rlast->set_sv_netview_offsetfromdp(7586808);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_S00_AXI_ruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->S00_AXI_ruser.bind(*p_35_S00_AXI_ruser);
        p_35_S00_AXI_ruser->set_sv_netview_offsetfromdp(7586864);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_rvalid.bind(*p_35_S00_AXI_rvalid);
        p_35_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7586920);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_rready.bind(*p_35_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S01_AXI_awid.bind(*p_35_S01_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_S01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->S01_AXI_awaddr.bind(*p_35_S01_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_S01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->S01_AXI_awlen.bind(*p_35_S01_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S01_AXI_awsize.bind(*p_35_S01_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S01_AXI_awburst.bind(*p_35_S01_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S01_AXI_awlock.bind(*p_35_S01_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S01_AXI_awcache.bind(*p_35_S01_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S01_AXI_awprot.bind(*p_35_S01_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S01_AXI_awqos.bind(*p_35_S01_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_awqos);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S01_AXI_awuser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S01_AXI_awuser.bind(*p_35_S01_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_awuser);
        xsim_sc_channel<0, bool > *p_35_S01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S01_AXI_awvalid.bind(*p_35_S01_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_35_S01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S01_AXI_awready.bind(*p_35_S01_AXI_awready);
        p_35_S01_AXI_awready->set_sv_netview_offsetfromdp(7587648);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_S01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->S01_AXI_wdata.bind(*p_35_S01_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S01_AXI_wstrb.bind(*p_35_S01_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_35_S01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->S01_AXI_wlast.bind(*p_35_S01_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_wlast);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S01_AXI_wuser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S01_AXI_wuser.bind(*p_35_S01_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_wuser);
        xsim_sc_channel<0, bool > *p_35_S01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S01_AXI_wvalid.bind(*p_35_S01_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_35_S01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S01_AXI_wready.bind(*p_35_S01_AXI_wready);
        p_35_S01_AXI_wready->set_sv_netview_offsetfromdp(7587984);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S01_AXI_bid.bind(*p_35_S01_AXI_bid);
        p_35_S01_AXI_bid->set_sv_netview_offsetfromdp(7588040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S01_AXI_bresp.bind(*p_35_S01_AXI_bresp);
        p_35_S01_AXI_bresp->set_sv_netview_offsetfromdp(7588096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S01_AXI_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S01_AXI_buser.bind(*p_35_S01_AXI_buser);
        p_35_S01_AXI_buser->set_sv_netview_offsetfromdp(7588152);
        xsim_sc_channel<0, bool > *p_35_S01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S01_AXI_bvalid.bind(*p_35_S01_AXI_bvalid);
        p_35_S01_AXI_bvalid->set_sv_netview_offsetfromdp(7588208);
        xsim_sc_channel<0, bool > *p_35_S01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S01_AXI_bready.bind(*p_35_S01_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S01_AXI_arid.bind(*p_35_S01_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_S01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->S01_AXI_araddr.bind(*p_35_S01_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_S01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->S01_AXI_arlen.bind(*p_35_S01_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S01_AXI_arsize.bind(*p_35_S01_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S01_AXI_arburst.bind(*p_35_S01_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S01_AXI_arlock.bind(*p_35_S01_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S01_AXI_arcache.bind(*p_35_S01_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S01_AXI_arprot.bind(*p_35_S01_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S01_AXI_arqos.bind(*p_35_S01_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_arqos);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S01_AXI_aruser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S01_AXI_aruser.bind(*p_35_S01_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_aruser);
        xsim_sc_channel<0, bool > *p_35_S01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S01_AXI_arvalid.bind(*p_35_S01_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_35_S01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S01_AXI_arready.bind(*p_35_S01_AXI_arready);
        p_35_S01_AXI_arready->set_sv_netview_offsetfromdp(7588936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S01_AXI_rid.bind(*p_35_S01_AXI_rid);
        p_35_S01_AXI_rid->set_sv_netview_offsetfromdp(7588992);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_S01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->S01_AXI_rdata.bind(*p_35_S01_AXI_rdata);
        p_35_S01_AXI_rdata->set_sv_netview_offsetfromdp(7589048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S01_AXI_rresp.bind(*p_35_S01_AXI_rresp);
        p_35_S01_AXI_rresp->set_sv_netview_offsetfromdp(7589104);
        xsim_sc_channel<0, bool > *p_35_S01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->S01_AXI_rlast.bind(*p_35_S01_AXI_rlast);
        p_35_S01_AXI_rlast->set_sv_netview_offsetfromdp(7589160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S01_AXI_ruser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S01_AXI_ruser.bind(*p_35_S01_AXI_ruser);
        p_35_S01_AXI_ruser->set_sv_netview_offsetfromdp(7589216);
        xsim_sc_channel<0, bool > *p_35_S01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S01_AXI_rvalid.bind(*p_35_S01_AXI_rvalid);
        p_35_S01_AXI_rvalid->set_sv_netview_offsetfromdp(7589272);
        xsim_sc_channel<0, bool > *p_35_S01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S01_AXI_rready.bind(*p_35_S01_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M00_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M00_AXI_awaddr.bind(*p_35_M00_AXI_awaddr);
        p_35_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7589384);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M00_AXI_awlen.bind(*p_35_M00_AXI_awlen);
        p_35_M00_AXI_awlen->set_sv_netview_offsetfromdp(7589440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_awsize.bind(*p_35_M00_AXI_awsize);
        p_35_M00_AXI_awsize->set_sv_netview_offsetfromdp(7589496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_awburst.bind(*p_35_M00_AXI_awburst);
        p_35_M00_AXI_awburst->set_sv_netview_offsetfromdp(7589552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M00_AXI_awlock.bind(*p_35_M00_AXI_awlock);
        p_35_M00_AXI_awlock->set_sv_netview_offsetfromdp(7589608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_awcache.bind(*p_35_M00_AXI_awcache);
        p_35_M00_AXI_awcache->set_sv_netview_offsetfromdp(7589664);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_awprot.bind(*p_35_M00_AXI_awprot);
        p_35_M00_AXI_awprot->set_sv_netview_offsetfromdp(7589720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_awqos.bind(*p_35_M00_AXI_awqos);
        p_35_M00_AXI_awqos->set_sv_netview_offsetfromdp(7589776);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M00_AXI_awuser.bind(*p_35_M00_AXI_awuser);
        p_35_M00_AXI_awuser->set_sv_netview_offsetfromdp(7589832);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_awvalid.bind(*p_35_M00_AXI_awvalid);
        p_35_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7589888);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_awready.bind(*p_35_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M00_AXI_wdata.bind(*p_35_M00_AXI_wdata);
        p_35_M00_AXI_wdata->set_sv_netview_offsetfromdp(7590000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_wstrb.bind(*p_35_M00_AXI_wstrb);
        p_35_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7590056);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_wlast.bind(*p_35_M00_AXI_wlast);
        p_35_M00_AXI_wlast->set_sv_netview_offsetfromdp(7590112);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_wvalid.bind(*p_35_M00_AXI_wvalid);
        p_35_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7590168);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_wready.bind(*p_35_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_bresp.bind(*p_35_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_buser.bind(*p_35_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_bvalid.bind(*p_35_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_bready.bind(*p_35_M00_AXI_bready);
        p_35_M00_AXI_bready->set_sv_netview_offsetfromdp(7590448);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M00_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M00_AXI_araddr.bind(*p_35_M00_AXI_araddr);
        p_35_M00_AXI_araddr->set_sv_netview_offsetfromdp(7590504);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M00_AXI_arlen.bind(*p_35_M00_AXI_arlen);
        p_35_M00_AXI_arlen->set_sv_netview_offsetfromdp(7590560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_arsize.bind(*p_35_M00_AXI_arsize);
        p_35_M00_AXI_arsize->set_sv_netview_offsetfromdp(7590616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_arburst.bind(*p_35_M00_AXI_arburst);
        p_35_M00_AXI_arburst->set_sv_netview_offsetfromdp(7590672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M00_AXI_arlock.bind(*p_35_M00_AXI_arlock);
        p_35_M00_AXI_arlock->set_sv_netview_offsetfromdp(7590728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_arcache.bind(*p_35_M00_AXI_arcache);
        p_35_M00_AXI_arcache->set_sv_netview_offsetfromdp(7590784);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_arprot.bind(*p_35_M00_AXI_arprot);
        p_35_M00_AXI_arprot->set_sv_netview_offsetfromdp(7590840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_arqos.bind(*p_35_M00_AXI_arqos);
        p_35_M00_AXI_arqos->set_sv_netview_offsetfromdp(7590896);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M00_AXI_aruser.bind(*p_35_M00_AXI_aruser);
        p_35_M00_AXI_aruser->set_sv_netview_offsetfromdp(7590952);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_arvalid.bind(*p_35_M00_AXI_arvalid);
        p_35_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7591008);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_arready.bind(*p_35_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M00_AXI_rdata.bind(*p_35_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_rresp.bind(*p_35_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_rlast.bind(*p_35_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_rvalid.bind(*p_35_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_rready.bind(*p_35_M00_AXI_rready);
        p_35_M00_AXI_rready->set_sv_netview_offsetfromdp(7591344);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_M01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->M01_AXI_awaddr.bind(*p_35_M01_AXI_awaddr);
        p_35_M01_AXI_awaddr->set_sv_netview_offsetfromdp(7591400);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M01_AXI_awlen.bind(*p_35_M01_AXI_awlen);
        p_35_M01_AXI_awlen->set_sv_netview_offsetfromdp(7591456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M01_AXI_awsize.bind(*p_35_M01_AXI_awsize);
        p_35_M01_AXI_awsize->set_sv_netview_offsetfromdp(7591512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M01_AXI_awburst.bind(*p_35_M01_AXI_awburst);
        p_35_M01_AXI_awburst->set_sv_netview_offsetfromdp(7591568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M01_AXI_awlock.bind(*p_35_M01_AXI_awlock);
        p_35_M01_AXI_awlock->set_sv_netview_offsetfromdp(7591624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M01_AXI_awcache.bind(*p_35_M01_AXI_awcache);
        p_35_M01_AXI_awcache->set_sv_netview_offsetfromdp(7591680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M01_AXI_awprot.bind(*p_35_M01_AXI_awprot);
        p_35_M01_AXI_awprot->set_sv_netview_offsetfromdp(7591736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M01_AXI_awqos.bind(*p_35_M01_AXI_awqos);
        p_35_M01_AXI_awqos->set_sv_netview_offsetfromdp(7591792);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M01_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M01_AXI_awuser.bind(*p_35_M01_AXI_awuser);
        p_35_M01_AXI_awuser->set_sv_netview_offsetfromdp(7591848);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_awvalid.bind(*p_35_M01_AXI_awvalid);
        p_35_M01_AXI_awvalid->set_sv_netview_offsetfromdp(7591904);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_awready.bind(*p_35_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M01_AXI_wdata.bind(*p_35_M01_AXI_wdata);
        p_35_M01_AXI_wdata->set_sv_netview_offsetfromdp(7592016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M01_AXI_wstrb.bind(*p_35_M01_AXI_wstrb);
        p_35_M01_AXI_wstrb->set_sv_netview_offsetfromdp(7592072);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_wlast.bind(*p_35_M01_AXI_wlast);
        p_35_M01_AXI_wlast->set_sv_netview_offsetfromdp(7592128);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_wvalid.bind(*p_35_M01_AXI_wvalid);
        p_35_M01_AXI_wvalid->set_sv_netview_offsetfromdp(7592184);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_wready.bind(*p_35_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M01_AXI_bresp.bind(*p_35_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M01_AXI_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M01_AXI_buser.bind(*p_35_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_bvalid.bind(*p_35_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_bready.bind(*p_35_M01_AXI_bready);
        p_35_M01_AXI_bready->set_sv_netview_offsetfromdp(7592464);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_M01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->M01_AXI_araddr.bind(*p_35_M01_AXI_araddr);
        p_35_M01_AXI_araddr->set_sv_netview_offsetfromdp(7592520);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M01_AXI_arlen.bind(*p_35_M01_AXI_arlen);
        p_35_M01_AXI_arlen->set_sv_netview_offsetfromdp(7592576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M01_AXI_arsize.bind(*p_35_M01_AXI_arsize);
        p_35_M01_AXI_arsize->set_sv_netview_offsetfromdp(7592632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M01_AXI_arburst.bind(*p_35_M01_AXI_arburst);
        p_35_M01_AXI_arburst->set_sv_netview_offsetfromdp(7592688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M01_AXI_arlock.bind(*p_35_M01_AXI_arlock);
        p_35_M01_AXI_arlock->set_sv_netview_offsetfromdp(7592744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M01_AXI_arcache.bind(*p_35_M01_AXI_arcache);
        p_35_M01_AXI_arcache->set_sv_netview_offsetfromdp(7592800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M01_AXI_arprot.bind(*p_35_M01_AXI_arprot);
        p_35_M01_AXI_arprot->set_sv_netview_offsetfromdp(7592856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M01_AXI_arqos.bind(*p_35_M01_AXI_arqos);
        p_35_M01_AXI_arqos->set_sv_netview_offsetfromdp(7592912);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M01_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M01_AXI_aruser.bind(*p_35_M01_AXI_aruser);
        p_35_M01_AXI_aruser->set_sv_netview_offsetfromdp(7592968);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_arvalid.bind(*p_35_M01_AXI_arvalid);
        p_35_M01_AXI_arvalid->set_sv_netview_offsetfromdp(7593024);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_arready.bind(*p_35_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M01_AXI_rdata.bind(*p_35_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M01_AXI_rresp.bind(*p_35_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_rlast.bind(*p_35_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_rvalid.bind(*p_35_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_rready.bind(*p_35_M01_AXI_rready);
        p_35_M01_AXI_rready->set_sv_netview_offsetfromdp(7593360);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_M02_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->M02_AXI_awaddr.bind(*p_35_M02_AXI_awaddr);
        p_35_M02_AXI_awaddr->set_sv_netview_offsetfromdp(7593416);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M02_AXI_awlen.bind(*p_35_M02_AXI_awlen);
        p_35_M02_AXI_awlen->set_sv_netview_offsetfromdp(7593472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M02_AXI_awsize.bind(*p_35_M02_AXI_awsize);
        p_35_M02_AXI_awsize->set_sv_netview_offsetfromdp(7593528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M02_AXI_awburst.bind(*p_35_M02_AXI_awburst);
        p_35_M02_AXI_awburst->set_sv_netview_offsetfromdp(7593584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M02_AXI_awlock.bind(*p_35_M02_AXI_awlock);
        p_35_M02_AXI_awlock->set_sv_netview_offsetfromdp(7593640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M02_AXI_awcache.bind(*p_35_M02_AXI_awcache);
        p_35_M02_AXI_awcache->set_sv_netview_offsetfromdp(7593696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M02_AXI_awprot.bind(*p_35_M02_AXI_awprot);
        p_35_M02_AXI_awprot->set_sv_netview_offsetfromdp(7593752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M02_AXI_awqos.bind(*p_35_M02_AXI_awqos);
        p_35_M02_AXI_awqos->set_sv_netview_offsetfromdp(7593808);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M02_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M02_AXI_awuser.bind(*p_35_M02_AXI_awuser);
        p_35_M02_AXI_awuser->set_sv_netview_offsetfromdp(7593864);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_awvalid.bind(*p_35_M02_AXI_awvalid);
        p_35_M02_AXI_awvalid->set_sv_netview_offsetfromdp(7593920);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_awready.bind(*p_35_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M02_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M02_AXI_wdata.bind(*p_35_M02_AXI_wdata);
        p_35_M02_AXI_wdata->set_sv_netview_offsetfromdp(7594032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M02_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M02_AXI_wstrb.bind(*p_35_M02_AXI_wstrb);
        p_35_M02_AXI_wstrb->set_sv_netview_offsetfromdp(7594088);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_wlast.bind(*p_35_M02_AXI_wlast);
        p_35_M02_AXI_wlast->set_sv_netview_offsetfromdp(7594144);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_wvalid.bind(*p_35_M02_AXI_wvalid);
        p_35_M02_AXI_wvalid->set_sv_netview_offsetfromdp(7594200);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_wready.bind(*p_35_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M02_AXI_bresp.bind(*p_35_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M02_AXI_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M02_AXI_buser.bind(*p_35_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_buser);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_bvalid.bind(*p_35_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_bready.bind(*p_35_M02_AXI_bready);
        p_35_M02_AXI_bready->set_sv_netview_offsetfromdp(7594480);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_M02_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->M02_AXI_araddr.bind(*p_35_M02_AXI_araddr);
        p_35_M02_AXI_araddr->set_sv_netview_offsetfromdp(7594536);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M02_AXI_arlen.bind(*p_35_M02_AXI_arlen);
        p_35_M02_AXI_arlen->set_sv_netview_offsetfromdp(7594592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M02_AXI_arsize.bind(*p_35_M02_AXI_arsize);
        p_35_M02_AXI_arsize->set_sv_netview_offsetfromdp(7594648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M02_AXI_arburst.bind(*p_35_M02_AXI_arburst);
        p_35_M02_AXI_arburst->set_sv_netview_offsetfromdp(7594704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M02_AXI_arlock.bind(*p_35_M02_AXI_arlock);
        p_35_M02_AXI_arlock->set_sv_netview_offsetfromdp(7594760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M02_AXI_arcache.bind(*p_35_M02_AXI_arcache);
        p_35_M02_AXI_arcache->set_sv_netview_offsetfromdp(7594816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M02_AXI_arprot.bind(*p_35_M02_AXI_arprot);
        p_35_M02_AXI_arprot->set_sv_netview_offsetfromdp(7594872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M02_AXI_arqos.bind(*p_35_M02_AXI_arqos);
        p_35_M02_AXI_arqos->set_sv_netview_offsetfromdp(7594928);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M02_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M02_AXI_aruser.bind(*p_35_M02_AXI_aruser);
        p_35_M02_AXI_aruser->set_sv_netview_offsetfromdp(7594984);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_arvalid.bind(*p_35_M02_AXI_arvalid);
        p_35_M02_AXI_arvalid->set_sv_netview_offsetfromdp(7595040);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_arready.bind(*p_35_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M02_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M02_AXI_rdata.bind(*p_35_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M02_AXI_rresp.bind(*p_35_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_rlast.bind(*p_35_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_rlast);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_rvalid.bind(*p_35_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_rready.bind(*p_35_M02_AXI_rready);
        p_35_M02_AXI_rready->set_sv_netview_offsetfromdp(7595376);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_M03_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->M03_AXI_awaddr.bind(*p_35_M03_AXI_awaddr);
        p_35_M03_AXI_awaddr->set_sv_netview_offsetfromdp(7595432);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M03_AXI_awlen.bind(*p_35_M03_AXI_awlen);
        p_35_M03_AXI_awlen->set_sv_netview_offsetfromdp(7595488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M03_AXI_awsize.bind(*p_35_M03_AXI_awsize);
        p_35_M03_AXI_awsize->set_sv_netview_offsetfromdp(7595544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M03_AXI_awburst.bind(*p_35_M03_AXI_awburst);
        p_35_M03_AXI_awburst->set_sv_netview_offsetfromdp(7595600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M03_AXI_awlock.bind(*p_35_M03_AXI_awlock);
        p_35_M03_AXI_awlock->set_sv_netview_offsetfromdp(7595656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M03_AXI_awcache.bind(*p_35_M03_AXI_awcache);
        p_35_M03_AXI_awcache->set_sv_netview_offsetfromdp(7595712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M03_AXI_awprot.bind(*p_35_M03_AXI_awprot);
        p_35_M03_AXI_awprot->set_sv_netview_offsetfromdp(7595768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M03_AXI_awqos.bind(*p_35_M03_AXI_awqos);
        p_35_M03_AXI_awqos->set_sv_netview_offsetfromdp(7595824);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M03_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M03_AXI_awuser.bind(*p_35_M03_AXI_awuser);
        p_35_M03_AXI_awuser->set_sv_netview_offsetfromdp(7595880);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_awvalid.bind(*p_35_M03_AXI_awvalid);
        p_35_M03_AXI_awvalid->set_sv_netview_offsetfromdp(7595936);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_awready.bind(*p_35_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M03_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M03_AXI_wdata.bind(*p_35_M03_AXI_wdata);
        p_35_M03_AXI_wdata->set_sv_netview_offsetfromdp(7596048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M03_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M03_AXI_wstrb.bind(*p_35_M03_AXI_wstrb);
        p_35_M03_AXI_wstrb->set_sv_netview_offsetfromdp(7596104);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_wlast.bind(*p_35_M03_AXI_wlast);
        p_35_M03_AXI_wlast->set_sv_netview_offsetfromdp(7596160);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_wvalid.bind(*p_35_M03_AXI_wvalid);
        p_35_M03_AXI_wvalid->set_sv_netview_offsetfromdp(7596216);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_wready.bind(*p_35_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M03_AXI_bresp.bind(*p_35_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M03_AXI_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M03_AXI_buser.bind(*p_35_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_buser);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_bvalid.bind(*p_35_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_bready.bind(*p_35_M03_AXI_bready);
        p_35_M03_AXI_bready->set_sv_netview_offsetfromdp(7596496);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_M03_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->M03_AXI_araddr.bind(*p_35_M03_AXI_araddr);
        p_35_M03_AXI_araddr->set_sv_netview_offsetfromdp(7596552);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M03_AXI_arlen.bind(*p_35_M03_AXI_arlen);
        p_35_M03_AXI_arlen->set_sv_netview_offsetfromdp(7596608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M03_AXI_arsize.bind(*p_35_M03_AXI_arsize);
        p_35_M03_AXI_arsize->set_sv_netview_offsetfromdp(7596664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M03_AXI_arburst.bind(*p_35_M03_AXI_arburst);
        p_35_M03_AXI_arburst->set_sv_netview_offsetfromdp(7596720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M03_AXI_arlock.bind(*p_35_M03_AXI_arlock);
        p_35_M03_AXI_arlock->set_sv_netview_offsetfromdp(7596776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M03_AXI_arcache.bind(*p_35_M03_AXI_arcache);
        p_35_M03_AXI_arcache->set_sv_netview_offsetfromdp(7596832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M03_AXI_arprot.bind(*p_35_M03_AXI_arprot);
        p_35_M03_AXI_arprot->set_sv_netview_offsetfromdp(7596888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M03_AXI_arqos.bind(*p_35_M03_AXI_arqos);
        p_35_M03_AXI_arqos->set_sv_netview_offsetfromdp(7596944);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M03_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M03_AXI_aruser.bind(*p_35_M03_AXI_aruser);
        p_35_M03_AXI_aruser->set_sv_netview_offsetfromdp(7597000);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_arvalid.bind(*p_35_M03_AXI_arvalid);
        p_35_M03_AXI_arvalid->set_sv_netview_offsetfromdp(7597056);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_arready.bind(*p_35_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M03_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M03_AXI_rdata.bind(*p_35_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M03_AXI_rresp.bind(*p_35_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_rresp);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_rlast.bind(*p_35_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_rlast);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_rvalid.bind(*p_35_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_rready.bind(*p_35_M03_AXI_rready);
        p_35_M03_AXI_rready->set_sv_netview_offsetfromdp(7597392);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_M04_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->M04_AXI_awaddr.bind(*p_35_M04_AXI_awaddr);
        p_35_M04_AXI_awaddr->set_sv_netview_offsetfromdp(7597448);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M04_AXI_awlen.bind(*p_35_M04_AXI_awlen);
        p_35_M04_AXI_awlen->set_sv_netview_offsetfromdp(7597504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M04_AXI_awsize.bind(*p_35_M04_AXI_awsize);
        p_35_M04_AXI_awsize->set_sv_netview_offsetfromdp(7597560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M04_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M04_AXI_awburst.bind(*p_35_M04_AXI_awburst);
        p_35_M04_AXI_awburst->set_sv_netview_offsetfromdp(7597616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M04_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M04_AXI_awlock.bind(*p_35_M04_AXI_awlock);
        p_35_M04_AXI_awlock->set_sv_netview_offsetfromdp(7597672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M04_AXI_awcache.bind(*p_35_M04_AXI_awcache);
        p_35_M04_AXI_awcache->set_sv_netview_offsetfromdp(7597728);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M04_AXI_awprot.bind(*p_35_M04_AXI_awprot);
        p_35_M04_AXI_awprot->set_sv_netview_offsetfromdp(7597784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M04_AXI_awqos.bind(*p_35_M04_AXI_awqos);
        p_35_M04_AXI_awqos->set_sv_netview_offsetfromdp(7597840);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M04_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M04_AXI_awuser.bind(*p_35_M04_AXI_awuser);
        p_35_M04_AXI_awuser->set_sv_netview_offsetfromdp(7597896);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_awvalid.bind(*p_35_M04_AXI_awvalid);
        p_35_M04_AXI_awvalid->set_sv_netview_offsetfromdp(7597952);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_awready.bind(*p_35_M04_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M04_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M04_AXI_wdata.bind(*p_35_M04_AXI_wdata);
        p_35_M04_AXI_wdata->set_sv_netview_offsetfromdp(7598064);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M04_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M04_AXI_wstrb.bind(*p_35_M04_AXI_wstrb);
        p_35_M04_AXI_wstrb->set_sv_netview_offsetfromdp(7598120);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_wlast.bind(*p_35_M04_AXI_wlast);
        p_35_M04_AXI_wlast->set_sv_netview_offsetfromdp(7598176);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_wvalid.bind(*p_35_M04_AXI_wvalid);
        p_35_M04_AXI_wvalid->set_sv_netview_offsetfromdp(7598232);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_wready.bind(*p_35_M04_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M04_AXI_bresp.bind(*p_35_M04_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M04_AXI_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M04_AXI_buser.bind(*p_35_M04_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_buser);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_bvalid.bind(*p_35_M04_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_bready.bind(*p_35_M04_AXI_bready);
        p_35_M04_AXI_bready->set_sv_netview_offsetfromdp(7598512);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_M04_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->M04_AXI_araddr.bind(*p_35_M04_AXI_araddr);
        p_35_M04_AXI_araddr->set_sv_netview_offsetfromdp(7598568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M04_AXI_arlen.bind(*p_35_M04_AXI_arlen);
        p_35_M04_AXI_arlen->set_sv_netview_offsetfromdp(7598624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M04_AXI_arsize.bind(*p_35_M04_AXI_arsize);
        p_35_M04_AXI_arsize->set_sv_netview_offsetfromdp(7598680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M04_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M04_AXI_arburst.bind(*p_35_M04_AXI_arburst);
        p_35_M04_AXI_arburst->set_sv_netview_offsetfromdp(7598736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M04_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M04_AXI_arlock.bind(*p_35_M04_AXI_arlock);
        p_35_M04_AXI_arlock->set_sv_netview_offsetfromdp(7598792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M04_AXI_arcache.bind(*p_35_M04_AXI_arcache);
        p_35_M04_AXI_arcache->set_sv_netview_offsetfromdp(7598848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M04_AXI_arprot.bind(*p_35_M04_AXI_arprot);
        p_35_M04_AXI_arprot->set_sv_netview_offsetfromdp(7598904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M04_AXI_arqos.bind(*p_35_M04_AXI_arqos);
        p_35_M04_AXI_arqos->set_sv_netview_offsetfromdp(7598960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M04_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M04_AXI_aruser.bind(*p_35_M04_AXI_aruser);
        p_35_M04_AXI_aruser->set_sv_netview_offsetfromdp(7599016);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_arvalid.bind(*p_35_M04_AXI_arvalid);
        p_35_M04_AXI_arvalid->set_sv_netview_offsetfromdp(7599072);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_arready.bind(*p_35_M04_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M04_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M04_AXI_rdata.bind(*p_35_M04_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M04_AXI_rresp.bind(*p_35_M04_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_rresp);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_rlast.bind(*p_35_M04_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_rlast);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_rvalid.bind(*p_35_M04_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_rready.bind(*p_35_M04_AXI_rready);
        p_35_M04_AXI_rready->set_sv_netview_offsetfromdp(7599408);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
        delete sc_inst_23;
        delete sc_inst_24;
        delete sc_inst_25;
        delete sc_inst_26;
        delete sc_inst_27;
        delete sc_inst_28;
        delete sc_inst_29;
        delete sc_inst_30;
        delete sc_inst_31;
        delete sc_inst_32;
        delete sc_inst_33;
        delete sc_inst_34;
        delete sc_inst_35;
    }
